id: ChineseCheckersLogicServer
language: CSharp
name:
  Default: ChineseCheckersLogicServer
qualifiedName:
  Default: ChineseCheckersLogicServer
type: Assembly
modifiers: {}
items:
- id: ChineseCheckersLogicServer.Contracts
  commentId: N:ChineseCheckersLogicServer.Contracts
  language: CSharp
  name:
    CSharp: ChineseCheckersLogicServer.Contracts
    VB: ChineseCheckersLogicServer.Contracts
  nameWithType:
    CSharp: ChineseCheckersLogicServer.Contracts
    VB: ChineseCheckersLogicServer.Contracts
  qualifiedName:
    CSharp: ChineseCheckersLogicServer.Contracts
    VB: ChineseCheckersLogicServer.Contracts
  type: Namespace
  assemblies:
  - ChineseCheckersLogicServer
  modifiers: {}
  items:
  - id: ChineseCheckersLogicServer.Contracts.IBoard
    commentId: T:ChineseCheckersLogicServer.Contracts.IBoard
    language: CSharp
    name:
      CSharp: IBoard
      VB: IBoard
    nameWithType:
      CSharp: IBoard
      VB: IBoard
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.IBoard
      VB: ChineseCheckersLogicServer.Contracts.IBoard
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IBoard.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: IBoard
      path: Contracts/IBoard.cs
      startLine: 9
    syntax:
      content:
        CSharp: >-
          [ServiceContract]

          public interface IBoard
        VB: >-
          <ServiceContract>

          Public Interface IBoard
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame(System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame(System.String)
      language: CSharp
      name:
        CSharp: ValidateGame(String)
        VB: ValidateGame(String)
      nameWithType:
        CSharp: IBoard.ValidateGame(String)
        VB: IBoard.ValidateGame(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame(System.String)
        VB: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IBoard.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ValidateGame
        path: Contracts/IBoard.cs
        startLine: 11
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            bool ValidateGame(string idRoom)
          VB: >-
            <OperationContract>

            Function ValidateGame(idRoom As String) As Boolean
        parameters:
        - id: idRoom
          type: System.String
        return:
          type: System.Boolean
      overload: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard(System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard(System.String)
      language: CSharp
      name:
        CSharp: ValidateBoard(String)
        VB: ValidateBoard(String)
      nameWithType:
        CSharp: IBoard.ValidateBoard(String)
        VB: IBoard.ValidateBoard(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard(System.String)
        VB: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IBoard.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ValidateBoard
        path: Contracts/IBoard.cs
        startLine: 13
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            bool ValidateBoard(string idRoom)
          VB: >-
            <OperationContract>

            Function ValidateBoard(idRoom As String) As Boolean
        parameters:
        - id: idRoom
          type: System.String
        return:
          type: System.Boolean
      overload: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
  - id: ChineseCheckersLogicServer.Contracts.ITurn
    commentId: T:ChineseCheckersLogicServer.Contracts.ITurn
    language: CSharp
    name:
      CSharp: ITurn
      VB: ITurn
    nameWithType:
      CSharp: ITurn
      VB: ITurn
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.ITurn
      VB: ChineseCheckersLogicServer.Contracts.ITurn
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IBoard.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: ITurn
      path: Contracts/IBoard.cs
      startLine: 17
    syntax:
      content:
        CSharp: >-
          [ServiceContract(CallbackContract = typeof(ITurnCallback))]

          public interface ITurn
        VB: >-
          <ServiceContract(CallbackContract:=GetType(ITurnCallback))>

          Public Interface ITurn
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
      namedArguments:
      - name: CallbackContract
        type: System.Type
        value: ChineseCheckersLogicServer.Contracts.ITurnCallback
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn(System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn(System.String)
      language: CSharp
      name:
        CSharp: SendToTurn(String)
        VB: SendToTurn(String)
      nameWithType:
        CSharp: ITurn.SendToTurn(String)
        VB: ITurn.SendToTurn(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn(System.String)
        VB: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IBoard.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: SendToTurn
        path: Contracts/IBoard.cs
        startLine: 19
      syntax:
        content:
          CSharp: >-
            [OperationContract(IsOneWay = true)]

            void SendToTurn(string idRoom)
          VB: >-
            <OperationContract(IsOneWay:=True)>

            Sub SendToTurn(idRoom As String)
        parameters:
        - id: idRoom
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
        namedArguments:
        - name: IsOneWay
          type: System.Boolean
          value: true
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame(System.String,System.String)
      language: CSharp
      name:
        CSharp: AddPlayerInGame(String, String)
        VB: AddPlayerInGame(String, String)
      nameWithType:
        CSharp: ITurn.AddPlayerInGame(String, String)
        VB: ITurn.AddPlayerInGame(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame(System.String, System.String)
        VB: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IBoard.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AddPlayerInGame
        path: Contracts/IBoard.cs
        startLine: 21
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void AddPlayerInGame(string gamertag, string idRoom)
          VB: >-
            <OperationContract>

            Sub AddPlayerInGame(gamertag As String, idRoom As String)
        parameters:
        - id: gamertag
          type: System.String
        - id: idRoom
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame(System.String,System.String)
      language: CSharp
      name:
        CSharp: RemovePlayerFromGame(String, String)
        VB: RemovePlayerFromGame(String, String)
      nameWithType:
        CSharp: ITurn.RemovePlayerFromGame(String, String)
        VB: ITurn.RemovePlayerFromGame(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame(System.String, System.String)
        VB: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IBoard.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: RemovePlayerFromGame
        path: Contracts/IBoard.cs
        startLine: 24
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void RemovePlayerFromGame(string gamertag, string idRoom)
          VB: >-
            <OperationContract>

            Sub RemovePlayerFromGame(gamertag As String, idRoom As String)
        parameters:
        - id: gamertag
          type: System.String
        - id: idRoom
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
      language: CSharp
      name:
        CSharp: UpdateBoard(Point, Point, String)
        VB: UpdateBoard(Point, Point, String)
      nameWithType:
        CSharp: ITurn.UpdateBoard(Point, Point, String)
        VB: ITurn.UpdateBoard(Point, Point, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard(System.Windows.Point, System.Windows.Point, System.String)
        VB: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard(System.Windows.Point, System.Windows.Point, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IBoard.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdateBoard
        path: Contracts/IBoard.cs
        startLine: 26
      syntax:
        content:
          CSharp: >-
            [OperationContract(IsOneWay = true)]

            void UpdateBoard(Point marble, Point position, string idRoom)
          VB: >-
            <OperationContract(IsOneWay:=True)>

            Sub UpdateBoard(marble As Point, position As Point, idRoom As String)
        parameters:
        - id: marble
          type: System.Windows.Point
        - id: position
          type: System.Windows.Point
        - id: idRoom
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
        namedArguments:
        - name: IsOneWay
          type: System.Boolean
          value: true
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer(System.String,System.String)
      language: CSharp
      name:
        CSharp: WinningPlayer(String, String)
        VB: WinningPlayer(String, String)
      nameWithType:
        CSharp: ITurn.WinningPlayer(String, String)
        VB: ITurn.WinningPlayer(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer(System.String, System.String)
        VB: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IBoard.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: WinningPlayer
        path: Contracts/IBoard.cs
        startLine: 28
      syntax:
        content:
          CSharp: >-
            [OperationContract(IsOneWay = true)]

            void WinningPlayer(string idRoom, string gamertag)
          VB: >-
            <OperationContract(IsOneWay:=True)>

            Sub WinningPlayer(idRoom As String, gamertag As String)
        parameters:
        - id: idRoom
          type: System.String
        - id: gamertag
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
        namedArguments:
        - name: IsOneWay
          type: System.Boolean
          value: true
      modifiers:
        CSharp: []
        VB: []
  - id: ChineseCheckersLogicServer.Contracts.ITurnCallback
    commentId: T:ChineseCheckersLogicServer.Contracts.ITurnCallback
    language: CSharp
    name:
      CSharp: ITurnCallback
      VB: ITurnCallback
    nameWithType:
      CSharp: ITurnCallback
      VB: ITurnCallback
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.ITurnCallback
      VB: ChineseCheckersLogicServer.Contracts.ITurnCallback
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IBoard.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: ITurnCallback
      path: Contracts/IBoard.cs
      startLine: 32
    syntax:
      content:
        CSharp: >-
          [ServiceContract]

          public interface ITurnCallback
        VB: >-
          <ServiceContract>

          Public Interface ITurnCallback
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.ITurnCallback.GameTurn(System.String,System.Int32)
      commentId: M:ChineseCheckersLogicServer.Contracts.ITurnCallback.GameTurn(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: GameTurn(String, Int32)
        VB: GameTurn(String, Int32)
      nameWithType:
        CSharp: ITurnCallback.GameTurn(String, Int32)
        VB: ITurnCallback.GameTurn(String, Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.ITurnCallback.GameTurn(System.String, System.Int32)
        VB: ChineseCheckersLogicServer.Contracts.ITurnCallback.GameTurn(System.String, System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IBoard.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GameTurn
        path: Contracts/IBoard.cs
        startLine: 34
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void GameTurn(string turn, int type)
          VB: >-
            <OperationContract>

            Sub GameTurn(turn As String, type As Integer)
        parameters:
        - id: turn
          type: System.String
        - id: type
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.ITurnCallback.GameTurn*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.ITurnCallback.UpdateBoardCallback(System.Windows.Point,System.Windows.Point)
      commentId: M:ChineseCheckersLogicServer.Contracts.ITurnCallback.UpdateBoardCallback(System.Windows.Point,System.Windows.Point)
      language: CSharp
      name:
        CSharp: UpdateBoardCallback(Point, Point)
        VB: UpdateBoardCallback(Point, Point)
      nameWithType:
        CSharp: ITurnCallback.UpdateBoardCallback(Point, Point)
        VB: ITurnCallback.UpdateBoardCallback(Point, Point)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.ITurnCallback.UpdateBoardCallback(System.Windows.Point, System.Windows.Point)
        VB: ChineseCheckersLogicServer.Contracts.ITurnCallback.UpdateBoardCallback(System.Windows.Point, System.Windows.Point)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IBoard.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdateBoardCallback
        path: Contracts/IBoard.cs
        startLine: 36
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void UpdateBoardCallback(Point marble, Point position)
          VB: >-
            <OperationContract>

            Sub UpdateBoardCallback(marble As Point, position As Point)
        parameters:
        - id: marble
          type: System.Windows.Point
        - id: position
          type: System.Windows.Point
      overload: ChineseCheckersLogicServer.Contracts.ITurnCallback.UpdateBoardCallback*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.ITurnCallback.WinningPlayerCallback(System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.ITurnCallback.WinningPlayerCallback(System.String)
      language: CSharp
      name:
        CSharp: WinningPlayerCallback(String)
        VB: WinningPlayerCallback(String)
      nameWithType:
        CSharp: ITurnCallback.WinningPlayerCallback(String)
        VB: ITurnCallback.WinningPlayerCallback(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.ITurnCallback.WinningPlayerCallback(System.String)
        VB: ChineseCheckersLogicServer.Contracts.ITurnCallback.WinningPlayerCallback(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IBoard.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: WinningPlayerCallback
        path: Contracts/IBoard.cs
        startLine: 38
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void WinningPlayerCallback(string gamertag)
          VB: >-
            <OperationContract>

            Sub WinningPlayerCallback(gamertag As String)
        parameters:
        - id: gamertag
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.ITurnCallback.WinningPlayerCallback*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
  - id: ChineseCheckersLogicServer.Contracts.IFriendship
    commentId: T:ChineseCheckersLogicServer.Contracts.IFriendship
    language: CSharp
    name:
      CSharp: IFriendship
      VB: IFriendship
    nameWithType:
      CSharp: IFriendship
      VB: IFriendship
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.IFriendship
      VB: ChineseCheckersLogicServer.Contracts.IFriendship
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IFriendship.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: IFriendship
      path: Contracts/IFriendship.cs
      startLine: 9
    syntax:
      content:
        CSharp: >-
          [ServiceContract]

          public interface IFriendship
        VB: >-
          <ServiceContract>

          Public Interface IFriendship
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
      commentId: M:ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
      language: CSharp
      name:
        CSharp: AddFriendPlayer(FriendshipModel)
        VB: AddFriendPlayer(FriendshipModel)
      nameWithType:
        CSharp: IFriendship.AddFriendPlayer(FriendshipModel)
        VB: IFriendship.AddFriendPlayer(FriendshipModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
        VB: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IFriendship.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AddFriendPlayer
        path: Contracts/IFriendship.cs
        startLine: 11
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int AddFriendPlayer(FriendshipModel friendshipModel)
          VB: >-
            <OperationContract>

            Function AddFriendPlayer(friendshipModel As FriendshipModel) As Integer
        parameters:
        - id: friendshipModel
          type: ChineseCheckersLogicServer.Model.FriendshipModel
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer(System.Int32,System.Int32,System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer(System.Int32,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: UpdateFriendPlayer(Int32, Int32, String)
        VB: UpdateFriendPlayer(Int32, Int32, String)
      nameWithType:
        CSharp: IFriendship.UpdateFriendPlayer(Int32, Int32, String)
        VB: IFriendship.UpdateFriendPlayer(Int32, Int32, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer(System.Int32, System.Int32, System.String)
        VB: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer(System.Int32, System.Int32, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IFriendship.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdateFriendPlayer
        path: Contracts/IFriendship.cs
        startLine: 13
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int UpdateFriendPlayer(int idUser, int idFriend, string requestStatus)
          VB: >-
            <OperationContract>

            Function UpdateFriendPlayer(idUser As Integer, idFriend As Integer, requestStatus As String) As Integer
        parameters:
        - id: idUser
          type: System.Int32
        - id: idFriend
          type: System.Int32
        - id: requestStatus
          type: System.String
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
      commentId: M:ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
      language: CSharp
      name:
        CSharp: DeleteFriendPlayer(FriendshipModel)
        VB: DeleteFriendPlayer(FriendshipModel)
      nameWithType:
        CSharp: IFriendship.DeleteFriendPlayer(FriendshipModel)
        VB: IFriendship.DeleteFriendPlayer(FriendshipModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
        VB: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IFriendship.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: DeleteFriendPlayer
        path: Contracts/IFriendship.cs
        startLine: 15
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int DeleteFriendPlayer(FriendshipModel friendshipModel)
          VB: >-
            <OperationContract>

            Function DeleteFriendPlayer(friendshipModel As FriendshipModel) As Integer
        parameters:
        - id: friendshipModel
          type: ChineseCheckersLogicServer.Model.FriendshipModel
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest(System.Int32,System.Int32,System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest(System.Int32,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: ValidateFriendRequest(Int32, Int32, String)
        VB: ValidateFriendRequest(Int32, Int32, String)
      nameWithType:
        CSharp: IFriendship.ValidateFriendRequest(Int32, Int32, String)
        VB: IFriendship.ValidateFriendRequest(Int32, Int32, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest(System.Int32, System.Int32, System.String)
        VB: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest(System.Int32, System.Int32, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IFriendship.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ValidateFriendRequest
        path: Contracts/IFriendship.cs
        startLine: 17
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int ValidateFriendRequest(int idUser, int idFriend, string requestStatus)
          VB: >-
            <OperationContract>

            Function ValidateFriendRequest(idUser As Integer, idFriend As Integer, requestStatus As String) As Integer
        parameters:
        - id: idUser
          type: System.Int32
        - id: idFriend
          type: System.Int32
        - id: requestStatus
          type: System.String
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
  - id: ChineseCheckersLogicServer.Contracts.IUserFriendRequest
    commentId: T:ChineseCheckersLogicServer.Contracts.IUserFriendRequest
    language: CSharp
    name:
      CSharp: IUserFriendRequest
      VB: IUserFriendRequest
    nameWithType:
      CSharp: IUserFriendRequest
      VB: IUserFriendRequest
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.IUserFriendRequest
      VB: ChineseCheckersLogicServer.Contracts.IUserFriendRequest
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IFriendship.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: IUserFriendRequest
      path: Contracts/IFriendship.cs
      startLine: 21
    syntax:
      content:
        CSharp: >-
          [ServiceContract(CallbackContract = typeof(IUserFriendRequestCallback))]

          public interface IUserFriendRequest
        VB: >-
          <ServiceContract(CallbackContract:=GetType(IUserFriendRequestCallback))>

          Public Interface IUserFriendRequest
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
      namedArguments:
      - name: CallbackContract
        type: System.Type
        value: ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest(System.Int32)
      language: CSharp
      name:
        CSharp: GetFriendRequest(Int32)
        VB: GetFriendRequest(Int32)
      nameWithType:
        CSharp: IUserFriendRequest.GetFriendRequest(Int32)
        VB: IUserFriendRequest.GetFriendRequest(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest(System.Int32)
        VB: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IFriendship.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetFriendRequest
        path: Contracts/IFriendship.cs
        startLine: 23
      syntax:
        content:
          CSharp: >-
            [OperationContract(IsOneWay = true)]

            void GetFriendRequest(int idUser)
          VB: >-
            <OperationContract(IsOneWay:=True)>

            Sub GetFriendRequest(idUser As Integer)
        parameters:
        - id: idUser
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
        namedArguments:
        - name: IsOneWay
          type: System.Boolean
          value: true
      modifiers:
        CSharp: []
        VB: []
  - id: ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback
    commentId: T:ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback
    language: CSharp
    name:
      CSharp: IUserFriendRequestCallback
      VB: IUserFriendRequestCallback
    nameWithType:
      CSharp: IUserFriendRequestCallback
      VB: IUserFriendRequestCallback
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback
      VB: ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IFriendship.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: IUserFriendRequestCallback
      path: Contracts/IFriendship.cs
      startLine: 27
    syntax:
      content:
        CSharp: >-
          [ServiceContract]

          public interface IUserFriendRequestCallback
        VB: >-
          <ServiceContract>

          Public Interface IUserFriendRequestCallback
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback.GetFriendRequestCallback(System.Collections.Generic.Dictionary{System.String,System.ValueTuple{System.String,System.String,System.String}})
      commentId: M:ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback.GetFriendRequestCallback(System.Collections.Generic.Dictionary{System.String,System.ValueTuple{System.String,System.String,System.String}})
      language: CSharp
      name:
        CSharp: GetFriendRequestCallback(Dictionary<String, (String, String, String)>)
        VB: GetFriendRequestCallback(Dictionary(Of String, (String, String, String)(Of String, String, String)))
      nameWithType:
        CSharp: IUserFriendRequestCallback.GetFriendRequestCallback(Dictionary<String, (String, String, String)>)
        VB: IUserFriendRequestCallback.GetFriendRequestCallback(Dictionary(Of String, (String, String, String)(Of String, String, String)))
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback.GetFriendRequestCallback(System.Collections.Generic.Dictionary<System.String, System.ValueTuple<System.String, System.String, System.String>>)
        VB: ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback.GetFriendRequestCallback(System.Collections.Generic.Dictionary(Of System.String, System.ValueTuple(Of System.String, System.String, System.String)))
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IFriendship.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetFriendRequestCallback
        path: Contracts/IFriendship.cs
        startLine: 29
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void GetFriendRequestCallback(Dictionary<string, (string, string, string)> friendPlayer)
          VB: >-
            <OperationContract>

            Sub GetFriendRequestCallback(friendPlayer As Dictionary(Of String, (String, String, String)(Of String , String, String)))
        parameters:
        - id: friendPlayer
          type: System.Collections.Generic.Dictionary{System.String,System.ValueTuple{System.String,System.String,System.String}}
      overload: ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback.GetFriendRequestCallback*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
  - id: ChineseCheckersLogicServer.Contracts.IReport
    commentId: T:ChineseCheckersLogicServer.Contracts.IReport
    language: CSharp
    name:
      CSharp: IReport
      VB: IReport
    nameWithType:
      CSharp: IReport
      VB: IReport
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.IReport
      VB: ChineseCheckersLogicServer.Contracts.IReport
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IReport.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: IReport
      path: Contracts/IReport.cs
      startLine: 9
    syntax:
      content:
        CSharp: >-
          [ServiceContract]

          public interface IReport
        VB: >-
          <ServiceContract>

          Public Interface IReport
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.IReport.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
      commentId: M:ChineseCheckersLogicServer.Contracts.IReport.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
      language: CSharp
      name:
        CSharp: AddReport(ReportModel)
        VB: AddReport(ReportModel)
      nameWithType:
        CSharp: IReport.AddReport(ReportModel)
        VB: IReport.AddReport(ReportModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IReport.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
        VB: ChineseCheckersLogicServer.Contracts.IReport.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IReport.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AddReport
        path: Contracts/IReport.cs
        startLine: 11
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int AddReport(ReportModel reportModel)
          VB: >-
            <OperationContract>

            Function AddReport(reportModel As ReportModel) As Integer
        parameters:
        - id: reportModel
          type: ChineseCheckersLogicServer.Model.ReportModel
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IReport.AddReport*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
      commentId: M:ChineseCheckersLogicServer.Contracts.IReport.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
      language: CSharp
      name:
        CSharp: UpdateReport(ReportModel)
        VB: UpdateReport(ReportModel)
      nameWithType:
        CSharp: IReport.UpdateReport(ReportModel)
        VB: IReport.UpdateReport(ReportModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
        VB: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IReport.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdateReport
        path: Contracts/IReport.cs
        startLine: 13
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int UpdateReport(ReportModel reportModel)
          VB: >-
            <OperationContract>

            Function UpdateReport(reportModel As ReportModel) As Integer
        parameters:
        - id: reportModel
          type: ChineseCheckersLogicServer.Model.ReportModel
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Contracts.IReport.DeleteReport(System.Int32)
      language: CSharp
      name:
        CSharp: DeleteReport(Int32)
        VB: DeleteReport(Int32)
      nameWithType:
        CSharp: IReport.DeleteReport(Int32)
        VB: IReport.DeleteReport(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport(System.Int32)
        VB: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IReport.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: DeleteReport
        path: Contracts/IReport.cs
        startLine: 15
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int DeleteReport(int idUser)
          VB: >-
            <OperationContract>

            Function DeleteReport(idUser As Integer) As Integer
        parameters:
        - id: idUser
          type: System.Int32
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Contracts.IReport.GetNumReports(System.Int32)
      language: CSharp
      name:
        CSharp: GetNumReports(Int32)
        VB: GetNumReports(Int32)
      nameWithType:
        CSharp: IReport.GetNumReports(Int32)
        VB: IReport.GetNumReports(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports(System.Int32)
        VB: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IReport.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetNumReports
        path: Contracts/IReport.cs
        startLine: 17
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int GetNumReports(int idUser)
          VB: >-
            <OperationContract>

            Function GetNumReports(idUser As Integer) As Integer
        parameters:
        - id: idUser
          type: System.Int32
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Contracts.IReport.GetDateReport(System.Int32)
      language: CSharp
      name:
        CSharp: GetDateReport(Int32)
        VB: GetDateReport(Int32)
      nameWithType:
        CSharp: IReport.GetDateReport(Int32)
        VB: IReport.GetDateReport(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport(System.Int32)
        VB: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IReport.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetDateReport
        path: Contracts/IReport.cs
        startLine: 19
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            DateTime GetDateReport(int idUser)
          VB: >-
            <OperationContract>

            Function GetDateReport(idUser As Integer) As Date
        parameters:
        - id: idUser
          type: System.Int32
        return:
          type: System.DateTime
      overload: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IReport.IsBanned(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Contracts.IReport.IsBanned(System.Int32)
      language: CSharp
      name:
        CSharp: IsBanned(Int32)
        VB: IsBanned(Int32)
      nameWithType:
        CSharp: IReport.IsBanned(Int32)
        VB: IReport.IsBanned(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IReport.IsBanned(System.Int32)
        VB: ChineseCheckersLogicServer.Contracts.IReport.IsBanned(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IReport.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: IsBanned
        path: Contracts/IReport.cs
        startLine: 21
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            bool IsBanned(int idUser)
          VB: >-
            <OperationContract>

            Function IsBanned(idUser As Integer) As Boolean
        parameters:
        - id: idUser
          type: System.Int32
        return:
          type: System.Boolean
      overload: ChineseCheckersLogicServer.Contracts.IReport.IsBanned*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IReport.IsReported(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Contracts.IReport.IsReported(System.Int32)
      language: CSharp
      name:
        CSharp: IsReported(Int32)
        VB: IsReported(Int32)
      nameWithType:
        CSharp: IReport.IsReported(Int32)
        VB: IReport.IsReported(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IReport.IsReported(System.Int32)
        VB: ChineseCheckersLogicServer.Contracts.IReport.IsReported(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IReport.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: IsReported
        path: Contracts/IReport.cs
        startLine: 23
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            bool IsReported(int idUser)
          VB: >-
            <OperationContract>

            Function IsReported(idUser As Integer) As Boolean
        parameters:
        - id: idUser
          type: System.Int32
        return:
          type: System.Boolean
      overload: ChineseCheckersLogicServer.Contracts.IReport.IsReported*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
  - id: ChineseCheckersLogicServer.Contracts.IRoom
    commentId: T:ChineseCheckersLogicServer.Contracts.IRoom
    language: CSharp
    name:
      CSharp: IRoom
      VB: IRoom
    nameWithType:
      CSharp: IRoom
      VB: IRoom
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.IRoom
      VB: ChineseCheckersLogicServer.Contracts.IRoom
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IRoom.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: IRoom
      path: Contracts/IRoom.cs
      startLine: 10
    syntax:
      content:
        CSharp: >-
          [ServiceContract]

          public interface IRoom
        VB: >-
          <ServiceContract>

          Public Interface IRoom
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom(System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom(System.String)
      language: CSharp
      name:
        CSharp: CreateRoom(String)
        VB: CreateRoom(String)
      nameWithType:
        CSharp: IRoom.CreateRoom(String)
        VB: IRoom.CreateRoom(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom(System.String)
        VB: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IRoom.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: CreateRoom
        path: Contracts/IRoom.cs
        startLine: 12
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            string CreateRoom(string gamertag)
          VB: >-
            <OperationContract>

            Function CreateRoom(gamertag As String) As String
        parameters:
        - id: gamertag
          type: System.String
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
      commentId: M:ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
      language: CSharp
      name:
        CSharp: GenerateId()
        VB: GenerateId()
      nameWithType:
        CSharp: IRoom.GenerateId()
        VB: IRoom.GenerateId()
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId()
        VB: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId()
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IRoom.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GenerateId
        path: Contracts/IRoom.cs
        startLine: 14
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            string GenerateId()
          VB: >-
            <OperationContract>

            Function GenerateId As String
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer(System.String,System.String)
      language: CSharp
      name:
        CSharp: RemovePlayer(String, String)
        VB: RemovePlayer(String, String)
      nameWithType:
        CSharp: IRoom.RemovePlayer(String, String)
        VB: IRoom.RemovePlayer(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer(System.String, System.String)
        VB: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IRoom.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: RemovePlayer
        path: Contracts/IRoom.cs
        startLine: 16
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void RemovePlayer(string gamertag, string idRoom)
          VB: >-
            <OperationContract>

            Sub RemovePlayer(gamertag As String, idRoom As String)
        parameters:
        - id: gamertag
          type: System.String
        - id: idRoom
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom(System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom(System.String)
      language: CSharp
      name:
        CSharp: ValidateRoom(String)
        VB: ValidateRoom(String)
      nameWithType:
        CSharp: IRoom.ValidateRoom(String)
        VB: IRoom.ValidateRoom(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom(System.String)
        VB: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IRoom.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ValidateRoom
        path: Contracts/IRoom.cs
        startLine: 18
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            bool ValidateRoom(string idRoom)
          VB: >-
            <OperationContract>

            Function ValidateRoom(idRoom As String) As Boolean
        parameters:
        - id: idRoom
          type: System.String
        return:
          type: System.Boolean
      overload: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom(System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom(System.String)
      language: CSharp
      name:
        CSharp: ValidateBoardRoom(String)
        VB: ValidateBoardRoom(String)
      nameWithType:
        CSharp: IRoom.ValidateBoardRoom(String)
        VB: IRoom.ValidateBoardRoom(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom(System.String)
        VB: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IRoom.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ValidateBoardRoom
        path: Contracts/IRoom.cs
        startLine: 20
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            bool ValidateBoardRoom(string idRoom)
          VB: >-
            <OperationContract>

            Function ValidateBoardRoom(idRoom As String) As Boolean
        parameters:
        - id: idRoom
          type: System.String
        return:
          type: System.Boolean
      overload: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
  - id: ChineseCheckersLogicServer.Contracts.IMessage
    commentId: T:ChineseCheckersLogicServer.Contracts.IMessage
    language: CSharp
    name:
      CSharp: IMessage
      VB: IMessage
    nameWithType:
      CSharp: IMessage
      VB: IMessage
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.IMessage
      VB: ChineseCheckersLogicServer.Contracts.IMessage
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IRoom.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: IMessage
      path: Contracts/IRoom.cs
      startLine: 24
    syntax:
      content:
        CSharp: >-
          [ServiceContract(CallbackContract = typeof(IMessageCallback))]

          public interface IMessage
        VB: >-
          <ServiceContract(CallbackContract:=GetType(IMessageCallback))>

          Public Interface IMessage
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
      namedArguments:
      - name: CallbackContract
        type: System.Type
        value: ChineseCheckersLogicServer.Contracts.IMessageCallback
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage(System.String,System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IMessage.SendMessage(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: SendMessage(String, String, String)
        VB: SendMessage(String, String, String)
      nameWithType:
        CSharp: IMessage.SendMessage(String, String, String)
        VB: IMessage.SendMessage(String, String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage(System.String, System.String, System.String)
        VB: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage(System.String, System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IRoom.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: SendMessage
        path: Contracts/IRoom.cs
        startLine: 26
      syntax:
        content:
          CSharp: >-
            [OperationContract(IsOneWay = true)]

            void SendMessage(string message, string gamertag, string idRoom)
          VB: >-
            <OperationContract(IsOneWay:=True)>

            Sub SendMessage(message As String, gamertag As String, idRoom As String)
        parameters:
        - id: message
          type: System.String
        - id: gamertag
          type: System.String
        - id: idRoom
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
        namedArguments:
        - name: IsOneWay
          type: System.Boolean
          value: true
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer(System.String,System.String)
      language: CSharp
      name:
        CSharp: AddPlayer(String, String)
        VB: AddPlayer(String, String)
      nameWithType:
        CSharp: IMessage.AddPlayer(String, String)
        VB: IMessage.AddPlayer(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer(System.String, System.String)
        VB: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IRoom.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AddPlayer
        path: Contracts/IRoom.cs
        startLine: 28
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void AddPlayer(string gamertag, string idRoom)
          VB: >-
            <OperationContract>

            Sub AddPlayer(gamertag As String, idRoom As String)
        parameters:
        - id: gamertag
          type: System.String
        - id: idRoom
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
  - id: ChineseCheckersLogicServer.Contracts.IMessageCallback
    commentId: T:ChineseCheckersLogicServer.Contracts.IMessageCallback
    language: CSharp
    name:
      CSharp: IMessageCallback
      VB: IMessageCallback
    nameWithType:
      CSharp: IMessageCallback
      VB: IMessageCallback
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.IMessageCallback
      VB: ChineseCheckersLogicServer.Contracts.IMessageCallback
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IRoom.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: IMessageCallback
      path: Contracts/IRoom.cs
      startLine: 32
    syntax:
      content:
        CSharp: >-
          [ServiceContract]

          public interface IMessageCallback
        VB: >-
          <ServiceContract>

          Public Interface IMessageCallback
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.IMessageCallback.SendMessageCallback(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IMessageCallback.SendMessageCallback(System.String,System.String)
      language: CSharp
      name:
        CSharp: SendMessageCallback(String, String)
        VB: SendMessageCallback(String, String)
      nameWithType:
        CSharp: IMessageCallback.SendMessageCallback(String, String)
        VB: IMessageCallback.SendMessageCallback(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IMessageCallback.SendMessageCallback(System.String, System.String)
        VB: ChineseCheckersLogicServer.Contracts.IMessageCallback.SendMessageCallback(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IRoom.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: SendMessageCallback
        path: Contracts/IRoom.cs
        startLine: 34
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void SendMessageCallback(string message, string gamertag)
          VB: >-
            <OperationContract>

            Sub SendMessageCallback(message As String, gamertag As String)
        parameters:
        - id: message
          type: System.String
        - id: gamertag
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.IMessageCallback.SendMessageCallback*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
  - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom
    commentId: T:ChineseCheckersLogicServer.Contracts.IPlayersRoom
    language: CSharp
    name:
      CSharp: IPlayersRoom
      VB: IPlayersRoom
    nameWithType:
      CSharp: IPlayersRoom
      VB: IPlayersRoom
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.IPlayersRoom
      VB: ChineseCheckersLogicServer.Contracts.IPlayersRoom
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IRoom.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: IPlayersRoom
      path: Contracts/IRoom.cs
      startLine: 38
    syntax:
      content:
        CSharp: >-
          [ServiceContract(CallbackContract = typeof(IPlayersRoomCallback))]

          public interface IPlayersRoom
        VB: >-
          <ServiceContract(CallbackContract:=GetType(IPlayersRoomCallback))>

          Public Interface IPlayersRoom
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
      namedArguments:
      - name: CallbackContract
        type: System.Type
        value: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetPlayersRoom(String, String)
        VB: GetPlayersRoom(String, String)
      nameWithType:
        CSharp: IPlayersRoom.GetPlayersRoom(String, String)
        VB: IPlayersRoom.GetPlayersRoom(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom(System.String, System.String)
        VB: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IRoom.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetPlayersRoom
        path: Contracts/IRoom.cs
        startLine: 40
      syntax:
        content:
          CSharp: >-
            [OperationContract(IsOneWay = true)]

            void GetPlayersRoom(string gamertag, string idRoom)
          VB: >-
            <OperationContract(IsOneWay:=True)>

            Sub GetPlayersRoom(gamertag As String, idRoom As String)
        parameters:
        - id: gamertag
          type: System.String
        - id: idRoom
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
        namedArguments:
        - name: IsOneWay
          type: System.Boolean
          value: true
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom(System.String,System.String)
      language: CSharp
      name:
        CSharp: AddPlayerRoom(String, String)
        VB: AddPlayerRoom(String, String)
      nameWithType:
        CSharp: IPlayersRoom.AddPlayerRoom(String, String)
        VB: IPlayersRoom.AddPlayerRoom(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom(System.String, System.String)
        VB: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IRoom.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AddPlayerRoom
        path: Contracts/IRoom.cs
        startLine: 42
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void AddPlayerRoom(string gamertag, string idRoom)
          VB: >-
            <OperationContract>

            Sub AddPlayerRoom(gamertag As String, idRoom As String)
        parameters:
        - id: gamertag
          type: System.String
        - id: idRoom
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom(System.String,System.String)
      language: CSharp
      name:
        CSharp: RemovePlayerRoom(String, String)
        VB: RemovePlayerRoom(String, String)
      nameWithType:
        CSharp: IPlayersRoom.RemovePlayerRoom(String, String)
        VB: IPlayersRoom.RemovePlayerRoom(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom(System.String, System.String)
        VB: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IRoom.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: RemovePlayerRoom
        path: Contracts/IRoom.cs
        startLine: 44
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void RemovePlayerRoom(string gamertag, string idRoom)
          VB: >-
            <OperationContract>

            Sub RemovePlayerRoom(gamertag As String, idRoom As String)
        parameters:
        - id: gamertag
          type: System.String
        - id: idRoom
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard(System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard(System.String)
      language: CSharp
      name:
        CSharp: SendToBoard(String)
        VB: SendToBoard(String)
      nameWithType:
        CSharp: IPlayersRoom.SendToBoard(String)
        VB: IPlayersRoom.SendToBoard(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard(System.String)
        VB: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IRoom.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: SendToBoard
        path: Contracts/IRoom.cs
        startLine: 46
      syntax:
        content:
          CSharp: >-
            [OperationContract(IsOneWay = true)]

            void SendToBoard(string idRoom)
          VB: >-
            <OperationContract(IsOneWay:=True)>

            Sub SendToBoard(idRoom As String)
        parameters:
        - id: idRoom
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
        namedArguments:
        - name: IsOneWay
          type: System.Boolean
          value: true
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors(System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors(System.String)
      language: CSharp
      name:
        CSharp: AssignColors(String)
        VB: AssignColors(String)
      nameWithType:
        CSharp: IPlayersRoom.AssignColors(String)
        VB: IPlayersRoom.AssignColors(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors(System.String)
        VB: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IRoom.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AssignColors
        path: Contracts/IRoom.cs
        startLine: 48
      syntax:
        content:
          CSharp: >-
            [OperationContract(IsOneWay = true)]

            void AssignColors(string idRoom)
          VB: >-
            <OperationContract(IsOneWay:=True)>

            Sub AssignColors(idRoom As String)
        parameters:
        - id: idRoom
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
        namedArguments:
        - name: IsOneWay
          type: System.Boolean
          value: true
      modifiers:
        CSharp: []
        VB: []
  - id: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
    commentId: T:ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
    language: CSharp
    name:
      CSharp: IPlayersRoomCallback
      VB: IPlayersRoomCallback
    nameWithType:
      CSharp: IPlayersRoomCallback
      VB: IPlayersRoomCallback
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
      VB: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IRoom.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: IPlayersRoomCallback
      path: Contracts/IRoom.cs
      startLine: 52
    syntax:
      content:
        CSharp: >-
          [ServiceContract]

          public interface IPlayersRoomCallback
        VB: >-
          <ServiceContract>

          Public Interface IPlayersRoomCallback
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback(System.Collections.Generic.List{System.String})
      commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback(System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: GetPlayersRoomCallback(List<String>)
        VB: GetPlayersRoomCallback(List(Of String))
      nameWithType:
        CSharp: IPlayersRoomCallback.GetPlayersRoomCallback(List<String>)
        VB: IPlayersRoomCallback.GetPlayersRoomCallback(List(Of String))
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback(System.Collections.Generic.List<System.String>)
        VB: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback(System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IRoom.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetPlayersRoomCallback
        path: Contracts/IRoom.cs
        startLine: 54
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void GetPlayersRoomCallback(List<string> playersInRoom)
          VB: >-
            <OperationContract>

            Sub GetPlayersRoomCallback(playersInRoom As List(Of String))
        parameters:
        - id: playersInRoom
          type: System.Collections.Generic.List{System.String}
      overload: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback
      commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback
      language: CSharp
      name:
        CSharp: SendToBoardCallback()
        VB: SendToBoardCallback()
      nameWithType:
        CSharp: IPlayersRoomCallback.SendToBoardCallback()
        VB: IPlayersRoomCallback.SendToBoardCallback()
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback()
        VB: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback()
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IRoom.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: SendToBoardCallback
        path: Contracts/IRoom.cs
        startLine: 56
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void SendToBoardCallback()
          VB: >-
            <OperationContract>

            Sub SendToBoardCallback
      overload: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback(System.Collections.Generic.Dictionary{System.String,System.Char})
      commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback(System.Collections.Generic.Dictionary{System.String,System.Char})
      language: CSharp
      name:
        CSharp: AssignColorsCallback(Dictionary<String, Char>)
        VB: AssignColorsCallback(Dictionary(Of String, Char))
      nameWithType:
        CSharp: IPlayersRoomCallback.AssignColorsCallback(Dictionary<String, Char>)
        VB: IPlayersRoomCallback.AssignColorsCallback(Dictionary(Of String, Char))
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback(System.Collections.Generic.Dictionary<System.String, System.Char>)
        VB: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback(System.Collections.Generic.Dictionary(Of System.String, System.Char))
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IRoom.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AssignColorsCallback
        path: Contracts/IRoom.cs
        startLine: 58
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void AssignColorsCallback(Dictionary<string, char> dictionaryPlayersColor)
          VB: >-
            <OperationContract>

            Sub AssignColorsCallback(dictionaryPlayersColor As Dictionary(Of String, Char))
        parameters:
        - id: dictionaryPlayersColor
          type: System.Collections.Generic.Dictionary{System.String,System.Char}
      overload: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
  - id: ChineseCheckersLogicServer.Contracts.IUser
    commentId: T:ChineseCheckersLogicServer.Contracts.IUser
    language: CSharp
    name:
      CSharp: IUser
      VB: IUser
    nameWithType:
      CSharp: IUser
      VB: IUser
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.IUser
      VB: ChineseCheckersLogicServer.Contracts.IUser
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IUser.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: IUser
      path: Contracts/IUser.cs
      startLine: 9
    syntax:
      content:
        CSharp: >-
          [ServiceContract]

          public interface IUser
        VB: >-
          <ServiceContract>

          Public Interface IUser
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
      language: CSharp
      name:
        CSharp: AddUserGame(UserModel)
        VB: AddUserGame(UserModel)
      nameWithType:
        CSharp: IUser.AddUserGame(UserModel)
        VB: IUser.AddUserGame(UserModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
        VB: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AddUserGame
        path: Contracts/IUser.cs
        startLine: 11
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int AddUserGame(UserModel userModel)
          VB: >-
            <OperationContract>

            Function AddUserGame(userModel As UserModel) As Integer
        parameters:
        - id: userModel
          type: ChineseCheckersLogicServer.Model.UserModel
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
      language: CSharp
      name:
        CSharp: AddUserAccount(UserModel)
        VB: AddUserAccount(UserModel)
      nameWithType:
        CSharp: IUser.AddUserAccount(UserModel)
        VB: IUser.AddUserAccount(UserModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
        VB: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AddUserAccount
        path: Contracts/IUser.cs
        startLine: 13
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int AddUserAccount(UserModel userModel)
          VB: >-
            <OperationContract>

            Function AddUserAccount(userModel As UserModel) As Integer
        parameters:
        - id: userModel
          type: ChineseCheckersLogicServer.Model.UserModel
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
      language: CSharp
      name:
        CSharp: ValidateUser(UserModel)
        VB: ValidateUser(UserModel)
      nameWithType:
        CSharp: IUser.ValidateUser(UserModel)
        VB: IUser.ValidateUser(UserModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
        VB: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ValidateUser
        path: Contracts/IUser.cs
        startLine: 15
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int ValidateUser(UserModel userModel)
          VB: >-
            <OperationContract>

            Function ValidateUser(userModel As UserModel) As Integer
        parameters:
        - id: userModel
          type: ChineseCheckersLogicServer.Model.UserModel
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage(System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage(System.String)
      language: CSharp
      name:
        CSharp: GetPlayerImage(String)
        VB: GetPlayerImage(String)
      nameWithType:
        CSharp: IUser.GetPlayerImage(String)
        VB: IUser.GetPlayerImage(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage(System.String)
        VB: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetPlayerImage
        path: Contracts/IUser.cs
        startLine: 17
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            string GetPlayerImage(string gamertag)
          VB: >-
            <OperationContract>

            Function GetPlayerImage(gamertag As String) As String
        parameters:
        - id: gamertag
          type: System.String
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer(System.Int32,System.Boolean)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: UpdateStatusPlayer(Int32, Boolean)
        VB: UpdateStatusPlayer(Int32, Boolean)
      nameWithType:
        CSharp: IUser.UpdateStatusPlayer(Int32, Boolean)
        VB: IUser.UpdateStatusPlayer(Int32, Boolean)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer(System.Int32, System.Boolean)
        VB: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdateStatusPlayer
        path: Contracts/IUser.cs
        startLine: 19
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int UpdateStatusPlayer(int idUser, bool status)
          VB: >-
            <OperationContract>

            Function UpdateStatusPlayer(idUser As Integer, status As Boolean) As Integer
        parameters:
        - id: idUser
          type: System.Int32
        - id: status
          type: System.Boolean
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.LogoutUser(System.Int32)
      language: CSharp
      name:
        CSharp: LogoutUser(Int32)
        VB: LogoutUser(Int32)
      nameWithType:
        CSharp: IUser.LogoutUser(Int32)
        VB: IUser.LogoutUser(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser(System.Int32)
        VB: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: LogoutUser
        path: Contracts/IUser.cs
        startLine: 21
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void LogoutUser(int idUser)
          VB: >-
            <OperationContract>

            Sub LogoutUser(idUser As Integer)
        parameters:
        - id: idUser
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
      language: CSharp
      name:
        CSharp: ValidateEmail(UserModel)
        VB: ValidateEmail(UserModel)
      nameWithType:
        CSharp: IUser.ValidateEmail(UserModel)
        VB: IUser.ValidateEmail(UserModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
        VB: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ValidateEmail
        path: Contracts/IUser.cs
        startLine: 23
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int ValidateEmail(UserModel userModel)
          VB: >-
            <OperationContract>

            Function ValidateEmail(userModel As UserModel) As Integer
        parameters:
        - id: userModel
          type: ChineseCheckersLogicServer.Model.UserModel
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
      language: CSharp
      name:
        CSharp: ValidateGamertag(UserModel)
        VB: ValidateGamertag(UserModel)
      nameWithType:
        CSharp: IUser.ValidateGamertag(UserModel)
        VB: IUser.ValidateGamertag(UserModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
        VB: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ValidateGamertag
        path: Contracts/IUser.cs
        startLine: 25
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int ValidateGamertag(UserModel userModel)
          VB: >-
            <OperationContract>

            Function ValidateGamertag(userModel As UserModel) As Integer
        parameters:
        - id: userModel
          type: ChineseCheckersLogicServer.Model.UserModel
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
      language: CSharp
      name:
        CSharp: UpdatePassword(UserModel)
        VB: UpdatePassword(UserModel)
      nameWithType:
        CSharp: IUser.UpdatePassword(UserModel)
        VB: IUser.UpdatePassword(UserModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
        VB: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdatePassword
        path: Contracts/IUser.cs
        startLine: 27
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int UpdatePassword(UserModel userModel)
          VB: >-
            <OperationContract>

            Function UpdatePassword(userModel As UserModel) As Integer
        parameters:
        - id: userModel
          type: ChineseCheckersLogicServer.Model.UserModel
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.InfoUser(System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.InfoUser(System.String)
      language: CSharp
      name:
        CSharp: InfoUser(String)
        VB: InfoUser(String)
      nameWithType:
        CSharp: IUser.InfoUser(String)
        VB: IUser.InfoUser(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.InfoUser(System.String)
        VB: ChineseCheckersLogicServer.Contracts.IUser.InfoUser(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: InfoUser
        path: Contracts/IUser.cs
        startLine: 29
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            UserModel InfoUser(string gamertag)
          VB: >-
            <OperationContract>

            Function InfoUser(gamertag As String) As UserModel
        parameters:
        - id: gamertag
          type: System.String
        return:
          type: ChineseCheckersLogicServer.Model.UserModel
      overload: ChineseCheckersLogicServer.Contracts.IUser.InfoUser*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
      language: CSharp
      name:
        CSharp: UpdateInfoUser(UserModel, String)
        VB: UpdateInfoUser(UserModel, String)
      nameWithType:
        CSharp: IUser.UpdateInfoUser(UserModel, String)
        VB: IUser.UpdateInfoUser(UserModel, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel, System.String)
        VB: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdateInfoUser
        path: Contracts/IUser.cs
        startLine: 31
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int UpdateInfoUser(UserModel usermodel, string gamertag)
          VB: >-
            <OperationContract>

            Function UpdateInfoUser(usermodel As UserModel, gamertag As String) As Integer
        parameters:
        - id: usermodel
          type: ChineseCheckersLogicServer.Model.UserModel
        - id: gamertag
          type: System.String
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.FindGamertag(System.String,System.String)
      language: CSharp
      name:
        CSharp: FindGamertag(String, String)
        VB: FindGamertag(String, String)
      nameWithType:
        CSharp: IUser.FindGamertag(String, String)
        VB: IUser.FindGamertag(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag(System.String, System.String)
        VB: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: FindGamertag
        path: Contracts/IUser.cs
        startLine: 33
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            string FindGamertag(string currentGamertag, string friendGamertag)
          VB: >-
            <OperationContract>

            Function FindGamertag(currentGamertag As String, friendGamertag As String) As String
        parameters:
        - id: currentGamertag
          type: System.String
        - id: friendGamertag
          type: System.String
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.GetEmail(System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetEmail(System.String)
      language: CSharp
      name:
        CSharp: GetEmail(String)
        VB: GetEmail(String)
      nameWithType:
        CSharp: IUser.GetEmail(String)
        VB: IUser.GetEmail(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.GetEmail(System.String)
        VB: ChineseCheckersLogicServer.Contracts.IUser.GetEmail(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetEmail
        path: Contracts/IUser.cs
        startLine: 35
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            string GetEmail(string gamertag)
          VB: >-
            <OperationContract>

            Function GetEmail(gamertag As String) As String
        parameters:
        - id: gamertag
          type: System.String
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.IUser.GetEmail*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.GetId(System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetId(System.String)
      language: CSharp
      name:
        CSharp: GetId(String)
        VB: GetId(String)
      nameWithType:
        CSharp: IUser.GetId(String)
        VB: IUser.GetId(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.GetId(System.String)
        VB: ChineseCheckersLogicServer.Contracts.IUser.GetId(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetId
        path: Contracts/IUser.cs
        startLine: 37
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int GetId(string gamertag)
          VB: >-
            <OperationContract>

            Function GetId(gamertag As String) As Integer
        parameters:
        - id: gamertag
          type: System.String
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IUser.GetId*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon(System.Int32)
      language: CSharp
      name:
        CSharp: UpdateGamesWon(Int32)
        VB: UpdateGamesWon(Int32)
      nameWithType:
        CSharp: IUser.UpdateGamesWon(Int32)
        VB: IUser.UpdateGamesWon(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon(System.Int32)
        VB: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdateGamesWon
        path: Contracts/IUser.cs
        startLine: 39
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int UpdateGamesWon(int idUser)
          VB: >-
            <OperationContract>

            Function UpdateGamesWon(idUser As Integer) As Integer
        parameters:
        - id: idUser
          type: System.Int32
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames(System.Int32)
      language: CSharp
      name:
        CSharp: UpdateTotalGames(Int32)
        VB: UpdateTotalGames(Int32)
      nameWithType:
        CSharp: IUser.UpdateTotalGames(Int32)
        VB: IUser.UpdateTotalGames(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames(System.Int32)
        VB: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdateTotalGames
        path: Contracts/IUser.cs
        startLine: 41
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int UpdateTotalGames(int idUser)
          VB: >-
            <OperationContract>

            Function UpdateTotalGames(idUser As Integer) As Integer
        parameters:
        - id: idUser
          type: System.Int32
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames(System.Int32)
      language: CSharp
      name:
        CSharp: GetTotalGames(Int32)
        VB: GetTotalGames(Int32)
      nameWithType:
        CSharp: IUser.GetTotalGames(Int32)
        VB: IUser.GetTotalGames(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames(System.Int32)
        VB: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetTotalGames
        path: Contracts/IUser.cs
        startLine: 43
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int GetTotalGames(int idUser)
          VB: >-
            <OperationContract>

            Function GetTotalGames(idUser As Integer) As Integer
        parameters:
        - id: idUser
          type: System.Int32
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon(System.Int32)
      language: CSharp
      name:
        CSharp: GetGamesWon(Int32)
        VB: GetGamesWon(Int32)
      nameWithType:
        CSharp: IUser.GetGamesWon(Int32)
        VB: IUser.GetGamesWon(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon(System.Int32)
        VB: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetGamesWon
        path: Contracts/IUser.cs
        startLine: 45
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            int GetGamesWon(int idUser)
          VB: >-
            <OperationContract>

            Function GetGamesWon(idUser As Integer) As Integer
        parameters:
        - id: idUser
          type: System.Int32
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
    - id: ChineseCheckersLogicServer.Contracts.IUser.GetGames
      commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetGames
      language: CSharp
      name:
        CSharp: GetGames()
        VB: GetGames()
      nameWithType:
        CSharp: IUser.GetGames()
        VB: IUser.GetGames()
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUser.GetGames()
        VB: ChineseCheckersLogicServer.Contracts.IUser.GetGames()
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetGames
        path: Contracts/IUser.cs
        startLine: 47
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            Dictionary<string, int> GetGames()
          VB: >-
            <OperationContract>

            Function GetGames As Dictionary(Of String, Integer)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Int32}
      overload: ChineseCheckersLogicServer.Contracts.IUser.GetGames*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
  - id: ChineseCheckersLogicServer.Contracts.IUsersManager
    commentId: T:ChineseCheckersLogicServer.Contracts.IUsersManager
    language: CSharp
    name:
      CSharp: IUsersManager
      VB: IUsersManager
    nameWithType:
      CSharp: IUsersManager
      VB: IUsersManager
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.IUsersManager
      VB: ChineseCheckersLogicServer.Contracts.IUsersManager
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IUser.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: IUsersManager
      path: Contracts/IUser.cs
      startLine: 51
    syntax:
      content:
        CSharp: >-
          [ServiceContract(CallbackContract = typeof(IUserCallback))]

          public interface IUsersManager
        VB: >-
          <ServiceContract(CallbackContract:=GetType(IUserCallback))>

          Public Interface IUsersManager
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
      namedArguments:
      - name: CallbackContract
        type: System.Type
        value: ChineseCheckersLogicServer.Contracts.IUserCallback
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends(System.String)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends(System.String)
      language: CSharp
      name:
        CSharp: GetFriends(String)
        VB: GetFriends(String)
      nameWithType:
        CSharp: IUsersManager.GetFriends(String)
        VB: IUsersManager.GetFriends(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends(System.String)
        VB: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetFriends
        path: Contracts/IUser.cs
        startLine: 53
      syntax:
        content:
          CSharp: >-
            [OperationContract(IsOneWay = true)]

            void GetFriends(string gamertag)
          VB: >-
            <OperationContract(IsOneWay:=True)>

            Sub GetFriends(gamertag As String)
        parameters:
        - id: gamertag
          type: System.String
      overload: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
        namedArguments:
        - name: IsOneWay
          type: System.Boolean
          value: true
      modifiers:
        CSharp: []
        VB: []
  - id: ChineseCheckersLogicServer.Contracts.IUserCallback
    commentId: T:ChineseCheckersLogicServer.Contracts.IUserCallback
    language: CSharp
    name:
      CSharp: IUserCallback
      VB: IUserCallback
    nameWithType:
      CSharp: IUserCallback
      VB: IUserCallback
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.IUserCallback
      VB: ChineseCheckersLogicServer.Contracts.IUserCallback
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IUser.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: IUserCallback
      path: Contracts/IUser.cs
      startLine: 57
    syntax:
      content:
        CSharp: >-
          [ServiceContract]

          public interface IUserCallback
        VB: >-
          <ServiceContract>

          Public Interface IUserCallback
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.IUserCallback.GetFriendsCallback(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.String,System.Boolean}})
      commentId: M:ChineseCheckersLogicServer.Contracts.IUserCallback.GetFriendsCallback(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.String,System.Boolean}})
      language: CSharp
      name:
        CSharp: GetFriendsCallback(Dictionary<String, Tuple<String, Boolean>>)
        VB: GetFriendsCallback(Dictionary(Of String, Tuple(Of String, Boolean)))
      nameWithType:
        CSharp: IUserCallback.GetFriendsCallback(Dictionary<String, Tuple<String, Boolean>>)
        VB: IUserCallback.GetFriendsCallback(Dictionary(Of String, Tuple(Of String, Boolean)))
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUserCallback.GetFriendsCallback(System.Collections.Generic.Dictionary<System.String, System.Tuple<System.String, System.Boolean>>)
        VB: ChineseCheckersLogicServer.Contracts.IUserCallback.GetFriendsCallback(System.Collections.Generic.Dictionary(Of System.String, System.Tuple(Of System.String, System.Boolean)))
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetFriendsCallback
        path: Contracts/IUser.cs
        startLine: 59
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void GetFriendsCallback(Dictionary<string, Tuple<string, bool>> stateFriend)
          VB: >-
            <OperationContract>

            Sub GetFriendsCallback(stateFriend As Dictionary(Of String, Tuple(Of String, Boolean)))
        parameters:
        - id: stateFriend
          type: System.Collections.Generic.Dictionary{System.String,System.Tuple{System.String,System.Boolean}}
      overload: ChineseCheckersLogicServer.Contracts.IUserCallback.GetFriendsCallback*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
  - id: ChineseCheckersLogicServer.Contracts.IUserSession
    commentId: T:ChineseCheckersLogicServer.Contracts.IUserSession
    language: CSharp
    name:
      CSharp: IUserSession
      VB: IUserSession
    nameWithType:
      CSharp: IUserSession
      VB: IUserSession
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.IUserSession
      VB: ChineseCheckersLogicServer.Contracts.IUserSession
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IUser.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: IUserSession
      path: Contracts/IUser.cs
      startLine: 63
    syntax:
      content:
        CSharp: >-
          [ServiceContract(CallbackContract = typeof(IUserSessionCallback))]

          public interface IUserSession
        VB: >-
          <ServiceContract(CallbackContract:=GetType(IUserSessionCallback))>

          Public Interface IUserSession
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
      namedArguments:
      - name: CallbackContract
        type: System.Type
        value: ChineseCheckersLogicServer.Contracts.IUserSessionCallback
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer(System.Int32)
      language: CSharp
      name:
        CSharp: GetSessionPlayer(Int32)
        VB: GetSessionPlayer(Int32)
      nameWithType:
        CSharp: IUserSession.GetSessionPlayer(Int32)
        VB: IUserSession.GetSessionPlayer(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer(System.Int32)
        VB: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetSessionPlayer
        path: Contracts/IUser.cs
        startLine: 65
      syntax:
        content:
          CSharp: >-
            [OperationContract(IsOneWay = true)]

            void GetSessionPlayer(int idUser)
          VB: >-
            <OperationContract(IsOneWay:=True)>

            Sub GetSessionPlayer(idUser As Integer)
        parameters:
        - id: idUser
          type: System.Int32
      overload: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
        namedArguments:
        - name: IsOneWay
          type: System.Boolean
          value: true
      modifiers:
        CSharp: []
        VB: []
  - id: ChineseCheckersLogicServer.Contracts.IUserSessionCallback
    commentId: T:ChineseCheckersLogicServer.Contracts.IUserSessionCallback
    language: CSharp
    name:
      CSharp: IUserSessionCallback
      VB: IUserSessionCallback
    nameWithType:
      CSharp: IUserSessionCallback
      VB: IUserSessionCallback
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Contracts.IUserSessionCallback
      VB: ChineseCheckersLogicServer.Contracts.IUserSessionCallback
    type: Interface
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Contracts
    source:
      remote:
        path: ChineseCheckersLogicServer/Contracts/IUser.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: IUserSessionCallback
      path: Contracts/IUser.cs
      startLine: 69
    syntax:
      content:
        CSharp: >-
          [ServiceContract]

          public interface IUserSessionCallback
        VB: >-
          <ServiceContract>

          Public Interface IUserSessionCallback
    attributes:
    - type: System.ServiceModel.ServiceContractAttribute
      ctor: System.ServiceModel.ServiceContractAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ChineseCheckersLogicServer.Contracts.IUserSessionCallback.GetSessionPlayerCallback(System.Boolean)
      commentId: M:ChineseCheckersLogicServer.Contracts.IUserSessionCallback.GetSessionPlayerCallback(System.Boolean)
      language: CSharp
      name:
        CSharp: GetSessionPlayerCallback(Boolean)
        VB: GetSessionPlayerCallback(Boolean)
      nameWithType:
        CSharp: IUserSessionCallback.GetSessionPlayerCallback(Boolean)
        VB: IUserSessionCallback.GetSessionPlayerCallback(Boolean)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Contracts.IUserSessionCallback.GetSessionPlayerCallback(System.Boolean)
        VB: ChineseCheckersLogicServer.Contracts.IUserSessionCallback.GetSessionPlayerCallback(System.Boolean)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Contracts
      source:
        remote:
          path: ChineseCheckersLogicServer/Contracts/IUser.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetSessionPlayerCallback
        path: Contracts/IUser.cs
        startLine: 71
      syntax:
        content:
          CSharp: >-
            [OperationContract]

            void GetSessionPlayerCallback(bool sessionOpened)
          VB: >-
            <OperationContract>

            Sub GetSessionPlayerCallback(sessionOpened As Boolean)
        parameters:
        - id: sessionOpened
          type: System.Boolean
      overload: ChineseCheckersLogicServer.Contracts.IUserSessionCallback.GetSessionPlayerCallback*
      attributes:
      - type: System.ServiceModel.OperationContractAttribute
        ctor: System.ServiceModel.OperationContractAttribute.#ctor
        arguments: []
      modifiers:
        CSharp: []
        VB: []
- id: ChineseCheckersLogicServer.Controller
  commentId: N:ChineseCheckersLogicServer.Controller
  language: CSharp
  name:
    CSharp: ChineseCheckersLogicServer.Controller
    VB: ChineseCheckersLogicServer.Controller
  nameWithType:
    CSharp: ChineseCheckersLogicServer.Controller
    VB: ChineseCheckersLogicServer.Controller
  qualifiedName:
    CSharp: ChineseCheckersLogicServer.Controller
    VB: ChineseCheckersLogicServer.Controller
  type: Namespace
  assemblies:
  - ChineseCheckersLogicServer
  modifiers: {}
  items:
  - id: ChineseCheckersLogicServer.Controller.ManagerController
    commentId: T:ChineseCheckersLogicServer.Controller.ManagerController
    language: CSharp
    name:
      CSharp: ManagerController
      VB: ManagerController
    nameWithType:
      CSharp: ManagerController
      VB: ManagerController
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Controller.ManagerController
      VB: ChineseCheckersLogicServer.Controller.ManagerController
    type: Class
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Controller
    source:
      remote:
        path: ChineseCheckersLogicServer/Controller/UserController.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: ManagerController
      path: Controller/UserController.cs
      startLine: 595
    summary: "\nEsta Interface incluye los métodos que se ocupan para la funcionalidad del tablero. \n"
    example: []
    syntax:
      content:
        CSharp: >-
          [ServiceBehavior(ConcurrencyMode = ConcurrencyMode.Reentrant)]

          public class ManagerController : IBoard, ITurn, IFriendship, IUserFriendRequest, IReport, IRoom, IMessage, IPlayersRoom, IUser, IUsersManager, IUserSession
        VB: >-
          <ServiceBehavior(ConcurrencyMode:=ConcurrencyMode.Reentrant)>

          Public Class ManagerController

              Implements IBoard, ITurn, IFriendship, IUserFriendRequest, IReport, IRoom, IMessage, IPlayersRoom, IUser, IUsersManager, IUserSession
    inheritance:
    - System.Object
    implements:
    - ChineseCheckersLogicServer.Contracts.IBoard
    - ChineseCheckersLogicServer.Contracts.ITurn
    - ChineseCheckersLogicServer.Contracts.IFriendship
    - ChineseCheckersLogicServer.Contracts.IUserFriendRequest
    - ChineseCheckersLogicServer.Contracts.IReport
    - ChineseCheckersLogicServer.Contracts.IRoom
    - ChineseCheckersLogicServer.Contracts.IMessage
    - ChineseCheckersLogicServer.Contracts.IPlayersRoom
    - ChineseCheckersLogicServer.Contracts.IUser
    - ChineseCheckersLogicServer.Contracts.IUsersManager
    - ChineseCheckersLogicServer.Contracts.IUserSession
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.ServiceModel.ServiceBehaviorAttribute
      ctor: System.ServiceModel.ServiceBehaviorAttribute.#ctor
      arguments: []
      namedArguments:
      - name: ConcurrencyMode
        type: System.ServiceModel.ConcurrencyMode
        value: 1
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame(System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame(System.String)
      language: CSharp
      name:
        CSharp: ValidateGame(String)
        VB: ValidateGame(String)
      nameWithType:
        CSharp: ManagerController.ValidateGame(String)
        VB: ManagerController.ValidateGame(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame(System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/BoardController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ValidateGame
        path: Controller/BoardController.cs
        startLine: 26
      summary: "\nValida que la partida exista y ternoa true. Si no existe, retorna false\n"
      example: []
      syntax:
        content:
          CSharp: public bool ValidateGame(string idRoom)
          VB: Public Function ValidateGame(idRoom As String) As Boolean
        parameters:
        - id: idRoom
          type: System.String
          description: Id de la sala
        return:
          type: System.Boolean
          description: Retorna true si la sala existe, false si no existe
      overload: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame*
      implements:
      - ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard(System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard(System.String)
      language: CSharp
      name:
        CSharp: ValidateBoard(String)
        VB: ValidateBoard(String)
      nameWithType:
        CSharp: ManagerController.ValidateBoard(String)
        VB: ManagerController.ValidateBoard(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard(System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/BoardController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ValidateBoard
        path: Controller/BoardController.cs
        startLine: 44
      summary: "\nValida la cantidad de jugadores del Room así como que esta exista\n"
      example: []
      syntax:
        content:
          CSharp: public bool ValidateBoard(string idRoom)
          VB: Public Function ValidateBoard(idRoom As String) As Boolean
        parameters:
        - id: idRoom
          type: System.String
          description: Id de la sala
        return:
          type: System.Boolean
          description: Retorna true si la sala existe y la cantidad de jugadores es mayor a 1
      overload: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard*
      implements:
      - ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn(System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn(System.String)
      language: CSharp
      name:
        CSharp: SendToTurn(String)
        VB: SendToTurn(String)
      nameWithType:
        CSharp: ManagerController.SendToTurn(String)
        VB: ManagerController.SendToTurn(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn(System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/BoardController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: SendToTurn
        path: Controller/BoardController.cs
        startLine: 68
      syntax:
        content:
          CSharp: public void SendToTurn(string idRoom)
          VB: Public Sub SendToTurn(idRoom As String)
        parameters:
        - id: idRoom
          type: System.String
      overload: ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn*
      implements:
      - ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
      language: CSharp
      name:
        CSharp: UpdateBoard(Point, Point, String)
        VB: UpdateBoard(Point, Point, String)
      nameWithType:
        CSharp: ManagerController.UpdateBoard(Point, Point, String)
        VB: ManagerController.UpdateBoard(Point, Point, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard(System.Windows.Point, System.Windows.Point, System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard(System.Windows.Point, System.Windows.Point, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/BoardController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdateBoard
        path: Controller/BoardController.cs
        startLine: 101
      summary: "\nActualiza el tablero para todos los jugadores de la partida, si uno realiza un movimiento, se actualiza el tablero para todos los jugadores.\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateBoard(Point marble, Point position, string idRoom)
          VB: Public Sub UpdateBoard(marble As Point, position As Point, idRoom As String)
        parameters:
        - id: marble
          type: System.Windows.Point
        - id: position
          type: System.Windows.Point
          description: Posición a la que se moverá la canica
        - id: idRoom
          type: System.String
          description: Id de la sala
      overload: ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard*
      implements:
      - ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame(System.String,System.String)
      language: CSharp
      name:
        CSharp: AddPlayerInGame(String, String)
        VB: AddPlayerInGame(String, String)
      nameWithType:
        CSharp: ManagerController.AddPlayerInGame(String, String)
        VB: ManagerController.AddPlayerInGame(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame(System.String, System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/BoardController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AddPlayerInGame
        path: Controller/BoardController.cs
        startLine: 123
      summary: "\nAñade un jugador a la partida. Valida que la partida exista (se encuentre en el diccionario de Rooms)\ny que el jugador no se encuentre en la partida (se encuentre en el diccionario de jugadores en la partida)\n"
      example: []
      syntax:
        content:
          CSharp: public void AddPlayerInGame(string gamertag, string idRoom)
          VB: Public Sub AddPlayerInGame(gamertag As String, idRoom As String)
        parameters:
        - id: gamertag
          type: System.String
          description: Gamertag del jugador
        - id: idRoom
          type: System.String
          description: Id de la sala
      overload: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame*
      implements:
      - ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame(System.String,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame(System.String,System.String)
      language: CSharp
      name:
        CSharp: RemovePlayerFromGame(String, String)
        VB: RemovePlayerFromGame(String, String)
      nameWithType:
        CSharp: ManagerController.RemovePlayerFromGame(String, String)
        VB: ManagerController.RemovePlayerFromGame(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame(System.String, System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/BoardController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: RemovePlayerFromGame
        path: Controller/BoardController.cs
        startLine: 151
      summary: "\nQuita un jugador de la partida. Valida que la partida exista (se encuentre en el diccionario de Rooms)\nSi la cantidad de jugadores en la partida es mayor a 1, se remueve el jugador de la partida, si no, se remueve la partida\n"
      example: []
      syntax:
        content:
          CSharp: public void RemovePlayerFromGame(string gamertag, string idRoom)
          VB: Public Sub RemovePlayerFromGame(gamertag As String, idRoom As String)
        parameters:
        - id: gamertag
          type: System.String
          description: Gamertag del jugador
        - id: idRoom
          type: System.String
          description: Id de la sala
      overload: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame*
      implements:
      - ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame(System.String,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer(System.String,System.String)
      language: CSharp
      name:
        CSharp: WinningPlayer(String, String)
        VB: WinningPlayer(String, String)
      nameWithType:
        CSharp: ManagerController.WinningPlayer(String, String)
        VB: ManagerController.WinningPlayer(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer(System.String, System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/BoardController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: WinningPlayer
        path: Controller/BoardController.cs
        startLine: 176
      summary: "\nValida que la partida exista (se encuentre en el diccionario de Rooms) y si la cantidad de jugadores en la partida es 1, \nse le notifica al jugador que ganó la partida. De igual manera, se le notifica a los demás jugadores quien fue el ganador.\n"
      example: []
      syntax:
        content:
          CSharp: public void WinningPlayer(string idRoom, string gamertag)
          VB: Public Sub WinningPlayer(idRoom As String, gamertag As String)
        parameters:
        - id: idRoom
          type: System.String
          description: Id de la sala
        - id: gamertag
          type: System.String
          description: Gamertag del jugador
      overload: ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer*
      implements:
      - ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer(System.String,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
      language: CSharp
      name:
        CSharp: AddFriendPlayer(FriendshipModel)
        VB: AddFriendPlayer(FriendshipModel)
      nameWithType:
        CSharp: ManagerController.AddFriendPlayer(FriendshipModel)
        VB: ManagerController.AddFriendPlayer(FriendshipModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/FriendshipController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AddFriendPlayer
        path: Controller/FriendshipController.cs
        startLine: 26
      summary: "\nAñade una relación de amistad entre dos jugadores\n"
      example: []
      syntax:
        content:
          CSharp: public int AddFriendPlayer(FriendshipModel friendshipModel)
          VB: Public Function AddFriendPlayer(friendshipModel As FriendshipModel) As Integer
        parameters:
        - id: friendshipModel
          type: ChineseCheckersLogicServer.Model.FriendshipModel
          description: El objeto de tipo FriendshipModel que contiene el id del jugador, el id del amigo y el tipo de notificación
        return:
          type: System.Int32
          description: Retorna 1 sí se añadio correctamente la relación de amistad entre los jugadores
      overload: ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer*
      implements:
      - ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer(System.Int32,System.Int32,System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer(System.Int32,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: UpdateFriendPlayer(Int32, Int32, String)
        VB: UpdateFriendPlayer(Int32, Int32, String)
      nameWithType:
        CSharp: ManagerController.UpdateFriendPlayer(Int32, Int32, String)
        VB: ManagerController.UpdateFriendPlayer(Int32, Int32, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer(System.Int32, System.Int32, System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer(System.Int32, System.Int32, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/FriendshipController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdateFriendPlayer
        path: Controller/FriendshipController.cs
        startLine: 62
      summary: "\nActualiza una relación de amistad entre dos jugadores. Se ocupa para aceptar o rechazar una solicitud de amistad\n"
      example: []
      syntax:
        content:
          CSharp: public int UpdateFriendPlayer(int idUser, int idFriend, string requestStatus)
          VB: Public Function UpdateFriendPlayer(idUser As Integer, idFriend As Integer, requestStatus As String) As Integer
        parameters:
        - id: idUser
          type: System.Int32
          description: El id del jugador
        - id: idFriend
          type: System.Int32
          description: El id del amigo
        - id: requestStatus
          type: System.String
          description: El estado de la solicitud de amistad
        return:
          type: System.Int32
          description: Retorna 1 sí se añadio correctamente la relación de amistad entre los jugadores
      overload: ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer*
      implements:
      - ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer(System.Int32,System.Int32,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
      language: CSharp
      name:
        CSharp: DeleteFriendPlayer(FriendshipModel)
        VB: DeleteFriendPlayer(FriendshipModel)
      nameWithType:
        CSharp: ManagerController.DeleteFriendPlayer(FriendshipModel)
        VB: ManagerController.DeleteFriendPlayer(FriendshipModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/FriendshipController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: DeleteFriendPlayer
        path: Controller/FriendshipController.cs
        startLine: 88
      summary: "\nElimina una solicitud de amistad o una invitación a una partida\n"
      example: []
      syntax:
        content:
          CSharp: public int DeleteFriendPlayer(FriendshipModel friendshipModel)
          VB: Public Function DeleteFriendPlayer(friendshipModel As FriendshipModel) As Integer
        parameters:
        - id: friendshipModel
          type: ChineseCheckersLogicServer.Model.FriendshipModel
          description: El objeto de tipo FriendshipModel que contiene el id del jugador, el id del amigo y el tipo de notificación
        return:
          type: System.Int32
          description: Retorna 1 sí se elimino correctamente la solicitud de amistad o la invitación a una partida
      overload: ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer*
      implements:
      - ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest(System.Int32,System.Int32,System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest(System.Int32,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: ValidateFriendRequest(Int32, Int32, String)
        VB: ValidateFriendRequest(Int32, Int32, String)
      nameWithType:
        CSharp: ManagerController.ValidateFriendRequest(Int32, Int32, String)
        VB: ManagerController.ValidateFriendRequest(Int32, Int32, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest(System.Int32, System.Int32, System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest(System.Int32, System.Int32, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/FriendshipController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ValidateFriendRequest
        path: Controller/FriendshipController.cs
        startLine: 119
      syntax:
        content:
          CSharp: public int ValidateFriendRequest(int idUser, int idFriend, string requestStatus)
          VB: Public Function ValidateFriendRequest(idUser As Integer, idFriend As Integer, requestStatus As String) As Integer
        parameters:
        - id: idUser
          type: System.Int32
        - id: idFriend
          type: System.Int32
        - id: requestStatus
          type: System.String
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest*
      implements:
      - ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest(System.Int32,System.Int32,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest(System.Int32)
      language: CSharp
      name:
        CSharp: GetFriendRequest(Int32)
        VB: GetFriendRequest(Int32)
      nameWithType:
        CSharp: ManagerController.GetFriendRequest(Int32)
        VB: ManagerController.GetFriendRequest(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest(System.Int32)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/FriendshipController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetFriendRequest
        path: Controller/FriendshipController.cs
        startLine: 146
      summary: "\nRegresa la lista de amigos de un jugador\n"
      example: []
      syntax:
        content:
          CSharp: public void GetFriendRequest(int idUser)
          VB: Public Sub GetFriendRequest(idUser As Integer)
        parameters:
        - id: idUser
          type: System.Int32
          description: El id del jugador
      overload: ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
      language: CSharp
      name:
        CSharp: AddReport(ReportModel)
        VB: AddReport(ReportModel)
      nameWithType:
        CSharp: ManagerController.AddReport(ReportModel)
        VB: ManagerController.AddReport(ReportModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/ReportController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AddReport
        path: Controller/ReportController.cs
        startLine: 27
      summary: "\nAñade un reporte a un jugador\n"
      example: []
      syntax:
        content:
          CSharp: public int AddReport(ReportModel reportModel)
          VB: Public Function AddReport(reportModel As ReportModel) As Integer
        parameters:
        - id: reportModel
          type: ChineseCheckersLogicServer.Model.ReportModel
          description: "El objeto de tipo ReportModel que contiene el id del jugador, el motivo del reporte, \nla fecha actual y la fecha de finalización"
        return:
          type: System.Int32
          description: Retorna 1 sí se añadio correctamente el reporte al jugador
      overload: ChineseCheckersLogicServer.Controller.ManagerController.AddReport*
      implements:
      - ChineseCheckersLogicServer.Contracts.IReport.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
      language: CSharp
      name:
        CSharp: UpdateReport(ReportModel)
        VB: UpdateReport(ReportModel)
      nameWithType:
        CSharp: ManagerController.UpdateReport(ReportModel)
        VB: ManagerController.UpdateReport(ReportModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/ReportController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdateReport
        path: Controller/ReportController.cs
        startLine: 68
      summary: "\nActualiza un reporte de un jugador\n"
      example: []
      syntax:
        content:
          CSharp: public int UpdateReport(ReportModel reportModel)
          VB: Public Function UpdateReport(reportModel As ReportModel) As Integer
        parameters:
        - id: reportModel
          type: ChineseCheckersLogicServer.Model.ReportModel
          description: "El objeto de tipo ReportModel que contiene el id del jugador, el motivo del reporte, \nla fecha actual y la fecha de finalización"
        return:
          type: System.Int32
          description: Retorna 1 sí se actualizo correctamente el reporte del jugador
      overload: ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport*
      implements:
      - ChineseCheckersLogicServer.Contracts.IReport.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport(System.Int32)
      language: CSharp
      name:
        CSharp: DeleteReport(Int32)
        VB: DeleteReport(Int32)
      nameWithType:
        CSharp: ManagerController.DeleteReport(Int32)
        VB: ManagerController.DeleteReport(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport(System.Int32)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/ReportController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: DeleteReport
        path: Controller/ReportController.cs
        startLine: 94
      summary: "\nElimina un reporte de un jugador\n"
      example: []
      syntax:
        content:
          CSharp: public int DeleteReport(int idUser)
          VB: Public Function DeleteReport(idUser As Integer) As Integer
        parameters:
        - id: idUser
          type: System.Int32
          description: El id del jugador
        return:
          type: System.Int32
          description: Retorna 1 sí se elimino correctamente el reporte del jugador
      overload: ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport*
      implements:
      - ChineseCheckersLogicServer.Contracts.IReport.DeleteReport(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports(System.Int32)
      language: CSharp
      name:
        CSharp: GetNumReports(Int32)
        VB: GetNumReports(Int32)
      nameWithType:
        CSharp: ManagerController.GetNumReports(Int32)
        VB: ManagerController.GetNumReports(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports(System.Int32)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/ReportController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetNumReports
        path: Controller/ReportController.cs
        startLine: 115
      summary: "\nObtiene la cantidad de reportes de un jugador\n"
      example: []
      syntax:
        content:
          CSharp: public int GetNumReports(int idUser)
          VB: Public Function GetNumReports(idUser As Integer) As Integer
        parameters:
        - id: idUser
          type: System.Int32
          description: El id del jugador
        return:
          type: System.Int32
          description: Retorna la cantidad de reportes del jugador
      overload: ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports*
      implements:
      - ChineseCheckersLogicServer.Contracts.IReport.GetNumReports(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport(System.Int32)
      language: CSharp
      name:
        CSharp: GetDateReport(Int32)
        VB: GetDateReport(Int32)
      nameWithType:
        CSharp: ManagerController.GetDateReport(Int32)
        VB: ManagerController.GetDateReport(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport(System.Int32)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/ReportController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetDateReport
        path: Controller/ReportController.cs
        startLine: 138
      summary: "\nObtiene la fecha de finalización de un reporte de un jugador\n"
      example: []
      syntax:
        content:
          CSharp: public DateTime GetDateReport(int idUser)
          VB: Public Function GetDateReport(idUser As Integer) As Date
        parameters:
        - id: idUser
          type: System.Int32
          description: El id del jugador
        return:
          type: System.DateTime
          description: Retorna la fecha de finalización del reporte del jugador
      overload: ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport*
      implements:
      - ChineseCheckersLogicServer.Contracts.IReport.GetDateReport(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.IsReported(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.IsReported(System.Int32)
      language: CSharp
      name:
        CSharp: IsReported(Int32)
        VB: IsReported(Int32)
      nameWithType:
        CSharp: ManagerController.IsReported(Int32)
        VB: ManagerController.IsReported(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.IsReported(System.Int32)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.IsReported(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/ReportController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: IsReported
        path: Controller/ReportController.cs
        startLine: 161
      summary: "\nValida si un jugador esta reportado\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsReported(int idUser)
          VB: Public Function IsReported(idUser As Integer) As Boolean
        parameters:
        - id: idUser
          type: System.Int32
          description: El id del jugador
        return:
          type: System.Boolean
          description: Retorna true sí el jugador esta reportado
      overload: ChineseCheckersLogicServer.Controller.ManagerController.IsReported*
      implements:
      - ChineseCheckersLogicServer.Contracts.IReport.IsReported(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.IsBanned(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.IsBanned(System.Int32)
      language: CSharp
      name:
        CSharp: IsBanned(Int32)
        VB: IsBanned(Int32)
      nameWithType:
        CSharp: ManagerController.IsBanned(Int32)
        VB: ManagerController.IsBanned(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.IsBanned(System.Int32)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.IsBanned(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/ReportController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: IsBanned
        path: Controller/ReportController.cs
        startLine: 188
      summary: "\nValida si un jugador esta baneado\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsBanned(int idUser)
          VB: Public Function IsBanned(idUser As Integer) As Boolean
        parameters:
        - id: idUser
          type: System.Int32
          description: El id del jugador
        return:
          type: System.Boolean
          description: Retorna true sí el jugador esta baneado
      overload: ChineseCheckersLogicServer.Controller.ManagerController.IsBanned*
      implements:
      - ChineseCheckersLogicServer.Contracts.IReport.IsBanned(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom(System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom(System.String)
      language: CSharp
      name:
        CSharp: CreateRoom(String)
        VB: CreateRoom(String)
      nameWithType:
        CSharp: ManagerController.CreateRoom(String)
        VB: ManagerController.CreateRoom(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom(System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/RoomController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: CreateRoom
        path: Controller/RoomController.cs
        startLine: 27
      summary: "\nCrea una sala para los jugadores\n"
      example: []
      syntax:
        content:
          CSharp: public string CreateRoom(string gamertag)
          VB: Public Function CreateRoom(gamertag As String) As String
        parameters:
        - id: gamertag
          type: System.String
          description: El identificador que el jugador elige
        return:
          type: System.String
          description: Retorna una cadena que es el identificador de la sala
      overload: ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom*
      implements:
      - ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.GenerateId
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GenerateId
      language: CSharp
      name:
        CSharp: GenerateId()
        VB: GenerateId()
      nameWithType:
        CSharp: ManagerController.GenerateId()
        VB: ManagerController.GenerateId()
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.GenerateId()
        VB: ChineseCheckersLogicServer.Controller.ManagerController.GenerateId()
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/RoomController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GenerateId
        path: Controller/RoomController.cs
        startLine: 46
      summary: "\nGenera un identificador a las salas que se crean.\n"
      example: []
      syntax:
        content:
          CSharp: public string GenerateId()
          VB: Public Function GenerateId As String
        return:
          type: System.String
          description: Retorna una cadena que es el identificador de la sala
      overload: ChineseCheckersLogicServer.Controller.ManagerController.GenerateId*
      implements:
      - ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer(System.String,System.String)
      language: CSharp
      name:
        CSharp: RemovePlayer(String, String)
        VB: RemovePlayer(String, String)
      nameWithType:
        CSharp: ManagerController.RemovePlayer(String, String)
        VB: ManagerController.RemovePlayer(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer(System.String, System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/RoomController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: RemovePlayer
        path: Controller/RoomController.cs
        startLine: 75
      summary: "\nQuita a un jugador de la sala\n"
      example: []
      syntax:
        content:
          CSharp: public void RemovePlayer(string gamertag, string idRoom)
          VB: Public Sub RemovePlayer(gamertag As String, idRoom As String)
        parameters:
        - id: gamertag
          type: System.String
          description: El identificador que el jugador elige
        - id: idRoom
          type: System.String
          description: El identificador de la sala
      overload: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer*
      implements:
      - ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer(System.String,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom(System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom(System.String)
      language: CSharp
      name:
        CSharp: ValidateRoom(String)
        VB: ValidateRoom(String)
      nameWithType:
        CSharp: ManagerController.ValidateRoom(String)
        VB: ManagerController.ValidateRoom(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom(System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/RoomController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ValidateRoom
        path: Controller/RoomController.cs
        startLine: 101
      summary: "\nValida si la sala existe\n"
      example: []
      syntax:
        content:
          CSharp: public bool ValidateRoom(string idRoom)
          VB: Public Function ValidateRoom(idRoom As String) As Boolean
        parameters:
        - id: idRoom
          type: System.String
          description: El identificador de la sala
        return:
          type: System.Boolean
          description: Retorna true si la sala existe, sino regresa false
      overload: ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom*
      implements:
      - ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom(System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom(System.String)
      language: CSharp
      name:
        CSharp: ValidateBoardRoom(String)
        VB: ValidateBoardRoom(String)
      nameWithType:
        CSharp: ManagerController.ValidateBoardRoom(String)
        VB: ManagerController.ValidateBoardRoom(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom(System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/RoomController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ValidateBoardRoom
        path: Controller/RoomController.cs
        startLine: 116
      summary: "\nValida si la sala tiene mas de un jugador\n"
      example: []
      syntax:
        content:
          CSharp: public bool ValidateBoardRoom(string idRoom)
          VB: Public Function ValidateBoardRoom(idRoom As String) As Boolean
        parameters:
        - id: idRoom
          type: System.String
          description: El identificador de la sala
        return:
          type: System.Boolean
          description: Retorna true si la sala tiene mas de un jugador o si es menor o igual a 6 jugadores, sino regresa false
      overload: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom*
      implements:
      - ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.SendMessage(System.String,System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.SendMessage(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: SendMessage(String, String, String)
        VB: SendMessage(String, String, String)
      nameWithType:
        CSharp: ManagerController.SendMessage(String, String, String)
        VB: ManagerController.SendMessage(String, String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.SendMessage(System.String, System.String, System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.SendMessage(System.String, System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/RoomController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: SendMessage
        path: Controller/RoomController.cs
        startLine: 140
      syntax:
        content:
          CSharp: public void SendMessage(string message, string gamertag, string idRoom)
          VB: Public Sub SendMessage(message As String, gamertag As String, idRoom As String)
        parameters:
        - id: message
          type: System.String
        - id: gamertag
          type: System.String
        - id: idRoom
          type: System.String
      overload: ChineseCheckersLogicServer.Controller.ManagerController.SendMessage*
      implements:
      - ChineseCheckersLogicServer.Contracts.IMessage.SendMessage(System.String,System.String,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer(System.String,System.String)
      language: CSharp
      name:
        CSharp: AddPlayer(String, String)
        VB: AddPlayer(String, String)
      nameWithType:
        CSharp: ManagerController.AddPlayer(String, String)
        VB: ManagerController.AddPlayer(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer(System.String, System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/RoomController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AddPlayer
        path: Controller/RoomController.cs
        startLine: 161
      summary: "\nAgrega un jugador al chat de la sala\n"
      example: []
      syntax:
        content:
          CSharp: public void AddPlayer(string gamertag, string idRoom)
          VB: Public Sub AddPlayer(gamertag As String, idRoom As String)
        parameters:
        - id: gamertag
          type: System.String
          description: El identificador que el jugador elige
        - id: idRoom
          type: System.String
          description: El identificador de la sala
      overload: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer*
      implements:
      - ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer(System.String,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom(System.String,System.String)
      language: CSharp
      name:
        CSharp: AddPlayerRoom(String, String)
        VB: AddPlayerRoom(String, String)
      nameWithType:
        CSharp: ManagerController.AddPlayerRoom(String, String)
        VB: ManagerController.AddPlayerRoom(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom(System.String, System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/RoomController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AddPlayerRoom
        path: Controller/RoomController.cs
        startLine: 192
      syntax:
        content:
          CSharp: public void AddPlayerRoom(string gamertag, string idRoom)
          VB: Public Sub AddPlayerRoom(gamertag As String, idRoom As String)
        parameters:
        - id: gamertag
          type: System.String
        - id: idRoom
          type: System.String
      overload: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom*
      implements:
      - ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom(System.String,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetPlayersRoom(String, String)
        VB: GetPlayersRoom(String, String)
      nameWithType:
        CSharp: ManagerController.GetPlayersRoom(String, String)
        VB: ManagerController.GetPlayersRoom(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom(System.String, System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/RoomController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetPlayersRoom
        path: Controller/RoomController.cs
        startLine: 225
      summary: "\nCallback encargado de obtener la lista de jugadores de la sala. Retorna una lista de jugadores de la sala.\n"
      example: []
      syntax:
        content:
          CSharp: public void GetPlayersRoom(string gamertag, string idRoom)
          VB: Public Sub GetPlayersRoom(gamertag As String, idRoom As String)
        parameters:
        - id: gamertag
          type: System.String
          description: El identificador que el jugador elige
        - id: idRoom
          type: System.String
          description: El identificador de la sala
      overload: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom*
      implements:
      - ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom(System.String,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard(System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard(System.String)
      language: CSharp
      name:
        CSharp: SendToBoard(String)
        VB: SendToBoard(String)
      nameWithType:
        CSharp: ManagerController.SendToBoard(String)
        VB: ManagerController.SendToBoard(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard(System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/RoomController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: SendToBoard
        path: Controller/RoomController.cs
        startLine: 246
      summary: "\nCallback encargado de enviar a los jugadores de la sala a la sala de juego.\n"
      example: []
      syntax:
        content:
          CSharp: public void SendToBoard(string idRoom)
          VB: Public Sub SendToBoard(idRoom As String)
        parameters:
        - id: idRoom
          type: System.String
          description: El identificador de la sala
      overload: ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard*
      implements:
      - ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom(System.String,System.String)
      language: CSharp
      name:
        CSharp: RemovePlayerRoom(String, String)
        VB: RemovePlayerRoom(String, String)
      nameWithType:
        CSharp: ManagerController.RemovePlayerRoom(String, String)
        VB: ManagerController.RemovePlayerRoom(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom(System.String, System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/RoomController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: RemovePlayerRoom
        path: Controller/RoomController.cs
        startLine: 267
      summary: "\nQuita a un jugador de la sala\n"
      example: []
      syntax:
        content:
          CSharp: public void RemovePlayerRoom(string gamertag, string idRoom)
          VB: Public Sub RemovePlayerRoom(gamertag As String, idRoom As String)
        parameters:
        - id: gamertag
          type: System.String
          description: El identificador que el jugador elige
        - id: idRoom
          type: System.String
          description: El identificador de la sala
      overload: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom*
      implements:
      - ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom(System.String,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.AssignColors(System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.AssignColors(System.String)
      language: CSharp
      name:
        CSharp: AssignColors(String)
        VB: AssignColors(String)
      nameWithType:
        CSharp: ManagerController.AssignColors(String)
        VB: ManagerController.AssignColors(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.AssignColors(System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.AssignColors(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/RoomController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AssignColors
        path: Controller/RoomController.cs
        startLine: 296
      summary: "\nAsigna los colores de las canicas a los jugadores de la sala\n"
      example: []
      syntax:
        content:
          CSharp: public void AssignColors(string idRoom)
          VB: Public Sub AssignColors(idRoom As String)
        parameters:
        - id: idRoom
          type: System.String
          description: El identificador de la sala
      overload: ChineseCheckersLogicServer.Controller.ManagerController.AssignColors*
      implements:
      - ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
      language: CSharp
      name:
        CSharp: AddUserGame(UserModel)
        VB: AddUserGame(UserModel)
      nameWithType:
        CSharp: ManagerController.AddUserGame(UserModel)
        VB: ManagerController.AddUserGame(UserModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AddUserGame
        path: Controller/UserController.cs
        startLine: 34
      summary: "\nMétodo que agrega un usuario a la base de datos \n"
      example: []
      syntax:
        content:
          CSharp: public int AddUserGame(UserModel userModel)
          VB: Public Function AddUserGame(userModel As UserModel) As Integer
        parameters:
        - id: userModel
          type: ChineseCheckersLogicServer.Model.UserModel
          description: 'Objeto de tipo UserModel que regresa el gamertag y el estado del jugador '
        return:
          type: System.Int32
          description: '1 si se agrega correctamente, -1 si ocurre un error '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
      language: CSharp
      name:
        CSharp: AddUserAccount(UserModel)
        VB: AddUserAccount(UserModel)
      nameWithType:
        CSharp: ManagerController.AddUserAccount(UserModel)
        VB: ManagerController.AddUserAccount(UserModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: AddUserAccount
        path: Controller/UserController.cs
        startLine: 65
      summary: "\nMétodo que agrega una cuenta de un usuario a la base de datos\n"
      example: []
      syntax:
        content:
          CSharp: public int AddUserAccount(UserModel userModel)
          VB: Public Function AddUserAccount(userModel As UserModel) As Integer
        parameters:
        - id: userModel
          type: ChineseCheckersLogicServer.Model.UserModel
          description: 'Objeto de tipo UserModel que regresa el gamertag, el email, la contraseña y la imagen de perfil seleccionada por el usuario '
        return:
          type: System.Int32
          description: '1 si se agrega correctamente, -1 si ocurre un error '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.InfoUser(System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.InfoUser(System.String)
      language: CSharp
      name:
        CSharp: InfoUser(String)
        VB: InfoUser(String)
      nameWithType:
        CSharp: ManagerController.InfoUser(String)
        VB: ManagerController.InfoUser(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.InfoUser(System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.InfoUser(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: InfoUser
        path: Controller/UserController.cs
        startLine: 98
      summary: "\nMétodo que obtiene la información de un usuario \n"
      example: []
      syntax:
        content:
          CSharp: public UserModel InfoUser(string gamertag)
          VB: Public Function InfoUser(gamertag As String) As UserModel
        parameters:
        - id: gamertag
          type: System.String
          description: 'Gamertag del usuario que se trata de obtener la información '
        return:
          type: ChineseCheckersLogicServer.Model.UserModel
          description: 'Retorna un objeto UserModel '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.InfoUser*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.InfoUser(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
      language: CSharp
      name:
        CSharp: UpdateInfoUser(UserModel, String)
        VB: UpdateInfoUser(UserModel, String)
      nameWithType:
        CSharp: ManagerController.UpdateInfoUser(UserModel, String)
        VB: ManagerController.UpdateInfoUser(UserModel, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel, System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdateInfoUser
        path: Controller/UserController.cs
        startLine: 131
      summary: "\nMétodo que actualiza la información de un usuario \n"
      example: []
      syntax:
        content:
          CSharp: public int UpdateInfoUser(UserModel usermodel, string gamertag)
          VB: Public Function UpdateInfoUser(usermodel As UserModel, gamertag As String) As Integer
        parameters:
        - id: usermodel
          type: ChineseCheckersLogicServer.Model.UserModel
          description: 'Objeto de tipo UserModel que se usa para actualizar el gamertag, el email o la imagen de perfil seleccionada por el usuario '
        - id: gamertag
          type: System.String
          description: 'Gamertag del usuario que se trata de actualizar la información '
        return:
          type: System.Int32
          description: 'Retorna un 1 sí se hizo la actualización de manera correcta, -1 si no se logro realizar '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
      language: CSharp
      name:
        CSharp: UpdatePassword(UserModel)
        VB: UpdatePassword(UserModel)
      nameWithType:
        CSharp: ManagerController.UpdatePassword(UserModel)
        VB: ManagerController.UpdatePassword(UserModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdatePassword
        path: Controller/UserController.cs
        startLine: 166
      summary: "\nMétodo que actualiza la contraseña de un usuario \n"
      example: []
      syntax:
        content:
          CSharp: public int UpdatePassword(UserModel userModel)
          VB: Public Function UpdatePassword(userModel As UserModel) As Integer
        parameters:
        - id: userModel
          type: ChineseCheckersLogicServer.Model.UserModel
          description: 'Objeto de tipo UserModel que se usa para actualizar la contraseña del usuario '
        return:
          type: System.Int32
          description: 'Retorna un 1 sí se hizo la actualización de manera correcta, -1 si no se logro realizar '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
      language: CSharp
      name:
        CSharp: ValidateUser(UserModel)
        VB: ValidateUser(UserModel)
      nameWithType:
        CSharp: ManagerController.ValidateUser(UserModel)
        VB: ManagerController.ValidateUser(UserModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ValidateUser
        path: Controller/UserController.cs
        startLine: 189
      summary: "\nMétodo que valida la existencia de un usuario \n"
      example: []
      syntax:
        content:
          CSharp: public int ValidateUser(UserModel userModel)
          VB: Public Function ValidateUser(userModel As UserModel) As Integer
        parameters:
        - id: userModel
          type: ChineseCheckersLogicServer.Model.UserModel
          description: 'Objeto de tipo userModel que recibe el gamertag y contraseña para poder llevar a cabo la validación  '
        return:
          type: System.Int32
          description: 'Retorna un 1 sí se hizo la validación, -1 si no se logro realizar '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
      language: CSharp
      name:
        CSharp: ValidateEmail(UserModel)
        VB: ValidateEmail(UserModel)
      nameWithType:
        CSharp: ManagerController.ValidateEmail(UserModel)
        VB: ManagerController.ValidateEmail(UserModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ValidateEmail
        path: Controller/UserController.cs
        startLine: 213
      summary: "\nMétodo que valida la existencia de un email \n"
      example: []
      syntax:
        content:
          CSharp: public int ValidateEmail(UserModel userModel)
          VB: Public Function ValidateEmail(userModel As UserModel) As Integer
        parameters:
        - id: userModel
          type: ChineseCheckersLogicServer.Model.UserModel
          description: 'Objeto de tipo userModel que recibe el email para poder llevar a cabo la validación  '
        return:
          type: System.Int32
          description: 'Retorna un 1 sí se hizo la validación, -1 si no se logro realizar '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
      language: CSharp
      name:
        CSharp: ValidateGamertag(UserModel)
        VB: ValidateGamertag(UserModel)
      nameWithType:
        CSharp: ManagerController.ValidateGamertag(UserModel)
        VB: ManagerController.ValidateGamertag(UserModel)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ValidateGamertag
        path: Controller/UserController.cs
        startLine: 237
      summary: "\nMétodo que valida la existencia de un gamertag \n"
      example: []
      syntax:
        content:
          CSharp: public int ValidateGamertag(UserModel userModel)
          VB: Public Function ValidateGamertag(userModel As UserModel) As Integer
        parameters:
        - id: userModel
          type: ChineseCheckersLogicServer.Model.UserModel
          description: 'Objeto de tipo userModel que recibe el gamertag para poder llevar a cabo la validación  '
        return:
          type: System.Int32
          description: 'Retorna un 1 sí se hizo la validación, -1 si no se logro realizar '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage(System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage(System.String)
      language: CSharp
      name:
        CSharp: GetPlayerImage(String)
        VB: GetPlayerImage(String)
      nameWithType:
        CSharp: ManagerController.GetPlayerImage(String)
        VB: ManagerController.GetPlayerImage(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage(System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetPlayerImage
        path: Controller/UserController.cs
        startLine: 261
      summary: "\nMétodo que obtiene la imagen de perfil de un usuario \n"
      example: []
      syntax:
        content:
          CSharp: public string GetPlayerImage(string gamertag)
          VB: Public Function GetPlayerImage(gamertag As String) As String
        parameters:
        - id: gamertag
          type: System.String
          description: 'Gamertag del usuario que se trata de obtener la imagen de perfil '
        return:
          type: System.String
          description: 'Retorna un string con la ruta de la imagen de perfil '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser(System.Int32)
      language: CSharp
      name:
        CSharp: LogoutUser(Int32)
        VB: LogoutUser(Int32)
      nameWithType:
        CSharp: ManagerController.LogoutUser(Int32)
        VB: ManagerController.LogoutUser(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser(System.Int32)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: LogoutUser
        path: Controller/UserController.cs
        startLine: 284
      summary: "\nMétodo para poder llevar acabo la desconexión de un usuario\n"
      example: []
      syntax:
        content:
          CSharp: public void LogoutUser(int idUser)
          VB: Public Sub LogoutUser(idUser As Integer)
        parameters:
        - id: idUser
          type: System.Int32
          description: 'Id del usuario '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.LogoutUser(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag(System.String,System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag(System.String,System.String)
      language: CSharp
      name:
        CSharp: FindGamertag(String, String)
        VB: FindGamertag(String, String)
      nameWithType:
        CSharp: ManagerController.FindGamertag(String, String)
        VB: ManagerController.FindGamertag(String, String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag(System.String, System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag(System.String, System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: FindGamertag
        path: Controller/UserController.cs
        startLine: 299
      summary: "\nMétodo que obtiene el gamertag de un usuario al que se trata buscar \n"
      example: []
      syntax:
        content:
          CSharp: public string FindGamertag(string currentGamertag, string friendGamertag)
          VB: Public Function FindGamertag(currentGamertag As String, friendGamertag As String) As String
        parameters:
        - id: currentGamertag
          type: System.String
          description: 'Gamertag del usuario que trata de buscar '
        - id: friendGamertag
          type: System.String
          description: 'Gamertag del usuario que se trata de encontrar '
        return:
          type: System.String
          description: 'Retorna un string con el gamertag del usuario '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.FindGamertag(System.String,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.GetEmail(System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetEmail(System.String)
      language: CSharp
      name:
        CSharp: GetEmail(String)
        VB: GetEmail(String)
      nameWithType:
        CSharp: ManagerController.GetEmail(String)
        VB: ManagerController.GetEmail(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.GetEmail(System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.GetEmail(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetEmail
        path: Controller/UserController.cs
        startLine: 329
      summary: "\nMétodo para obtener el email de un jugador \n"
      example: []
      syntax:
        content:
          CSharp: public string GetEmail(string gamertag)
          VB: Public Function GetEmail(gamertag As String) As String
        parameters:
        - id: gamertag
          type: System.String
          description: 'Gamertag del usuario que se trata buscar su email '
        return:
          type: System.String
          description: 'Retorna una cadena con el correo del usuario '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.GetEmail*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.GetEmail(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.GetId(System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetId(System.String)
      language: CSharp
      name:
        CSharp: GetId(String)
        VB: GetId(String)
      nameWithType:
        CSharp: ManagerController.GetId(String)
        VB: ManagerController.GetId(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.GetId(System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.GetId(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetId
        path: Controller/UserController.cs
        startLine: 353
      summary: "\nMétodo para obtener el id de un jugador \n"
      example: []
      syntax:
        content:
          CSharp: public int GetId(string gamertag)
          VB: Public Function GetId(gamertag As String) As Integer
        parameters:
        - id: gamertag
          type: System.String
          description: 'Gamertag del usuario que se trata buscar su id '
        return:
          type: System.Int32
          description: 'Retorna un entero con el id del usuario '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.GetId*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.GetId(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon(System.Int32)
      language: CSharp
      name:
        CSharp: UpdateGamesWon(Int32)
        VB: UpdateGamesWon(Int32)
      nameWithType:
        CSharp: ManagerController.UpdateGamesWon(Int32)
        VB: ManagerController.UpdateGamesWon(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon(System.Int32)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdateGamesWon
        path: Controller/UserController.cs
        startLine: 377
      summary: "\nMétodo para actualizar los juegos ganados de un jugador\n"
      example: []
      syntax:
        content:
          CSharp: public int UpdateGamesWon(int idUser)
          VB: Public Function UpdateGamesWon(idUser As Integer) As Integer
        parameters:
        - id: idUser
          type: System.Int32
          description: 'Id del usuario que se trata actualizar los juegos ganados '
        return:
          type: System.Int32
          description: 'Retorna un 1 si se logro actualizar correctamente, -1 sí no fue posible realizar la actualización '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames(System.Int32)
      language: CSharp
      name:
        CSharp: UpdateTotalGames(Int32)
        VB: UpdateTotalGames(Int32)
      nameWithType:
        CSharp: ManagerController.UpdateTotalGames(Int32)
        VB: ManagerController.UpdateTotalGames(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames(System.Int32)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdateTotalGames
        path: Controller/UserController.cs
        startLine: 404
      summary: "\nMétodo para actualizar los juegos totales de un jugador\n"
      example: []
      syntax:
        content:
          CSharp: public int UpdateTotalGames(int idUser)
          VB: Public Function UpdateTotalGames(idUser As Integer) As Integer
        parameters:
        - id: idUser
          type: System.Int32
          description: 'Id del usuario que se trata actualizar los juegos totales '
        return:
          type: System.Int32
          description: 'Retorna un 1 si se logro actualizar correctamente, -1 sí no fue posible realizar la actualización '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames(System.Int32)
      language: CSharp
      name:
        CSharp: GetTotalGames(Int32)
        VB: GetTotalGames(Int32)
      nameWithType:
        CSharp: ManagerController.GetTotalGames(Int32)
        VB: ManagerController.GetTotalGames(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames(System.Int32)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetTotalGames
        path: Controller/UserController.cs
        startLine: 431
      summary: "\nMétodo para obtener los juegos totales de un jugador\n"
      example: []
      syntax:
        content:
          CSharp: public int GetTotalGames(int idUser)
          VB: Public Function GetTotalGames(idUser As Integer) As Integer
        parameters:
        - id: idUser
          type: System.Int32
          description: 'Id del usuario que se trata obtener los juegos totales '
        return:
          type: System.Int32
          description: 'Retorna un entero con los juegos totales del usuario '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon(System.Int32)
      language: CSharp
      name:
        CSharp: GetGamesWon(Int32)
        VB: GetGamesWon(Int32)
      nameWithType:
        CSharp: ManagerController.GetGamesWon(Int32)
        VB: ManagerController.GetGamesWon(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon(System.Int32)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetGamesWon
        path: Controller/UserController.cs
        startLine: 459
      summary: "\nMétodo para obtener los juegos ganados de un jugador\n"
      example: []
      syntax:
        content:
          CSharp: public int GetGamesWon(int idUser)
          VB: Public Function GetGamesWon(idUser As Integer) As Integer
        parameters:
        - id: idUser
          type: System.Int32
          description: 'Id del usuario que se trata obtener los juegos ganados '
        return:
          type: System.Int32
          description: 'Retorna un entero con los juegos ganados del usuario '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer(System.Int32,System.Boolean)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: UpdateStatusPlayer(Int32, Boolean)
        VB: UpdateStatusPlayer(Int32, Boolean)
      nameWithType:
        CSharp: ManagerController.UpdateStatusPlayer(Int32, Boolean)
        VB: ManagerController.UpdateStatusPlayer(Int32, Boolean)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer(System.Int32, System.Boolean)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: UpdateStatusPlayer
        path: Controller/UserController.cs
        startLine: 488
      summary: "\nMétodo para actualizar el estado de un jugador\n"
      example: []
      syntax:
        content:
          CSharp: public int UpdateStatusPlayer(int idUser, bool status)
          VB: Public Function UpdateStatusPlayer(idUser As Integer, status As Boolean) As Integer
        parameters:
        - id: idUser
          type: System.Int32
          description: 'Id del usuario que se trata actualizar el estado '
        - id: status
          type: System.Boolean
          description: 'Estado del jugador '
        return:
          type: System.Int32
          description: 'Retorna un 1 si se realizo la actualización del estado del jugador correctamente, -1 si no lo fue. '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer(System.Int32,System.Boolean)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.GetGames
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetGames
      language: CSharp
      name:
        CSharp: GetGames()
        VB: GetGames()
      nameWithType:
        CSharp: ManagerController.GetGames()
        VB: ManagerController.GetGames()
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.GetGames()
        VB: ChineseCheckersLogicServer.Controller.ManagerController.GetGames()
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetGames
        path: Controller/UserController.cs
        startLine: 515
      summary: "\nMétodo para obtener los juegos ganados de los jugadores y poder desplegarlos en la clasificación (los primeros 3)\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<string, int> GetGames()
          VB: Public Function GetGames As Dictionary(Of String, Integer)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Int32}
          description: 'Retorna un diccionario que contiene el gamertag de los mejores jugadores y un entero que contiene la cantidad de victorias '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.GetGames*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUser.GetGames
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.GetFriends(System.String)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetFriends(System.String)
      language: CSharp
      name:
        CSharp: GetFriends(String)
        VB: GetFriends(String)
      nameWithType:
        CSharp: ManagerController.GetFriends(String)
        VB: ManagerController.GetFriends(String)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.GetFriends(System.String)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.GetFriends(System.String)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetFriends
        path: Controller/UserController.cs
        startLine: 544
      syntax:
        content:
          CSharp: public void GetFriends(string gamertag)
          VB: Public Sub GetFriends(gamertag As String)
        parameters:
        - id: gamertag
          type: System.String
      overload: ChineseCheckersLogicServer.Controller.ManagerController.GetFriends*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer(System.Int32)
      commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer(System.Int32)
      language: CSharp
      name:
        CSharp: GetSessionPlayer(Int32)
        VB: GetSessionPlayer(Int32)
      nameWithType:
        CSharp: ManagerController.GetSessionPlayer(Int32)
        VB: ManagerController.GetSessionPlayer(Int32)
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer(System.Int32)
        VB: ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer(System.Int32)
      type: Method
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/UserController.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GetSessionPlayer
        path: Controller/UserController.cs
        startLine: 602
      summary: "\nMétodo para obtener la sesión de un jugador\n"
      example: []
      syntax:
        content:
          CSharp: public void GetSessionPlayer(int idUser)
          VB: Public Sub GetSessionPlayer(idUser As Integer)
        parameters:
        - id: idUser
          type: System.Int32
          description: 'Id del usuario que se trata obtener la sesión '
      overload: ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer*
      implements:
      - ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ChineseCheckersLogicServer.Controller.SingletonClass
    commentId: T:ChineseCheckersLogicServer.Controller.SingletonClass
    language: CSharp
    name:
      CSharp: SingletonClass
      VB: SingletonClass
    nameWithType:
      CSharp: SingletonClass
      VB: SingletonClass
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Controller.SingletonClass
      VB: ChineseCheckersLogicServer.Controller.SingletonClass
    type: Class
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Controller
    source:
      remote:
        path: ChineseCheckersLogicServer/Controller/SingletonClass.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: SingletonClass
      path: Controller/SingletonClass.cs
      startLine: 10
    summary: "\nClase que implementa el patrón Singleton y que se encarga de almacenar el id de la sala en la que se encuentra el jugador\n"
    example: []
    syntax:
      content:
        CSharp: public class SingletonClass
        VB: Public Class SingletonClass
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ChineseCheckersLogicServer.Controller.SingletonClass.Instance
      commentId: P:ChineseCheckersLogicServer.Controller.SingletonClass.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: SingletonClass.Instance
        VB: SingletonClass.Instance
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.SingletonClass.Instance
        VB: ChineseCheckersLogicServer.Controller.SingletonClass.Instance
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/SingletonClass.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: Instance
        path: Controller/SingletonClass.cs
        startLine: 12
      syntax:
        content:
          CSharp: public static SingletonClass Instance { get; }
          VB: Public Shared ReadOnly Property Instance As SingletonClass
        parameters: []
        return:
          type: ChineseCheckersLogicServer.Controller.SingletonClass
      overload: ChineseCheckersLogicServer.Controller.SingletonClass.Instance*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: ChineseCheckersLogicServer.Controller.SingletonClass.IdRoom
      commentId: P:ChineseCheckersLogicServer.Controller.SingletonClass.IdRoom
      language: CSharp
      name:
        CSharp: IdRoom
        VB: IdRoom
      nameWithType:
        CSharp: SingletonClass.IdRoom
        VB: SingletonClass.IdRoom
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Controller.SingletonClass.IdRoom
        VB: ChineseCheckersLogicServer.Controller.SingletonClass.IdRoom
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Controller
      source:
        remote:
          path: ChineseCheckersLogicServer/Controller/SingletonClass.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: IdRoom
        path: Controller/SingletonClass.cs
        startLine: 21
      syntax:
        content:
          CSharp: public string IdRoom { get; set; }
          VB: Public Property IdRoom As String
        parameters: []
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Controller.SingletonClass.IdRoom*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
- id: ChineseCheckersLogicServer.Model
  commentId: N:ChineseCheckersLogicServer.Model
  language: CSharp
  name:
    CSharp: ChineseCheckersLogicServer.Model
    VB: ChineseCheckersLogicServer.Model
  nameWithType:
    CSharp: ChineseCheckersLogicServer.Model
    VB: ChineseCheckersLogicServer.Model
  qualifiedName:
    CSharp: ChineseCheckersLogicServer.Model
    VB: ChineseCheckersLogicServer.Model
  type: Namespace
  assemblies:
  - ChineseCheckersLogicServer
  modifiers: {}
  items:
  - id: ChineseCheckersLogicServer.Model.BoardModel
    commentId: T:ChineseCheckersLogicServer.Model.BoardModel
    language: CSharp
    name:
      CSharp: BoardModel
      VB: BoardModel
    nameWithType:
      CSharp: BoardModel
      VB: BoardModel
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Model.BoardModel
      VB: ChineseCheckersLogicServer.Model.BoardModel
    type: Class
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Model
    source:
      remote:
        path: ChineseCheckersLogicServer/Model/BoardModel.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: BoardModel
      path: Model/BoardModel.cs
      startLine: 9
    syntax:
      content:
        CSharp: >-
          [DataContract]

          public class BoardModel
        VB: >-
          <DataContract>

          Public Class BoardModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.Runtime.Serialization.DataContractAttribute
      ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ChineseCheckersLogicServer.Model.BoardModel.GamePlayers
      commentId: P:ChineseCheckersLogicServer.Model.BoardModel.GamePlayers
      language: CSharp
      name:
        CSharp: GamePlayers
        VB: GamePlayers
      nameWithType:
        CSharp: BoardModel.GamePlayers
        VB: BoardModel.GamePlayers
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.BoardModel.GamePlayers
        VB: ChineseCheckersLogicServer.Model.BoardModel.GamePlayers
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/BoardModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: GamePlayers
        path: Model/BoardModel.cs
        startLine: 11
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public Dictionary<string, ITurnCallback> GamePlayers { get; set; }
          VB: >-
            <DataMember>

            Public Property GamePlayers As Dictionary(Of String, ITurnCallback)
        parameters: []
        return:
          type: System.Collections.Generic.Dictionary{System.String,ChineseCheckersLogicServer.Contracts.ITurnCallback}
      overload: ChineseCheckersLogicServer.Model.BoardModel.GamePlayers*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.BoardModel.IdRoom
      commentId: P:ChineseCheckersLogicServer.Model.BoardModel.IdRoom
      language: CSharp
      name:
        CSharp: IdRoom
        VB: IdRoom
      nameWithType:
        CSharp: BoardModel.IdRoom
        VB: BoardModel.IdRoom
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.BoardModel.IdRoom
        VB: ChineseCheckersLogicServer.Model.BoardModel.IdRoom
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/BoardModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: IdRoom
        path: Model/BoardModel.cs
        startLine: 13
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public string IdRoom { get; set; }
          VB: >-
            <DataMember>

            Public Property IdRoom As String
        parameters: []
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Model.BoardModel.IdRoom*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: ChineseCheckersLogicServer.Model.FriendshipModel
    commentId: T:ChineseCheckersLogicServer.Model.FriendshipModel
    language: CSharp
    name:
      CSharp: FriendshipModel
      VB: FriendshipModel
    nameWithType:
      CSharp: FriendshipModel
      VB: FriendshipModel
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Model.FriendshipModel
      VB: ChineseCheckersLogicServer.Model.FriendshipModel
    type: Class
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Model
    source:
      remote:
        path: ChineseCheckersLogicServer/Model/FriendshipModel.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: FriendshipModel
      path: Model/FriendshipModel.cs
      startLine: 8
    syntax:
      content:
        CSharp: >-
          [DataContract]

          public class FriendshipModel
        VB: >-
          <DataContract>

          Public Class FriendshipModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.Runtime.Serialization.DataContractAttribute
      ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ChineseCheckersLogicServer.Model.FriendshipModel.IdUser
      commentId: P:ChineseCheckersLogicServer.Model.FriendshipModel.IdUser
      language: CSharp
      name:
        CSharp: IdUser
        VB: IdUser
      nameWithType:
        CSharp: FriendshipModel.IdUser
        VB: FriendshipModel.IdUser
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.FriendshipModel.IdUser
        VB: ChineseCheckersLogicServer.Model.FriendshipModel.IdUser
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/FriendshipModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: IdUser
        path: Model/FriendshipModel.cs
        startLine: 10
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public int IdUser { get; set; }
          VB: >-
            <DataMember>

            Public Property IdUser As Integer
        parameters: []
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Model.FriendshipModel.IdUser*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.FriendshipModel.IdFriend
      commentId: P:ChineseCheckersLogicServer.Model.FriendshipModel.IdFriend
      language: CSharp
      name:
        CSharp: IdFriend
        VB: IdFriend
      nameWithType:
        CSharp: FriendshipModel.IdFriend
        VB: FriendshipModel.IdFriend
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.FriendshipModel.IdFriend
        VB: ChineseCheckersLogicServer.Model.FriendshipModel.IdFriend
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/FriendshipModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: IdFriend
        path: Model/FriendshipModel.cs
        startLine: 12
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public int IdFriend { get; set; }
          VB: >-
            <DataMember>

            Public Property IdFriend As Integer
        parameters: []
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Model.FriendshipModel.IdFriend*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.FriendshipModel.RequestStatus
      commentId: P:ChineseCheckersLogicServer.Model.FriendshipModel.RequestStatus
      language: CSharp
      name:
        CSharp: RequestStatus
        VB: RequestStatus
      nameWithType:
        CSharp: FriendshipModel.RequestStatus
        VB: FriendshipModel.RequestStatus
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.FriendshipModel.RequestStatus
        VB: ChineseCheckersLogicServer.Model.FriendshipModel.RequestStatus
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/FriendshipModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: RequestStatus
        path: Model/FriendshipModel.cs
        startLine: 14
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public string RequestStatus { get; set; }
          VB: >-
            <DataMember>

            Public Property RequestStatus As String
        parameters: []
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Model.FriendshipModel.RequestStatus*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.FriendshipModel.TypeNotification
      commentId: P:ChineseCheckersLogicServer.Model.FriendshipModel.TypeNotification
      language: CSharp
      name:
        CSharp: TypeNotification
        VB: TypeNotification
      nameWithType:
        CSharp: FriendshipModel.TypeNotification
        VB: FriendshipModel.TypeNotification
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.FriendshipModel.TypeNotification
        VB: ChineseCheckersLogicServer.Model.FriendshipModel.TypeNotification
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/FriendshipModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: TypeNotification
        path: Model/FriendshipModel.cs
        startLine: 16
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public string TypeNotification { get; set; }
          VB: >-
            <DataMember>

            Public Property TypeNotification As String
        parameters: []
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Model.FriendshipModel.TypeNotification*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.FriendshipModel.IdRoom
      commentId: P:ChineseCheckersLogicServer.Model.FriendshipModel.IdRoom
      language: CSharp
      name:
        CSharp: IdRoom
        VB: IdRoom
      nameWithType:
        CSharp: FriendshipModel.IdRoom
        VB: FriendshipModel.IdRoom
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.FriendshipModel.IdRoom
        VB: ChineseCheckersLogicServer.Model.FriendshipModel.IdRoom
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/FriendshipModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: IdRoom
        path: Model/FriendshipModel.cs
        startLine: 18
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public string IdRoom { get; set; }
          VB: >-
            <DataMember>

            Public Property IdRoom As String
        parameters: []
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Model.FriendshipModel.IdRoom*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: ChineseCheckersLogicServer.Model.ReportModel
    commentId: T:ChineseCheckersLogicServer.Model.ReportModel
    language: CSharp
    name:
      CSharp: ReportModel
      VB: ReportModel
    nameWithType:
      CSharp: ReportModel
      VB: ReportModel
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Model.ReportModel
      VB: ChineseCheckersLogicServer.Model.ReportModel
    type: Class
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Model
    source:
      remote:
        path: ChineseCheckersLogicServer/Model/ReportModel.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: ReportModel
      path: Model/ReportModel.cs
      startLine: 8
    syntax:
      content:
        CSharp: >-
          [DataContract]

          public class ReportModel
        VB: >-
          <DataContract>

          Public Class ReportModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.Runtime.Serialization.DataContractAttribute
      ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ChineseCheckersLogicServer.Model.ReportModel.IdUser
      commentId: P:ChineseCheckersLogicServer.Model.ReportModel.IdUser
      language: CSharp
      name:
        CSharp: IdUser
        VB: IdUser
      nameWithType:
        CSharp: ReportModel.IdUser
        VB: ReportModel.IdUser
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.ReportModel.IdUser
        VB: ChineseCheckersLogicServer.Model.ReportModel.IdUser
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/ReportModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: IdUser
        path: Model/ReportModel.cs
        startLine: 11
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public int IdUser { get; set; }
          VB: >-
            <DataMember>

            Public Property IdUser As Integer
        parameters: []
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Model.ReportModel.IdUser*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.ReportModel.Reason
      commentId: P:ChineseCheckersLogicServer.Model.ReportModel.Reason
      language: CSharp
      name:
        CSharp: Reason
        VB: Reason
      nameWithType:
        CSharp: ReportModel.Reason
        VB: ReportModel.Reason
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.ReportModel.Reason
        VB: ChineseCheckersLogicServer.Model.ReportModel.Reason
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/ReportModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: Reason
        path: Model/ReportModel.cs
        startLine: 13
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public string Reason { get; set; }
          VB: >-
            <DataMember>

            Public Property Reason As String
        parameters: []
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Model.ReportModel.Reason*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.ReportModel.CurrentDate
      commentId: P:ChineseCheckersLogicServer.Model.ReportModel.CurrentDate
      language: CSharp
      name:
        CSharp: CurrentDate
        VB: CurrentDate
      nameWithType:
        CSharp: ReportModel.CurrentDate
        VB: ReportModel.CurrentDate
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.ReportModel.CurrentDate
        VB: ChineseCheckersLogicServer.Model.ReportModel.CurrentDate
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/ReportModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: CurrentDate
        path: Model/ReportModel.cs
        startLine: 15
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public DateTime CurrentDate { get; set; }
          VB: >-
            <DataMember>

            Public Property CurrentDate As Date
        parameters: []
        return:
          type: System.DateTime
      overload: ChineseCheckersLogicServer.Model.ReportModel.CurrentDate*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.ReportModel.EndDate
      commentId: P:ChineseCheckersLogicServer.Model.ReportModel.EndDate
      language: CSharp
      name:
        CSharp: EndDate
        VB: EndDate
      nameWithType:
        CSharp: ReportModel.EndDate
        VB: ReportModel.EndDate
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.ReportModel.EndDate
        VB: ChineseCheckersLogicServer.Model.ReportModel.EndDate
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/ReportModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: EndDate
        path: Model/ReportModel.cs
        startLine: 17
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public DateTime EndDate { get; set; }
          VB: >-
            <DataMember>

            Public Property EndDate As Date
        parameters: []
        return:
          type: System.DateTime
      overload: ChineseCheckersLogicServer.Model.ReportModel.EndDate*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: ChineseCheckersLogicServer.Model.RoomModel
    commentId: T:ChineseCheckersLogicServer.Model.RoomModel
    language: CSharp
    name:
      CSharp: RoomModel
      VB: RoomModel
    nameWithType:
      CSharp: RoomModel
      VB: RoomModel
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Model.RoomModel
      VB: ChineseCheckersLogicServer.Model.RoomModel
    type: Class
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Model
    source:
      remote:
        path: ChineseCheckersLogicServer/Model/RoomModel.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: RoomModel
      path: Model/RoomModel.cs
      startLine: 9
    syntax:
      content:
        CSharp: >-
          [DataContract]

          public class RoomModel
        VB: >-
          <DataContract>

          Public Class RoomModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.Runtime.Serialization.DataContractAttribute
      ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ChineseCheckersLogicServer.Model.RoomModel.IdRoom
      commentId: P:ChineseCheckersLogicServer.Model.RoomModel.IdRoom
      language: CSharp
      name:
        CSharp: IdRoom
        VB: IdRoom
      nameWithType:
        CSharp: RoomModel.IdRoom
        VB: RoomModel.IdRoom
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.RoomModel.IdRoom
        VB: ChineseCheckersLogicServer.Model.RoomModel.IdRoom
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/RoomModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: IdRoom
        path: Model/RoomModel.cs
        startLine: 12
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public string IdRoom { get; set; }
          VB: >-
            <DataMember>

            Public Property IdRoom As String
        parameters: []
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Model.RoomModel.IdRoom*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.RoomModel.Players
      commentId: P:ChineseCheckersLogicServer.Model.RoomModel.Players
      language: CSharp
      name:
        CSharp: Players
        VB: Players
      nameWithType:
        CSharp: RoomModel.Players
        VB: RoomModel.Players
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.RoomModel.Players
        VB: ChineseCheckersLogicServer.Model.RoomModel.Players
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/RoomModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: Players
        path: Model/RoomModel.cs
        startLine: 14
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public Dictionary<string, IMessageCallback> Players { get; set; }
          VB: >-
            <DataMember>

            Public Property Players As Dictionary(Of String, IMessageCallback)
        parameters: []
        return:
          type: System.Collections.Generic.Dictionary{System.String,ChineseCheckersLogicServer.Contracts.IMessageCallback}
      overload: ChineseCheckersLogicServer.Model.RoomModel.Players*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom
      commentId: P:ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom
      language: CSharp
      name:
        CSharp: PlayersRoom
        VB: PlayersRoom
      nameWithType:
        CSharp: RoomModel.PlayersRoom
        VB: RoomModel.PlayersRoom
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom
        VB: ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/RoomModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: PlayersRoom
        path: Model/RoomModel.cs
        startLine: 16
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public Dictionary<string, IPlayersRoomCallback> PlayersRoom { get; set; }
          VB: >-
            <DataMember>

            Public Property PlayersRoom As Dictionary(Of String, IPlayersRoomCallback)
        parameters: []
        return:
          type: System.Collections.Generic.Dictionary{System.String,ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback}
      overload: ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers
      commentId: P:ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers
      language: CSharp
      name:
        CSharp: ColorForTwoPlayers
        VB: ColorForTwoPlayers
      nameWithType:
        CSharp: RoomModel.ColorForTwoPlayers
        VB: RoomModel.ColorForTwoPlayers
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers
        VB: ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/RoomModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ColorForTwoPlayers
        path: Model/RoomModel.cs
        startLine: 19
      syntax:
        content:
          CSharp: public char[] ColorForTwoPlayers { get; set; }
          VB: Public Property ColorForTwoPlayers As Char()
        parameters: []
        return:
          type: System.Char[]
      overload: ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers
      commentId: P:ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers
      language: CSharp
      name:
        CSharp: ColorForThreePlayers
        VB: ColorForThreePlayers
      nameWithType:
        CSharp: RoomModel.ColorForThreePlayers
        VB: RoomModel.ColorForThreePlayers
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers
        VB: ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/RoomModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ColorForThreePlayers
        path: Model/RoomModel.cs
        startLine: 20
      syntax:
        content:
          CSharp: public char[] ColorForThreePlayers { get; set; }
          VB: Public Property ColorForThreePlayers As Char()
        parameters: []
        return:
          type: System.Char[]
      overload: ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers
      commentId: P:ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers
      language: CSharp
      name:
        CSharp: ColorForFourPlayers
        VB: ColorForFourPlayers
      nameWithType:
        CSharp: RoomModel.ColorForFourPlayers
        VB: RoomModel.ColorForFourPlayers
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers
        VB: ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/RoomModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ColorForFourPlayers
        path: Model/RoomModel.cs
        startLine: 21
      syntax:
        content:
          CSharp: public char[] ColorForFourPlayers { get; set; }
          VB: Public Property ColorForFourPlayers As Char()
        parameters: []
        return:
          type: System.Char[]
      overload: ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers
      commentId: P:ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers
      language: CSharp
      name:
        CSharp: ColorForFivePlayers
        VB: ColorForFivePlayers
      nameWithType:
        CSharp: RoomModel.ColorForFivePlayers
        VB: RoomModel.ColorForFivePlayers
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers
        VB: ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/RoomModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ColorForFivePlayers
        path: Model/RoomModel.cs
        startLine: 22
      syntax:
        content:
          CSharp: public char[] ColorForFivePlayers { get; set; }
          VB: Public Property ColorForFivePlayers As Char()
        parameters: []
        return:
          type: System.Char[]
      overload: ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers
      commentId: P:ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers
      language: CSharp
      name:
        CSharp: ColorForSixPlayers
        VB: ColorForSixPlayers
      nameWithType:
        CSharp: RoomModel.ColorForSixPlayers
        VB: RoomModel.ColorForSixPlayers
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers
        VB: ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/RoomModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ColorForSixPlayers
        path: Model/RoomModel.cs
        startLine: 23
      syntax:
        content:
          CSharp: public char[] ColorForSixPlayers { get; set; }
          VB: Public Property ColorForSixPlayers As Char()
        parameters: []
        return:
          type: System.Char[]
      overload: ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: ChineseCheckersLogicServer.Model.UserModel
    commentId: T:ChineseCheckersLogicServer.Model.UserModel
    language: CSharp
    name:
      CSharp: UserModel
      VB: UserModel
    nameWithType:
      CSharp: UserModel
      VB: UserModel
    qualifiedName:
      CSharp: ChineseCheckersLogicServer.Model.UserModel
      VB: ChineseCheckersLogicServer.Model.UserModel
    type: Class
    assemblies:
    - ChineseCheckersLogicServer
    namespace: ChineseCheckersLogicServer.Model
    source:
      remote:
        path: ChineseCheckersLogicServer/Model/UserModel.cs
        branch: master
        repo: https://github.com/Alejandrin08/ServerGame.git
      id: UserModel
      path: Model/UserModel.cs
      startLine: 9
    syntax:
      content:
        CSharp: >-
          [DataContract]

          public class UserModel
        VB: >-
          <DataContract>

          Public Class UserModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.Runtime.Serialization.DataContractAttribute
      ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ChineseCheckersLogicServer.Model.UserModel.Id
      commentId: P:ChineseCheckersLogicServer.Model.UserModel.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: UserModel.Id
        VB: UserModel.Id
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.UserModel.Id
        VB: ChineseCheckersLogicServer.Model.UserModel.Id
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/UserModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: Id
        path: Model/UserModel.cs
        startLine: 12
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public int Id { get; set; }
          VB: >-
            <DataMember>

            Public Property Id As Integer
        parameters: []
        return:
          type: System.Int32
      overload: ChineseCheckersLogicServer.Model.UserModel.Id*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.UserModel.Gamertag
      commentId: P:ChineseCheckersLogicServer.Model.UserModel.Gamertag
      language: CSharp
      name:
        CSharp: Gamertag
        VB: Gamertag
      nameWithType:
        CSharp: UserModel.Gamertag
        VB: UserModel.Gamertag
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.UserModel.Gamertag
        VB: ChineseCheckersLogicServer.Model.UserModel.Gamertag
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/UserModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: Gamertag
        path: Model/UserModel.cs
        startLine: 14
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public string Gamertag { get; set; }
          VB: >-
            <DataMember>

            Public Property Gamertag As String
        parameters: []
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Model.UserModel.Gamertag*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.UserModel.Email
      commentId: P:ChineseCheckersLogicServer.Model.UserModel.Email
      language: CSharp
      name:
        CSharp: Email
        VB: Email
      nameWithType:
        CSharp: UserModel.Email
        VB: UserModel.Email
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.UserModel.Email
        VB: ChineseCheckersLogicServer.Model.UserModel.Email
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/UserModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: Email
        path: Model/UserModel.cs
        startLine: 16
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public string Email { get; set; }
          VB: >-
            <DataMember>

            Public Property Email As String
        parameters: []
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Model.UserModel.Email*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.UserModel.Password
      commentId: P:ChineseCheckersLogicServer.Model.UserModel.Password
      language: CSharp
      name:
        CSharp: Password
        VB: Password
      nameWithType:
        CSharp: UserModel.Password
        VB: UserModel.Password
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.UserModel.Password
        VB: ChineseCheckersLogicServer.Model.UserModel.Password
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/UserModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: Password
        path: Model/UserModel.cs
        startLine: 18
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public string Password { get; set; }
          VB: >-
            <DataMember>

            Public Property Password As String
        parameters: []
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Model.UserModel.Password*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.UserModel.ImageProfile
      commentId: P:ChineseCheckersLogicServer.Model.UserModel.ImageProfile
      language: CSharp
      name:
        CSharp: ImageProfile
        VB: ImageProfile
      nameWithType:
        CSharp: UserModel.ImageProfile
        VB: UserModel.ImageProfile
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.UserModel.ImageProfile
        VB: ChineseCheckersLogicServer.Model.UserModel.ImageProfile
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/UserModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: ImageProfile
        path: Model/UserModel.cs
        startLine: 20
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public string ImageProfile { get; set; }
          VB: >-
            <DataMember>

            Public Property ImageProfile As String
        parameters: []
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Model.UserModel.ImageProfile*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ChineseCheckersLogicServer.Model.UserModel.PlayerStatus
      commentId: P:ChineseCheckersLogicServer.Model.UserModel.PlayerStatus
      language: CSharp
      name:
        CSharp: PlayerStatus
        VB: PlayerStatus
      nameWithType:
        CSharp: UserModel.PlayerStatus
        VB: UserModel.PlayerStatus
      qualifiedName:
        CSharp: ChineseCheckersLogicServer.Model.UserModel.PlayerStatus
        VB: ChineseCheckersLogicServer.Model.UserModel.PlayerStatus
      type: Property
      assemblies:
      - ChineseCheckersLogicServer
      namespace: ChineseCheckersLogicServer.Model
      source:
        remote:
          path: ChineseCheckersLogicServer/Model/UserModel.cs
          branch: master
          repo: https://github.com/Alejandrin08/ServerGame.git
        id: PlayerStatus
        path: Model/UserModel.cs
        startLine: 22
      syntax:
        content:
          CSharp: >-
            [DataMember]

            public string PlayerStatus { get; set; }
          VB: >-
            <DataMember>

            Public Property PlayerStatus As String
        parameters: []
        return:
          type: System.String
      overload: ChineseCheckersLogicServer.Model.UserModel.PlayerStatus*
      attributes:
      - type: System.Runtime.Serialization.DataMemberAttribute
        ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame*
        name: ValidateGame
        nameWithType: IBoard.ValidateGame
        qualifiedName: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame*
        name: ValidateGame
        nameWithType: IBoard.ValidateGame
        qualifiedName: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame
  System.ServiceModel:
    name:
      CSharp:
      - name: System.ServiceModel
        nameWithType: System.ServiceModel
        qualifiedName: System.ServiceModel
        isExternal: true
      VB:
      - name: System.ServiceModel
        nameWithType: System.ServiceModel
        qualifiedName: System.ServiceModel
    isDefinition: true
    commentId: N:System.ServiceModel
  System.ServiceModel.OperationContractAttribute:
    name:
      CSharp:
      - id: System.ServiceModel.OperationContractAttribute
        name: OperationContractAttribute
        nameWithType: OperationContractAttribute
        qualifiedName: System.ServiceModel.OperationContractAttribute
        isExternal: true
      VB:
      - id: System.ServiceModel.OperationContractAttribute
        name: OperationContractAttribute
        nameWithType: OperationContractAttribute
        qualifiedName: System.ServiceModel.OperationContractAttribute
        isExternal: true
    isDefinition: true
    parent: System.ServiceModel
    commentId: T:System.ServiceModel.OperationContractAttribute
  System.ServiceModel.OperationContractAttribute.#ctor:
    name:
      CSharp:
      - id: System.ServiceModel.OperationContractAttribute.#ctor
        name: OperationContractAttribute
        nameWithType: OperationContractAttribute.OperationContractAttribute
        qualifiedName: System.ServiceModel.OperationContractAttribute.OperationContractAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ServiceModel.OperationContractAttribute.#ctor
        name: OperationContractAttribute
        nameWithType: OperationContractAttribute.OperationContractAttribute
        qualifiedName: System.ServiceModel.OperationContractAttribute.OperationContractAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ServiceModel.OperationContractAttribute
    commentId: M:System.ServiceModel.OperationContractAttribute.#ctor
  ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard*
        name: ValidateBoard
        nameWithType: IBoard.ValidateBoard
        qualifiedName: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard*
        name: ValidateBoard
        nameWithType: IBoard.ValidateBoard
        qualifiedName: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard
  ChineseCheckersLogicServer.Contracts.IBoard:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IBoard
        name: IBoard
        nameWithType: IBoard
        qualifiedName: ChineseCheckersLogicServer.Contracts.IBoard
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IBoard
        name: IBoard
        nameWithType: IBoard
        qualifiedName: ChineseCheckersLogicServer.Contracts.IBoard
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.IBoard
  System.ServiceModel.ServiceContractAttribute:
    name:
      CSharp:
      - id: System.ServiceModel.ServiceContractAttribute
        name: ServiceContractAttribute
        nameWithType: ServiceContractAttribute
        qualifiedName: System.ServiceModel.ServiceContractAttribute
        isExternal: true
      VB:
      - id: System.ServiceModel.ServiceContractAttribute
        name: ServiceContractAttribute
        nameWithType: ServiceContractAttribute
        qualifiedName: System.ServiceModel.ServiceContractAttribute
        isExternal: true
    isDefinition: true
    parent: System.ServiceModel
    commentId: T:System.ServiceModel.ServiceContractAttribute
  System.ServiceModel.ServiceContractAttribute.#ctor:
    name:
      CSharp:
      - id: System.ServiceModel.ServiceContractAttribute.#ctor
        name: ServiceContractAttribute
        nameWithType: ServiceContractAttribute.ServiceContractAttribute
        qualifiedName: System.ServiceModel.ServiceContractAttribute.ServiceContractAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ServiceModel.ServiceContractAttribute.#ctor
        name: ServiceContractAttribute
        nameWithType: ServiceContractAttribute.ServiceContractAttribute
        qualifiedName: System.ServiceModel.ServiceContractAttribute.ServiceContractAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ServiceModel.ServiceContractAttribute
    commentId: M:System.ServiceModel.ServiceContractAttribute.#ctor
  ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn*
        name: SendToTurn
        nameWithType: ITurn.SendToTurn
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn
      VB:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn*
        name: SendToTurn
        nameWithType: ITurn.SendToTurn
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn
  ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame*
        name: AddPlayerInGame
        nameWithType: ITurn.AddPlayerInGame
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame
      VB:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame*
        name: AddPlayerInGame
        nameWithType: ITurn.AddPlayerInGame
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame
  ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame*
        name: RemovePlayerFromGame
        nameWithType: ITurn.RemovePlayerFromGame
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame
      VB:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame*
        name: RemovePlayerFromGame
        nameWithType: ITurn.RemovePlayerFromGame
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame
  System.Windows:
    name:
      CSharp:
      - name: System.Windows
        nameWithType: System.Windows
        qualifiedName: System.Windows
        isExternal: true
      VB:
      - name: System.Windows
        nameWithType: System.Windows
        qualifiedName: System.Windows
    isDefinition: true
    commentId: N:System.Windows
  System.Windows.Point:
    name:
      CSharp:
      - id: System.Windows.Point
        name: Point
        nameWithType: Point
        qualifiedName: System.Windows.Point
        isExternal: true
      VB:
      - id: System.Windows.Point
        name: Point
        nameWithType: Point
        qualifiedName: System.Windows.Point
        isExternal: true
    isDefinition: true
    parent: System.Windows
    commentId: T:System.Windows.Point
  ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard*
        name: UpdateBoard
        nameWithType: ITurn.UpdateBoard
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard
      VB:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard*
        name: UpdateBoard
        nameWithType: ITurn.UpdateBoard
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard
  ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer*
        name: WinningPlayer
        nameWithType: ITurn.WinningPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer
      VB:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer*
        name: WinningPlayer
        nameWithType: ITurn.WinningPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer
  ChineseCheckersLogicServer.Contracts.ITurn:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.ITurn
        name: ITurn
        nameWithType: ITurn
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn
      VB:
      - id: ChineseCheckersLogicServer.Contracts.ITurn
        name: ITurn
        nameWithType: ITurn
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.ITurn
  ChineseCheckersLogicServer.Contracts:
    name:
      CSharp:
      - name: ChineseCheckersLogicServer.Contracts
        nameWithType: ChineseCheckersLogicServer.Contracts
        qualifiedName: ChineseCheckersLogicServer.Contracts
      VB:
      - name: ChineseCheckersLogicServer.Contracts
        nameWithType: ChineseCheckersLogicServer.Contracts
        qualifiedName: ChineseCheckersLogicServer.Contracts
    isDefinition: true
    commentId: N:ChineseCheckersLogicServer.Contracts
  ChineseCheckersLogicServer.Contracts.ITurnCallback:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.ITurnCallback
        name: ITurnCallback
        nameWithType: ITurnCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurnCallback
      VB:
      - id: ChineseCheckersLogicServer.Contracts.ITurnCallback
        name: ITurnCallback
        nameWithType: ITurnCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurnCallback
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.ITurnCallback
  System.Type:
    name:
      CSharp:
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      VB:
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Type
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  ChineseCheckersLogicServer.Contracts.ITurnCallback.GameTurn*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.ITurnCallback.GameTurn*
        name: GameTurn
        nameWithType: ITurnCallback.GameTurn
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurnCallback.GameTurn
      VB:
      - id: ChineseCheckersLogicServer.Contracts.ITurnCallback.GameTurn*
        name: GameTurn
        nameWithType: ITurnCallback.GameTurn
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurnCallback.GameTurn
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.ITurnCallback.GameTurn
  ChineseCheckersLogicServer.Contracts.ITurnCallback.UpdateBoardCallback*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.ITurnCallback.UpdateBoardCallback*
        name: UpdateBoardCallback
        nameWithType: ITurnCallback.UpdateBoardCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurnCallback.UpdateBoardCallback
      VB:
      - id: ChineseCheckersLogicServer.Contracts.ITurnCallback.UpdateBoardCallback*
        name: UpdateBoardCallback
        nameWithType: ITurnCallback.UpdateBoardCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurnCallback.UpdateBoardCallback
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.ITurnCallback.UpdateBoardCallback
  ChineseCheckersLogicServer.Contracts.ITurnCallback.WinningPlayerCallback*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.ITurnCallback.WinningPlayerCallback*
        name: WinningPlayerCallback
        nameWithType: ITurnCallback.WinningPlayerCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurnCallback.WinningPlayerCallback
      VB:
      - id: ChineseCheckersLogicServer.Contracts.ITurnCallback.WinningPlayerCallback*
        name: WinningPlayerCallback
        nameWithType: ITurnCallback.WinningPlayerCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurnCallback.WinningPlayerCallback
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.ITurnCallback.WinningPlayerCallback
  ChineseCheckersLogicServer.Model:
    name:
      CSharp:
      - name: ChineseCheckersLogicServer.Model
        nameWithType: ChineseCheckersLogicServer.Model
        qualifiedName: ChineseCheckersLogicServer.Model
      VB:
      - name: ChineseCheckersLogicServer.Model
        nameWithType: ChineseCheckersLogicServer.Model
        qualifiedName: ChineseCheckersLogicServer.Model
    isDefinition: true
    commentId: N:ChineseCheckersLogicServer.Model
  ChineseCheckersLogicServer.Model.FriendshipModel:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.FriendshipModel
        name: FriendshipModel
        nameWithType: FriendshipModel
        qualifiedName: ChineseCheckersLogicServer.Model.FriendshipModel
      VB:
      - id: ChineseCheckersLogicServer.Model.FriendshipModel
        name: FriendshipModel
        nameWithType: FriendshipModel
        qualifiedName: ChineseCheckersLogicServer.Model.FriendshipModel
    isDefinition: true
    parent: ChineseCheckersLogicServer.Model
    commentId: T:ChineseCheckersLogicServer.Model.FriendshipModel
  ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer*
        name: AddFriendPlayer
        nameWithType: IFriendship.AddFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer*
        name: AddFriendPlayer
        nameWithType: IFriendship.AddFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer
  ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer*
        name: UpdateFriendPlayer
        nameWithType: IFriendship.UpdateFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer*
        name: UpdateFriendPlayer
        nameWithType: IFriendship.UpdateFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer
  ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer*
        name: DeleteFriendPlayer
        nameWithType: IFriendship.DeleteFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer*
        name: DeleteFriendPlayer
        nameWithType: IFriendship.DeleteFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer
  ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest*
        name: ValidateFriendRequest
        nameWithType: IFriendship.ValidateFriendRequest
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest*
        name: ValidateFriendRequest
        nameWithType: IFriendship.ValidateFriendRequest
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest
  ChineseCheckersLogicServer.Contracts.IFriendship:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship
        name: IFriendship
        nameWithType: IFriendship
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship
        name: IFriendship
        nameWithType: IFriendship
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.IFriendship
  ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest*
        name: GetFriendRequest
        nameWithType: IUserFriendRequest.GetFriendRequest
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest*
        name: GetFriendRequest
        nameWithType: IUserFriendRequest.GetFriendRequest
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest
  ChineseCheckersLogicServer.Contracts.IUserFriendRequest:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUserFriendRequest
        name: IUserFriendRequest
        nameWithType: IUserFriendRequest
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserFriendRequest
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUserFriendRequest
        name: IUserFriendRequest
        nameWithType: IUserFriendRequest
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserFriendRequest
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.IUserFriendRequest
  ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback
        name: IUserFriendRequestCallback
        nameWithType: IUserFriendRequestCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback
        name: IUserFriendRequestCallback
        nameWithType: IUserFriendRequestCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.Dictionary{System.String,System.ValueTuple{System.String,System.String,System.String}}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.ValueTuple`3
        name: (T1, T2, T3)
        nameWithType: (T1, T2, T3)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.ValueTuple`3
        name: (T1, T2, T3)
        nameWithType: (T1, T2, T3)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.ValueTuple{System.String,System.String,System.String}}
  ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback.GetFriendRequestCallback*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback.GetFriendRequestCallback*
        name: GetFriendRequestCallback
        nameWithType: IUserFriendRequestCallback.GetFriendRequestCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback.GetFriendRequestCallback
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback.GetFriendRequestCallback*
        name: GetFriendRequestCallback
        nameWithType: IUserFriendRequestCallback.GetFriendRequestCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback.GetFriendRequestCallback
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUserFriendRequestCallback.GetFriendRequestCallback
  ChineseCheckersLogicServer.Model.ReportModel:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.ReportModel
        name: ReportModel
        nameWithType: ReportModel
        qualifiedName: ChineseCheckersLogicServer.Model.ReportModel
      VB:
      - id: ChineseCheckersLogicServer.Model.ReportModel
        name: ReportModel
        nameWithType: ReportModel
        qualifiedName: ChineseCheckersLogicServer.Model.ReportModel
    isDefinition: true
    parent: ChineseCheckersLogicServer.Model
    commentId: T:ChineseCheckersLogicServer.Model.ReportModel
  ChineseCheckersLogicServer.Contracts.IReport.AddReport*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IReport.AddReport*
        name: AddReport
        nameWithType: IReport.AddReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.AddReport
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IReport.AddReport*
        name: AddReport
        nameWithType: IReport.AddReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.AddReport
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IReport.AddReport
  ChineseCheckersLogicServer.Contracts.IReport.UpdateReport*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport*
        name: UpdateReport
        nameWithType: IReport.UpdateReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport*
        name: UpdateReport
        nameWithType: IReport.UpdateReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IReport.UpdateReport
  ChineseCheckersLogicServer.Contracts.IReport.DeleteReport*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport*
        name: DeleteReport
        nameWithType: IReport.DeleteReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport*
        name: DeleteReport
        nameWithType: IReport.DeleteReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IReport.DeleteReport
  ChineseCheckersLogicServer.Contracts.IReport.GetNumReports*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports*
        name: GetNumReports
        nameWithType: IReport.GetNumReports
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports*
        name: GetNumReports
        nameWithType: IReport.GetNumReports
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IReport.GetNumReports
  System.DateTime:
    name:
      CSharp:
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
      VB:
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.DateTime
  ChineseCheckersLogicServer.Contracts.IReport.GetDateReport*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport*
        name: GetDateReport
        nameWithType: IReport.GetDateReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport*
        name: GetDateReport
        nameWithType: IReport.GetDateReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IReport.GetDateReport
  ChineseCheckersLogicServer.Contracts.IReport.IsBanned*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IReport.IsBanned*
        name: IsBanned
        nameWithType: IReport.IsBanned
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.IsBanned
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IReport.IsBanned*
        name: IsBanned
        nameWithType: IReport.IsBanned
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.IsBanned
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IReport.IsBanned
  ChineseCheckersLogicServer.Contracts.IReport.IsReported*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IReport.IsReported*
        name: IsReported
        nameWithType: IReport.IsReported
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.IsReported
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IReport.IsReported*
        name: IsReported
        nameWithType: IReport.IsReported
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.IsReported
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IReport.IsReported
  ChineseCheckersLogicServer.Contracts.IReport:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IReport
        name: IReport
        nameWithType: IReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IReport
        name: IReport
        nameWithType: IReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.IReport
  ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom*
        name: CreateRoom
        nameWithType: IRoom.CreateRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom*
        name: CreateRoom
        nameWithType: IRoom.CreateRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom
  ChineseCheckersLogicServer.Contracts.IRoom.GenerateId*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId*
        name: GenerateId
        nameWithType: IRoom.GenerateId
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId*
        name: GenerateId
        nameWithType: IRoom.GenerateId
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
  ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer*
        name: RemovePlayer
        nameWithType: IRoom.RemovePlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer*
        name: RemovePlayer
        nameWithType: IRoom.RemovePlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer
  ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom*
        name: ValidateRoom
        nameWithType: IRoom.ValidateRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom*
        name: ValidateRoom
        nameWithType: IRoom.ValidateRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom
  ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom*
        name: ValidateBoardRoom
        nameWithType: IRoom.ValidateBoardRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom*
        name: ValidateBoardRoom
        nameWithType: IRoom.ValidateBoardRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom
  ChineseCheckersLogicServer.Contracts.IRoom:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IRoom
        name: IRoom
        nameWithType: IRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IRoom
        name: IRoom
        nameWithType: IRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.IRoom
  ChineseCheckersLogicServer.Contracts.IMessage.SendMessage*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage*
        name: SendMessage
        nameWithType: IMessage.SendMessage
        qualifiedName: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage*
        name: SendMessage
        nameWithType: IMessage.SendMessage
        qualifiedName: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IMessage.SendMessage
  ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer*
        name: AddPlayer
        nameWithType: IMessage.AddPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer*
        name: AddPlayer
        nameWithType: IMessage.AddPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer
  ChineseCheckersLogicServer.Contracts.IMessage:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IMessage
        name: IMessage
        nameWithType: IMessage
        qualifiedName: ChineseCheckersLogicServer.Contracts.IMessage
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IMessage
        name: IMessage
        nameWithType: IMessage
        qualifiedName: ChineseCheckersLogicServer.Contracts.IMessage
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.IMessage
  ChineseCheckersLogicServer.Contracts.IMessageCallback:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IMessageCallback
        name: IMessageCallback
        nameWithType: IMessageCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IMessageCallback
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IMessageCallback
        name: IMessageCallback
        nameWithType: IMessageCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IMessageCallback
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.IMessageCallback
  ChineseCheckersLogicServer.Contracts.IMessageCallback.SendMessageCallback*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IMessageCallback.SendMessageCallback*
        name: SendMessageCallback
        nameWithType: IMessageCallback.SendMessageCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IMessageCallback.SendMessageCallback
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IMessageCallback.SendMessageCallback*
        name: SendMessageCallback
        nameWithType: IMessageCallback.SendMessageCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IMessageCallback.SendMessageCallback
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IMessageCallback.SendMessageCallback
  ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom*
        name: GetPlayersRoom
        nameWithType: IPlayersRoom.GetPlayersRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom*
        name: GetPlayersRoom
        nameWithType: IPlayersRoom.GetPlayersRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom
  ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom*
        name: AddPlayerRoom
        nameWithType: IPlayersRoom.AddPlayerRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom*
        name: AddPlayerRoom
        nameWithType: IPlayersRoom.AddPlayerRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom
  ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom*
        name: RemovePlayerRoom
        nameWithType: IPlayersRoom.RemovePlayerRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom*
        name: RemovePlayerRoom
        nameWithType: IPlayersRoom.RemovePlayerRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom
  ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard*
        name: SendToBoard
        nameWithType: IPlayersRoom.SendToBoard
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard*
        name: SendToBoard
        nameWithType: IPlayersRoom.SendToBoard
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard
  ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors*
        name: AssignColors
        nameWithType: IPlayersRoom.AssignColors
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors*
        name: AssignColors
        nameWithType: IPlayersRoom.AssignColors
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors
  ChineseCheckersLogicServer.Contracts.IPlayersRoom:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom
        name: IPlayersRoom
        nameWithType: IPlayersRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom
        name: IPlayersRoom
        nameWithType: IPlayersRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.IPlayersRoom
  ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
        name: IPlayersRoomCallback
        nameWithType: IPlayersRoomCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
        name: IPlayersRoomCallback
        nameWithType: IPlayersRoomCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic.List{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String}
  ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback*
        name: GetPlayersRoomCallback
        nameWithType: IPlayersRoomCallback.GetPlayersRoomCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback*
        name: GetPlayersRoomCallback
        nameWithType: IPlayersRoomCallback.GetPlayersRoomCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback
  ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback*
        name: SendToBoardCallback
        nameWithType: IPlayersRoomCallback.SendToBoardCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback*
        name: SendToBoardCallback
        nameWithType: IPlayersRoomCallback.SendToBoardCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback
  System.Collections.Generic.Dictionary{System.String,System.Char}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.Char}
  ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback*
        name: AssignColorsCallback
        nameWithType: IPlayersRoomCallback.AssignColorsCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback*
        name: AssignColorsCallback
        nameWithType: IPlayersRoomCallback.AssignColorsCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback
  ChineseCheckersLogicServer.Model.UserModel:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.UserModel
        name: UserModel
        nameWithType: UserModel
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel
      VB:
      - id: ChineseCheckersLogicServer.Model.UserModel
        name: UserModel
        nameWithType: UserModel
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel
    isDefinition: true
    parent: ChineseCheckersLogicServer.Model
    commentId: T:ChineseCheckersLogicServer.Model.UserModel
  ChineseCheckersLogicServer.Contracts.IUser.AddUserGame*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame*
        name: AddUserGame
        nameWithType: IUser.AddUserGame
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame*
        name: AddUserGame
        nameWithType: IUser.AddUserGame
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.AddUserGame
  ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount*
        name: AddUserAccount
        nameWithType: IUser.AddUserAccount
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount*
        name: AddUserAccount
        nameWithType: IUser.AddUserAccount
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount
  ChineseCheckersLogicServer.Contracts.IUser.ValidateUser*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser*
        name: ValidateUser
        nameWithType: IUser.ValidateUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser*
        name: ValidateUser
        nameWithType: IUser.ValidateUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.ValidateUser
  ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage*
        name: GetPlayerImage
        nameWithType: IUser.GetPlayerImage
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage*
        name: GetPlayerImage
        nameWithType: IUser.GetPlayerImage
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage
  ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer*
        name: UpdateStatusPlayer
        nameWithType: IUser.UpdateStatusPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer*
        name: UpdateStatusPlayer
        nameWithType: IUser.UpdateStatusPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer
  ChineseCheckersLogicServer.Contracts.IUser.LogoutUser*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser*
        name: LogoutUser
        nameWithType: IUser.LogoutUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser*
        name: LogoutUser
        nameWithType: IUser.LogoutUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.LogoutUser
  ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail*
        name: ValidateEmail
        nameWithType: IUser.ValidateEmail
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail*
        name: ValidateEmail
        nameWithType: IUser.ValidateEmail
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail
  ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag*
        name: ValidateGamertag
        nameWithType: IUser.ValidateGamertag
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag*
        name: ValidateGamertag
        nameWithType: IUser.ValidateGamertag
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag
  ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword*
        name: UpdatePassword
        nameWithType: IUser.UpdatePassword
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword*
        name: UpdatePassword
        nameWithType: IUser.UpdatePassword
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword
  ChineseCheckersLogicServer.Contracts.IUser.InfoUser*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.InfoUser*
        name: InfoUser
        nameWithType: IUser.InfoUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.InfoUser
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.InfoUser*
        name: InfoUser
        nameWithType: IUser.InfoUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.InfoUser
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.InfoUser
  ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser*
        name: UpdateInfoUser
        nameWithType: IUser.UpdateInfoUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser*
        name: UpdateInfoUser
        nameWithType: IUser.UpdateInfoUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser
  ChineseCheckersLogicServer.Contracts.IUser.FindGamertag*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag*
        name: FindGamertag
        nameWithType: IUser.FindGamertag
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag*
        name: FindGamertag
        nameWithType: IUser.FindGamertag
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.FindGamertag
  ChineseCheckersLogicServer.Contracts.IUser.GetEmail*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetEmail*
        name: GetEmail
        nameWithType: IUser.GetEmail
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetEmail
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetEmail*
        name: GetEmail
        nameWithType: IUser.GetEmail
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetEmail
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.GetEmail
  ChineseCheckersLogicServer.Contracts.IUser.GetId*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetId*
        name: GetId
        nameWithType: IUser.GetId
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetId
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetId*
        name: GetId
        nameWithType: IUser.GetId
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetId
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.GetId
  ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon*
        name: UpdateGamesWon
        nameWithType: IUser.UpdateGamesWon
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon*
        name: UpdateGamesWon
        nameWithType: IUser.UpdateGamesWon
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon
  ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames*
        name: UpdateTotalGames
        nameWithType: IUser.UpdateTotalGames
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames*
        name: UpdateTotalGames
        nameWithType: IUser.UpdateTotalGames
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames
  ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames*
        name: GetTotalGames
        nameWithType: IUser.GetTotalGames
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames*
        name: GetTotalGames
        nameWithType: IUser.GetTotalGames
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames
  ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon*
        name: GetGamesWon
        nameWithType: IUser.GetGamesWon
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon*
        name: GetGamesWon
        nameWithType: IUser.GetGamesWon
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon
  System.Collections.Generic.Dictionary{System.String,System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int32}
  ChineseCheckersLogicServer.Contracts.IUser.GetGames*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetGames*
        name: GetGames
        nameWithType: IUser.GetGames
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetGames
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetGames*
        name: GetGames
        nameWithType: IUser.GetGames
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetGames
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUser.GetGames
  ChineseCheckersLogicServer.Contracts.IUser:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser
        name: IUser
        nameWithType: IUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser
        name: IUser
        nameWithType: IUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.IUser
  ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends*
        name: GetFriends
        nameWithType: IUsersManager.GetFriends
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends*
        name: GetFriends
        nameWithType: IUsersManager.GetFriends
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends
  ChineseCheckersLogicServer.Contracts.IUsersManager:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUsersManager
        name: IUsersManager
        nameWithType: IUsersManager
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUsersManager
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUsersManager
        name: IUsersManager
        nameWithType: IUsersManager
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUsersManager
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.IUsersManager
  ChineseCheckersLogicServer.Contracts.IUserCallback:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUserCallback
        name: IUserCallback
        nameWithType: IUserCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserCallback
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUserCallback
        name: IUserCallback
        nameWithType: IUserCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserCallback
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.IUserCallback
  System.Collections.Generic.Dictionary{System.String,System.Tuple{System.String,System.Boolean}}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Tuple`2
        name: Tuple
        nameWithType: Tuple
        qualifiedName: System.Tuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Tuple`2
        name: Tuple
        nameWithType: Tuple
        qualifiedName: System.Tuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.Tuple{System.String,System.Boolean}}
  ChineseCheckersLogicServer.Contracts.IUserCallback.GetFriendsCallback*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUserCallback.GetFriendsCallback*
        name: GetFriendsCallback
        nameWithType: IUserCallback.GetFriendsCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserCallback.GetFriendsCallback
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUserCallback.GetFriendsCallback*
        name: GetFriendsCallback
        nameWithType: IUserCallback.GetFriendsCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserCallback.GetFriendsCallback
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUserCallback.GetFriendsCallback
  ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer*
        name: GetSessionPlayer
        nameWithType: IUserSession.GetSessionPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer*
        name: GetSessionPlayer
        nameWithType: IUserSession.GetSessionPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer
  ChineseCheckersLogicServer.Contracts.IUserSession:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUserSession
        name: IUserSession
        nameWithType: IUserSession
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserSession
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUserSession
        name: IUserSession
        nameWithType: IUserSession
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserSession
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.IUserSession
  ChineseCheckersLogicServer.Contracts.IUserSessionCallback:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUserSessionCallback
        name: IUserSessionCallback
        nameWithType: IUserSessionCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserSessionCallback
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUserSessionCallback
        name: IUserSessionCallback
        nameWithType: IUserSessionCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserSessionCallback
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts
    commentId: T:ChineseCheckersLogicServer.Contracts.IUserSessionCallback
  ChineseCheckersLogicServer.Contracts.IUserSessionCallback.GetSessionPlayerCallback*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUserSessionCallback.GetSessionPlayerCallback*
        name: GetSessionPlayerCallback
        nameWithType: IUserSessionCallback.GetSessionPlayerCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserSessionCallback.GetSessionPlayerCallback
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUserSessionCallback.GetSessionPlayerCallback*
        name: GetSessionPlayerCallback
        nameWithType: IUserSessionCallback.GetSessionPlayerCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserSessionCallback.GetSessionPlayerCallback
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Contracts.IUserSessionCallback.GetSessionPlayerCallback
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame*
        name: ValidateGame
        nameWithType: ManagerController.ValidateGame
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame*
        name: ValidateGame
        nameWithType: ManagerController.ValidateGame
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame
  ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame(System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame(System.String)
        name: ValidateGame
        nameWithType: IBoard.ValidateGame
        qualifiedName: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame(System.String)
        name: ValidateGame
        nameWithType: IBoard.ValidateGame
        qualifiedName: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IBoard
    commentId: M:ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame(System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard*
        name: ValidateBoard
        nameWithType: ManagerController.ValidateBoard
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard*
        name: ValidateBoard
        nameWithType: ManagerController.ValidateBoard
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard
  ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard(System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard(System.String)
        name: ValidateBoard
        nameWithType: IBoard.ValidateBoard
        qualifiedName: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard(System.String)
        name: ValidateBoard
        nameWithType: IBoard.ValidateBoard
        qualifiedName: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IBoard
    commentId: M:ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard(System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn*
        name: SendToTurn
        nameWithType: ManagerController.SendToTurn
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn*
        name: SendToTurn
        nameWithType: ManagerController.SendToTurn
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn
  ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn(System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn(System.String)
        name: SendToTurn
        nameWithType: ITurn.SendToTurn
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn(System.String)
        name: SendToTurn
        nameWithType: ITurn.SendToTurn
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.ITurn
    commentId: M:ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn(System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard*
        name: UpdateBoard
        nameWithType: ManagerController.UpdateBoard
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard*
        name: UpdateBoard
        nameWithType: ManagerController.UpdateBoard
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard
  ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
        name: UpdateBoard
        nameWithType: ITurn.UpdateBoard
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Windows.Point
        name: Point
        nameWithType: Point
        qualifiedName: System.Windows.Point
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Windows.Point
        name: Point
        nameWithType: Point
        qualifiedName: System.Windows.Point
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
        name: UpdateBoard
        nameWithType: ITurn.UpdateBoard
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Windows.Point
        name: Point
        nameWithType: Point
        qualifiedName: System.Windows.Point
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Windows.Point
        name: Point
        nameWithType: Point
        qualifiedName: System.Windows.Point
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.ITurn
    commentId: M:ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame*
        name: AddPlayerInGame
        nameWithType: ManagerController.AddPlayerInGame
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame*
        name: AddPlayerInGame
        nameWithType: ManagerController.AddPlayerInGame
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame
  ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame(System.String,System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame(System.String,System.String)
        name: AddPlayerInGame
        nameWithType: ITurn.AddPlayerInGame
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame(System.String,System.String)
        name: AddPlayerInGame
        nameWithType: ITurn.AddPlayerInGame
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.ITurn
    commentId: M:ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame(System.String,System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame*
        name: RemovePlayerFromGame
        nameWithType: ManagerController.RemovePlayerFromGame
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame*
        name: RemovePlayerFromGame
        nameWithType: ManagerController.RemovePlayerFromGame
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame
  ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame(System.String,System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame(System.String,System.String)
        name: RemovePlayerFromGame
        nameWithType: ITurn.RemovePlayerFromGame
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame(System.String,System.String)
        name: RemovePlayerFromGame
        nameWithType: ITurn.RemovePlayerFromGame
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.ITurn
    commentId: M:ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame(System.String,System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer*
        name: WinningPlayer
        nameWithType: ManagerController.WinningPlayer
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer*
        name: WinningPlayer
        nameWithType: ManagerController.WinningPlayer
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer
  ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer(System.String,System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer(System.String,System.String)
        name: WinningPlayer
        nameWithType: ITurn.WinningPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer(System.String,System.String)
        name: WinningPlayer
        nameWithType: ITurn.WinningPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.ITurn
    commentId: M:ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer(System.String,System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer*
        name: AddFriendPlayer
        nameWithType: ManagerController.AddFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer*
        name: AddFriendPlayer
        nameWithType: ManagerController.AddFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer
  ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
        name: AddFriendPlayer
        nameWithType: IFriendship.AddFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.FriendshipModel
        name: FriendshipModel
        nameWithType: FriendshipModel
        qualifiedName: ChineseCheckersLogicServer.Model.FriendshipModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
        name: AddFriendPlayer
        nameWithType: IFriendship.AddFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.FriendshipModel
        name: FriendshipModel
        nameWithType: FriendshipModel
        qualifiedName: ChineseCheckersLogicServer.Model.FriendshipModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IFriendship
    commentId: M:ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer*
        name: UpdateFriendPlayer
        nameWithType: ManagerController.UpdateFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer*
        name: UpdateFriendPlayer
        nameWithType: ManagerController.UpdateFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer
  ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer(System.Int32,System.Int32,System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer(System.Int32,System.Int32,System.String)
        name: UpdateFriendPlayer
        nameWithType: IFriendship.UpdateFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer(System.Int32,System.Int32,System.String)
        name: UpdateFriendPlayer
        nameWithType: IFriendship.UpdateFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IFriendship
    commentId: M:ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer(System.Int32,System.Int32,System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer*
        name: DeleteFriendPlayer
        nameWithType: ManagerController.DeleteFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer*
        name: DeleteFriendPlayer
        nameWithType: ManagerController.DeleteFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer
  ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
        name: DeleteFriendPlayer
        nameWithType: IFriendship.DeleteFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.FriendshipModel
        name: FriendshipModel
        nameWithType: FriendshipModel
        qualifiedName: ChineseCheckersLogicServer.Model.FriendshipModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
        name: DeleteFriendPlayer
        nameWithType: IFriendship.DeleteFriendPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.FriendshipModel
        name: FriendshipModel
        nameWithType: FriendshipModel
        qualifiedName: ChineseCheckersLogicServer.Model.FriendshipModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IFriendship
    commentId: M:ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest*
        name: ValidateFriendRequest
        nameWithType: ManagerController.ValidateFriendRequest
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest*
        name: ValidateFriendRequest
        nameWithType: ManagerController.ValidateFriendRequest
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest
  ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest(System.Int32,System.Int32,System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest(System.Int32,System.Int32,System.String)
        name: ValidateFriendRequest
        nameWithType: IFriendship.ValidateFriendRequest
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest(System.Int32,System.Int32,System.String)
        name: ValidateFriendRequest
        nameWithType: IFriendship.ValidateFriendRequest
        qualifiedName: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IFriendship
    commentId: M:ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest(System.Int32,System.Int32,System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest*
        name: GetFriendRequest
        nameWithType: ManagerController.GetFriendRequest
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest*
        name: GetFriendRequest
        nameWithType: ManagerController.GetFriendRequest
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest
  ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest(System.Int32):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest(System.Int32)
        name: GetFriendRequest
        nameWithType: IUserFriendRequest.GetFriendRequest
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest(System.Int32)
        name: GetFriendRequest
        nameWithType: IUserFriendRequest.GetFriendRequest
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUserFriendRequest
    commentId: M:ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest(System.Int32)
  ChineseCheckersLogicServer.Controller.ManagerController.AddReport*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.AddReport*
        name: AddReport
        nameWithType: ManagerController.AddReport
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.AddReport
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.AddReport*
        name: AddReport
        nameWithType: ManagerController.AddReport
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.AddReport
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.AddReport
  ChineseCheckersLogicServer.Contracts.IReport.AddReport(ChineseCheckersLogicServer.Model.ReportModel):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IReport.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
        name: AddReport
        nameWithType: IReport.AddReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.AddReport
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.ReportModel
        name: ReportModel
        nameWithType: ReportModel
        qualifiedName: ChineseCheckersLogicServer.Model.ReportModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IReport.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
        name: AddReport
        nameWithType: IReport.AddReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.AddReport
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.ReportModel
        name: ReportModel
        nameWithType: ReportModel
        qualifiedName: ChineseCheckersLogicServer.Model.ReportModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IReport
    commentId: M:ChineseCheckersLogicServer.Contracts.IReport.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
  ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport*
        name: UpdateReport
        nameWithType: ManagerController.UpdateReport
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport*
        name: UpdateReport
        nameWithType: ManagerController.UpdateReport
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport
  ChineseCheckersLogicServer.Contracts.IReport.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
        name: UpdateReport
        nameWithType: IReport.UpdateReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.ReportModel
        name: ReportModel
        nameWithType: ReportModel
        qualifiedName: ChineseCheckersLogicServer.Model.ReportModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
        name: UpdateReport
        nameWithType: IReport.UpdateReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.ReportModel
        name: ReportModel
        nameWithType: ReportModel
        qualifiedName: ChineseCheckersLogicServer.Model.ReportModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IReport
    commentId: M:ChineseCheckersLogicServer.Contracts.IReport.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
  ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport*
        name: DeleteReport
        nameWithType: ManagerController.DeleteReport
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport*
        name: DeleteReport
        nameWithType: ManagerController.DeleteReport
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport
  ChineseCheckersLogicServer.Contracts.IReport.DeleteReport(System.Int32):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport(System.Int32)
        name: DeleteReport
        nameWithType: IReport.DeleteReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport(System.Int32)
        name: DeleteReport
        nameWithType: IReport.DeleteReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IReport
    commentId: M:ChineseCheckersLogicServer.Contracts.IReport.DeleteReport(System.Int32)
  ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports*
        name: GetNumReports
        nameWithType: ManagerController.GetNumReports
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports*
        name: GetNumReports
        nameWithType: ManagerController.GetNumReports
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports
  ChineseCheckersLogicServer.Contracts.IReport.GetNumReports(System.Int32):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports(System.Int32)
        name: GetNumReports
        nameWithType: IReport.GetNumReports
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports(System.Int32)
        name: GetNumReports
        nameWithType: IReport.GetNumReports
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IReport
    commentId: M:ChineseCheckersLogicServer.Contracts.IReport.GetNumReports(System.Int32)
  ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport*
        name: GetDateReport
        nameWithType: ManagerController.GetDateReport
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport*
        name: GetDateReport
        nameWithType: ManagerController.GetDateReport
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport
  ChineseCheckersLogicServer.Contracts.IReport.GetDateReport(System.Int32):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport(System.Int32)
        name: GetDateReport
        nameWithType: IReport.GetDateReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport(System.Int32)
        name: GetDateReport
        nameWithType: IReport.GetDateReport
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IReport
    commentId: M:ChineseCheckersLogicServer.Contracts.IReport.GetDateReport(System.Int32)
  ChineseCheckersLogicServer.Controller.ManagerController.IsReported*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.IsReported*
        name: IsReported
        nameWithType: ManagerController.IsReported
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.IsReported
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.IsReported*
        name: IsReported
        nameWithType: ManagerController.IsReported
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.IsReported
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.IsReported
  ChineseCheckersLogicServer.Contracts.IReport.IsReported(System.Int32):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IReport.IsReported(System.Int32)
        name: IsReported
        nameWithType: IReport.IsReported
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.IsReported
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IReport.IsReported(System.Int32)
        name: IsReported
        nameWithType: IReport.IsReported
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.IsReported
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IReport
    commentId: M:ChineseCheckersLogicServer.Contracts.IReport.IsReported(System.Int32)
  ChineseCheckersLogicServer.Controller.ManagerController.IsBanned*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.IsBanned*
        name: IsBanned
        nameWithType: ManagerController.IsBanned
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.IsBanned
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.IsBanned*
        name: IsBanned
        nameWithType: ManagerController.IsBanned
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.IsBanned
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.IsBanned
  ChineseCheckersLogicServer.Contracts.IReport.IsBanned(System.Int32):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IReport.IsBanned(System.Int32)
        name: IsBanned
        nameWithType: IReport.IsBanned
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.IsBanned
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IReport.IsBanned(System.Int32)
        name: IsBanned
        nameWithType: IReport.IsBanned
        qualifiedName: ChineseCheckersLogicServer.Contracts.IReport.IsBanned
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IReport
    commentId: M:ChineseCheckersLogicServer.Contracts.IReport.IsBanned(System.Int32)
  ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom*
        name: CreateRoom
        nameWithType: ManagerController.CreateRoom
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom*
        name: CreateRoom
        nameWithType: ManagerController.CreateRoom
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom
  ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom(System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom(System.String)
        name: CreateRoom
        nameWithType: IRoom.CreateRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom(System.String)
        name: CreateRoom
        nameWithType: IRoom.CreateRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IRoom
    commentId: M:ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom(System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.GenerateId*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GenerateId*
        name: GenerateId
        nameWithType: ManagerController.GenerateId
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GenerateId
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GenerateId*
        name: GenerateId
        nameWithType: ManagerController.GenerateId
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GenerateId
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GenerateId
  ChineseCheckersLogicServer.Contracts.IRoom.GenerateId:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
        name: GenerateId
        nameWithType: IRoom.GenerateId
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
        name: GenerateId
        nameWithType: IRoom.GenerateId
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IRoom
    commentId: M:ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
  ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer*
        name: RemovePlayer
        nameWithType: ManagerController.RemovePlayer
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer*
        name: RemovePlayer
        nameWithType: ManagerController.RemovePlayer
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer
  ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer(System.String,System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer(System.String,System.String)
        name: RemovePlayer
        nameWithType: IRoom.RemovePlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer(System.String,System.String)
        name: RemovePlayer
        nameWithType: IRoom.RemovePlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IRoom
    commentId: M:ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer(System.String,System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom*
        name: ValidateRoom
        nameWithType: ManagerController.ValidateRoom
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom*
        name: ValidateRoom
        nameWithType: ManagerController.ValidateRoom
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom
  ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom(System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom(System.String)
        name: ValidateRoom
        nameWithType: IRoom.ValidateRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom(System.String)
        name: ValidateRoom
        nameWithType: IRoom.ValidateRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IRoom
    commentId: M:ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom(System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom*
        name: ValidateBoardRoom
        nameWithType: ManagerController.ValidateBoardRoom
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom*
        name: ValidateBoardRoom
        nameWithType: ManagerController.ValidateBoardRoom
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom
  ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom(System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom(System.String)
        name: ValidateBoardRoom
        nameWithType: IRoom.ValidateBoardRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom(System.String)
        name: ValidateBoardRoom
        nameWithType: IRoom.ValidateBoardRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IRoom
    commentId: M:ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom(System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.SendMessage*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.SendMessage*
        name: SendMessage
        nameWithType: ManagerController.SendMessage
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.SendMessage
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.SendMessage*
        name: SendMessage
        nameWithType: ManagerController.SendMessage
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.SendMessage
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.SendMessage
  ChineseCheckersLogicServer.Contracts.IMessage.SendMessage(System.String,System.String,System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage(System.String,System.String,System.String)
        name: SendMessage
        nameWithType: IMessage.SendMessage
        qualifiedName: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage(System.String,System.String,System.String)
        name: SendMessage
        nameWithType: IMessage.SendMessage
        qualifiedName: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IMessage
    commentId: M:ChineseCheckersLogicServer.Contracts.IMessage.SendMessage(System.String,System.String,System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer*
        name: AddPlayer
        nameWithType: ManagerController.AddPlayer
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer*
        name: AddPlayer
        nameWithType: ManagerController.AddPlayer
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer
  ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer(System.String,System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer(System.String,System.String)
        name: AddPlayer
        nameWithType: IMessage.AddPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer(System.String,System.String)
        name: AddPlayer
        nameWithType: IMessage.AddPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IMessage
    commentId: M:ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer(System.String,System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom*
        name: AddPlayerRoom
        nameWithType: ManagerController.AddPlayerRoom
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom*
        name: AddPlayerRoom
        nameWithType: ManagerController.AddPlayerRoom
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom
  ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom(System.String,System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom(System.String,System.String)
        name: AddPlayerRoom
        nameWithType: IPlayersRoom.AddPlayerRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom(System.String,System.String)
        name: AddPlayerRoom
        nameWithType: IPlayersRoom.AddPlayerRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IPlayersRoom
    commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom(System.String,System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom*
        name: GetPlayersRoom
        nameWithType: ManagerController.GetPlayersRoom
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom*
        name: GetPlayersRoom
        nameWithType: ManagerController.GetPlayersRoom
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom
  ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom(System.String,System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom(System.String,System.String)
        name: GetPlayersRoom
        nameWithType: IPlayersRoom.GetPlayersRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom(System.String,System.String)
        name: GetPlayersRoom
        nameWithType: IPlayersRoom.GetPlayersRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IPlayersRoom
    commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom(System.String,System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard*
        name: SendToBoard
        nameWithType: ManagerController.SendToBoard
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard*
        name: SendToBoard
        nameWithType: ManagerController.SendToBoard
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard
  ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard(System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard(System.String)
        name: SendToBoard
        nameWithType: IPlayersRoom.SendToBoard
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard(System.String)
        name: SendToBoard
        nameWithType: IPlayersRoom.SendToBoard
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IPlayersRoom
    commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard(System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom*
        name: RemovePlayerRoom
        nameWithType: ManagerController.RemovePlayerRoom
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom*
        name: RemovePlayerRoom
        nameWithType: ManagerController.RemovePlayerRoom
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom
  ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom(System.String,System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom(System.String,System.String)
        name: RemovePlayerRoom
        nameWithType: IPlayersRoom.RemovePlayerRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom(System.String,System.String)
        name: RemovePlayerRoom
        nameWithType: IPlayersRoom.RemovePlayerRoom
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IPlayersRoom
    commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom(System.String,System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.AssignColors*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.AssignColors*
        name: AssignColors
        nameWithType: ManagerController.AssignColors
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.AssignColors
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.AssignColors*
        name: AssignColors
        nameWithType: ManagerController.AssignColors
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.AssignColors
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.AssignColors
  ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors(System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors(System.String)
        name: AssignColors
        nameWithType: IPlayersRoom.AssignColors
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors(System.String)
        name: AssignColors
        nameWithType: IPlayersRoom.AssignColors
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IPlayersRoom
    commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors(System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame*
        name: AddUserGame
        nameWithType: ManagerController.AddUserGame
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame*
        name: AddUserGame
        nameWithType: ManagerController.AddUserGame
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame
  ChineseCheckersLogicServer.Contracts.IUser.AddUserGame(ChineseCheckersLogicServer.Model.UserModel):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
        name: AddUserGame
        nameWithType: IUser.AddUserGame
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.UserModel
        name: UserModel
        nameWithType: UserModel
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
        name: AddUserGame
        nameWithType: IUser.AddUserGame
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.UserModel
        name: UserModel
        nameWithType: UserModel
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
  ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount*
        name: AddUserAccount
        nameWithType: ManagerController.AddUserAccount
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount*
        name: AddUserAccount
        nameWithType: ManagerController.AddUserAccount
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount
  ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
        name: AddUserAccount
        nameWithType: IUser.AddUserAccount
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.UserModel
        name: UserModel
        nameWithType: UserModel
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
        name: AddUserAccount
        nameWithType: IUser.AddUserAccount
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.UserModel
        name: UserModel
        nameWithType: UserModel
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
  ChineseCheckersLogicServer.Controller.ManagerController.InfoUser*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.InfoUser*
        name: InfoUser
        nameWithType: ManagerController.InfoUser
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.InfoUser
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.InfoUser*
        name: InfoUser
        nameWithType: ManagerController.InfoUser
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.InfoUser
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.InfoUser
  ChineseCheckersLogicServer.Contracts.IUser.InfoUser(System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.InfoUser(System.String)
        name: InfoUser
        nameWithType: IUser.InfoUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.InfoUser
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.InfoUser(System.String)
        name: InfoUser
        nameWithType: IUser.InfoUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.InfoUser
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.InfoUser(System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser*
        name: UpdateInfoUser
        nameWithType: ManagerController.UpdateInfoUser
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser*
        name: UpdateInfoUser
        nameWithType: ManagerController.UpdateInfoUser
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser
  ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
        name: UpdateInfoUser
        nameWithType: IUser.UpdateInfoUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.UserModel
        name: UserModel
        nameWithType: UserModel
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
        name: UpdateInfoUser
        nameWithType: IUser.UpdateInfoUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.UserModel
        name: UserModel
        nameWithType: UserModel
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword*
        name: UpdatePassword
        nameWithType: ManagerController.UpdatePassword
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword*
        name: UpdatePassword
        nameWithType: ManagerController.UpdatePassword
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword
  ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
        name: UpdatePassword
        nameWithType: IUser.UpdatePassword
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.UserModel
        name: UserModel
        nameWithType: UserModel
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
        name: UpdatePassword
        nameWithType: IUser.UpdatePassword
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.UserModel
        name: UserModel
        nameWithType: UserModel
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
  ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser*
        name: ValidateUser
        nameWithType: ManagerController.ValidateUser
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser*
        name: ValidateUser
        nameWithType: ManagerController.ValidateUser
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser
  ChineseCheckersLogicServer.Contracts.IUser.ValidateUser(ChineseCheckersLogicServer.Model.UserModel):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
        name: ValidateUser
        nameWithType: IUser.ValidateUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.UserModel
        name: UserModel
        nameWithType: UserModel
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
        name: ValidateUser
        nameWithType: IUser.ValidateUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.UserModel
        name: UserModel
        nameWithType: UserModel
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
  ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail*
        name: ValidateEmail
        nameWithType: ManagerController.ValidateEmail
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail*
        name: ValidateEmail
        nameWithType: ManagerController.ValidateEmail
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail
  ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
        name: ValidateEmail
        nameWithType: IUser.ValidateEmail
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.UserModel
        name: UserModel
        nameWithType: UserModel
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
        name: ValidateEmail
        nameWithType: IUser.ValidateEmail
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.UserModel
        name: UserModel
        nameWithType: UserModel
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
  ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag*
        name: ValidateGamertag
        nameWithType: ManagerController.ValidateGamertag
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag*
        name: ValidateGamertag
        nameWithType: ManagerController.ValidateGamertag
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag
  ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
        name: ValidateGamertag
        nameWithType: IUser.ValidateGamertag
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.UserModel
        name: UserModel
        nameWithType: UserModel
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
        name: ValidateGamertag
        nameWithType: IUser.ValidateGamertag
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ChineseCheckersLogicServer.Model.UserModel
        name: UserModel
        nameWithType: UserModel
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
  ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage*
        name: GetPlayerImage
        nameWithType: ManagerController.GetPlayerImage
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage*
        name: GetPlayerImage
        nameWithType: ManagerController.GetPlayerImage
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage
  ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage(System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage(System.String)
        name: GetPlayerImage
        nameWithType: IUser.GetPlayerImage
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage(System.String)
        name: GetPlayerImage
        nameWithType: IUser.GetPlayerImage
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage(System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser*
        name: LogoutUser
        nameWithType: ManagerController.LogoutUser
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser*
        name: LogoutUser
        nameWithType: ManagerController.LogoutUser
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser
  ChineseCheckersLogicServer.Contracts.IUser.LogoutUser(System.Int32):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser(System.Int32)
        name: LogoutUser
        nameWithType: IUser.LogoutUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser(System.Int32)
        name: LogoutUser
        nameWithType: IUser.LogoutUser
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.LogoutUser(System.Int32)
  ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag*
        name: FindGamertag
        nameWithType: ManagerController.FindGamertag
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag*
        name: FindGamertag
        nameWithType: ManagerController.FindGamertag
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag
  ChineseCheckersLogicServer.Contracts.IUser.FindGamertag(System.String,System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag(System.String,System.String)
        name: FindGamertag
        nameWithType: IUser.FindGamertag
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag(System.String,System.String)
        name: FindGamertag
        nameWithType: IUser.FindGamertag
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.FindGamertag(System.String,System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.GetEmail*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetEmail*
        name: GetEmail
        nameWithType: ManagerController.GetEmail
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetEmail
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetEmail*
        name: GetEmail
        nameWithType: ManagerController.GetEmail
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetEmail
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetEmail
  ChineseCheckersLogicServer.Contracts.IUser.GetEmail(System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetEmail(System.String)
        name: GetEmail
        nameWithType: IUser.GetEmail
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetEmail
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetEmail(System.String)
        name: GetEmail
        nameWithType: IUser.GetEmail
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetEmail
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetEmail(System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.GetId*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetId*
        name: GetId
        nameWithType: ManagerController.GetId
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetId
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetId*
        name: GetId
        nameWithType: ManagerController.GetId
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetId
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetId
  ChineseCheckersLogicServer.Contracts.IUser.GetId(System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetId(System.String)
        name: GetId
        nameWithType: IUser.GetId
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetId(System.String)
        name: GetId
        nameWithType: IUser.GetId
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetId(System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon*
        name: UpdateGamesWon
        nameWithType: ManagerController.UpdateGamesWon
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon*
        name: UpdateGamesWon
        nameWithType: ManagerController.UpdateGamesWon
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon
  ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon(System.Int32):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon(System.Int32)
        name: UpdateGamesWon
        nameWithType: IUser.UpdateGamesWon
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon(System.Int32)
        name: UpdateGamesWon
        nameWithType: IUser.UpdateGamesWon
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon(System.Int32)
  ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames*
        name: UpdateTotalGames
        nameWithType: ManagerController.UpdateTotalGames
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames*
        name: UpdateTotalGames
        nameWithType: ManagerController.UpdateTotalGames
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames
  ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames(System.Int32):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames(System.Int32)
        name: UpdateTotalGames
        nameWithType: IUser.UpdateTotalGames
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames(System.Int32)
        name: UpdateTotalGames
        nameWithType: IUser.UpdateTotalGames
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames(System.Int32)
  ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames*
        name: GetTotalGames
        nameWithType: ManagerController.GetTotalGames
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames*
        name: GetTotalGames
        nameWithType: ManagerController.GetTotalGames
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames
  ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames(System.Int32):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames(System.Int32)
        name: GetTotalGames
        nameWithType: IUser.GetTotalGames
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames(System.Int32)
        name: GetTotalGames
        nameWithType: IUser.GetTotalGames
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames(System.Int32)
  ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon*
        name: GetGamesWon
        nameWithType: ManagerController.GetGamesWon
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon*
        name: GetGamesWon
        nameWithType: ManagerController.GetGamesWon
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon
  ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon(System.Int32):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon(System.Int32)
        name: GetGamesWon
        nameWithType: IUser.GetGamesWon
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon(System.Int32)
        name: GetGamesWon
        nameWithType: IUser.GetGamesWon
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon(System.Int32)
  ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer*
        name: UpdateStatusPlayer
        nameWithType: ManagerController.UpdateStatusPlayer
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer*
        name: UpdateStatusPlayer
        nameWithType: ManagerController.UpdateStatusPlayer
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer
  ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer(System.Int32,System.Boolean):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer(System.Int32,System.Boolean)
        name: UpdateStatusPlayer
        nameWithType: IUser.UpdateStatusPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer(System.Int32,System.Boolean)
        name: UpdateStatusPlayer
        nameWithType: IUser.UpdateStatusPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer(System.Int32,System.Boolean)
  ChineseCheckersLogicServer.Controller.ManagerController.GetGames*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetGames*
        name: GetGames
        nameWithType: ManagerController.GetGames
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetGames
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetGames*
        name: GetGames
        nameWithType: ManagerController.GetGames
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetGames
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetGames
  ChineseCheckersLogicServer.Contracts.IUser.GetGames:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetGames
        name: GetGames
        nameWithType: IUser.GetGames
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetGames
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUser.GetGames
        name: GetGames
        nameWithType: IUser.GetGames
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUser.GetGames
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUser
    commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetGames
  ChineseCheckersLogicServer.Controller.ManagerController.GetFriends*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetFriends*
        name: GetFriends
        nameWithType: ManagerController.GetFriends
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetFriends
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetFriends*
        name: GetFriends
        nameWithType: ManagerController.GetFriends
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetFriends
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetFriends
  ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends(System.String):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends(System.String)
        name: GetFriends
        nameWithType: IUsersManager.GetFriends
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends(System.String)
        name: GetFriends
        nameWithType: IUsersManager.GetFriends
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUsersManager
    commentId: M:ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends(System.String)
  ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer*
        name: GetSessionPlayer
        nameWithType: ManagerController.GetSessionPlayer
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer*
        name: GetSessionPlayer
        nameWithType: ManagerController.GetSessionPlayer
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer
  ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer(System.Int32):
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer(System.Int32)
        name: GetSessionPlayer
        nameWithType: IUserSession.GetSessionPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer(System.Int32)
        name: GetSessionPlayer
        nameWithType: IUserSession.GetSessionPlayer
        qualifiedName: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ChineseCheckersLogicServer.Contracts.IUserSession
    commentId: M:ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer(System.Int32)
  ChineseCheckersLogicServer.Controller.ManagerController:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.ManagerController
        name: ManagerController
        nameWithType: ManagerController
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController
      VB:
      - id: ChineseCheckersLogicServer.Controller.ManagerController
        name: ManagerController
        nameWithType: ManagerController
        qualifiedName: ChineseCheckersLogicServer.Controller.ManagerController
    isDefinition: true
    commentId: T:ChineseCheckersLogicServer.Controller.ManagerController
  System.ServiceModel.ServiceBehaviorAttribute:
    name:
      CSharp:
      - id: System.ServiceModel.ServiceBehaviorAttribute
        name: ServiceBehaviorAttribute
        nameWithType: ServiceBehaviorAttribute
        qualifiedName: System.ServiceModel.ServiceBehaviorAttribute
        isExternal: true
      VB:
      - id: System.ServiceModel.ServiceBehaviorAttribute
        name: ServiceBehaviorAttribute
        nameWithType: ServiceBehaviorAttribute
        qualifiedName: System.ServiceModel.ServiceBehaviorAttribute
        isExternal: true
    isDefinition: true
    parent: System.ServiceModel
    commentId: T:System.ServiceModel.ServiceBehaviorAttribute
  System.ServiceModel.ServiceBehaviorAttribute.#ctor:
    name:
      CSharp:
      - id: System.ServiceModel.ServiceBehaviorAttribute.#ctor
        name: ServiceBehaviorAttribute
        nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute
        qualifiedName: System.ServiceModel.ServiceBehaviorAttribute.ServiceBehaviorAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ServiceModel.ServiceBehaviorAttribute.#ctor
        name: ServiceBehaviorAttribute
        nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute
        qualifiedName: System.ServiceModel.ServiceBehaviorAttribute.ServiceBehaviorAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ServiceModel.ServiceBehaviorAttribute
    commentId: M:System.ServiceModel.ServiceBehaviorAttribute.#ctor
  System.ServiceModel.ConcurrencyMode:
    name:
      CSharp:
      - id: System.ServiceModel.ConcurrencyMode
        name: ConcurrencyMode
        nameWithType: ConcurrencyMode
        qualifiedName: System.ServiceModel.ConcurrencyMode
        isExternal: true
      VB:
      - id: System.ServiceModel.ConcurrencyMode
        name: ConcurrencyMode
        nameWithType: ConcurrencyMode
        qualifiedName: System.ServiceModel.ConcurrencyMode
        isExternal: true
    isDefinition: true
    parent: System.ServiceModel
    commentId: T:System.ServiceModel.ConcurrencyMode
  ChineseCheckersLogicServer.Controller:
    name:
      CSharp:
      - name: ChineseCheckersLogicServer.Controller
        nameWithType: ChineseCheckersLogicServer.Controller
        qualifiedName: ChineseCheckersLogicServer.Controller
      VB:
      - name: ChineseCheckersLogicServer.Controller
        nameWithType: ChineseCheckersLogicServer.Controller
        qualifiedName: ChineseCheckersLogicServer.Controller
    isDefinition: true
    commentId: N:ChineseCheckersLogicServer.Controller
  ChineseCheckersLogicServer.Controller.SingletonClass:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.SingletonClass
        name: SingletonClass
        nameWithType: SingletonClass
        qualifiedName: ChineseCheckersLogicServer.Controller.SingletonClass
      VB:
      - id: ChineseCheckersLogicServer.Controller.SingletonClass
        name: SingletonClass
        nameWithType: SingletonClass
        qualifiedName: ChineseCheckersLogicServer.Controller.SingletonClass
    isDefinition: true
    parent: ChineseCheckersLogicServer.Controller
    commentId: T:ChineseCheckersLogicServer.Controller.SingletonClass
  ChineseCheckersLogicServer.Controller.SingletonClass.Instance*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.SingletonClass.Instance*
        name: Instance
        nameWithType: SingletonClass.Instance
        qualifiedName: ChineseCheckersLogicServer.Controller.SingletonClass.Instance
      VB:
      - id: ChineseCheckersLogicServer.Controller.SingletonClass.Instance*
        name: Instance
        nameWithType: SingletonClass.Instance
        qualifiedName: ChineseCheckersLogicServer.Controller.SingletonClass.Instance
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.SingletonClass.Instance
  ChineseCheckersLogicServer.Controller.SingletonClass.IdRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Controller.SingletonClass.IdRoom*
        name: IdRoom
        nameWithType: SingletonClass.IdRoom
        qualifiedName: ChineseCheckersLogicServer.Controller.SingletonClass.IdRoom
      VB:
      - id: ChineseCheckersLogicServer.Controller.SingletonClass.IdRoom*
        name: IdRoom
        nameWithType: SingletonClass.IdRoom
        qualifiedName: ChineseCheckersLogicServer.Controller.SingletonClass.IdRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Controller.SingletonClass.IdRoom
  System.Collections.Generic.Dictionary{System.String,ChineseCheckersLogicServer.Contracts.ITurnCallback}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ChineseCheckersLogicServer.Contracts.ITurnCallback
        name: ITurnCallback
        nameWithType: ITurnCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurnCallback
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ChineseCheckersLogicServer.Contracts.ITurnCallback
        name: ITurnCallback
        nameWithType: ITurnCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.ITurnCallback
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,ChineseCheckersLogicServer.Contracts.ITurnCallback}
  ChineseCheckersLogicServer.Model.BoardModel.GamePlayers*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.BoardModel.GamePlayers*
        name: GamePlayers
        nameWithType: BoardModel.GamePlayers
        qualifiedName: ChineseCheckersLogicServer.Model.BoardModel.GamePlayers
      VB:
      - id: ChineseCheckersLogicServer.Model.BoardModel.GamePlayers*
        name: GamePlayers
        nameWithType: BoardModel.GamePlayers
        qualifiedName: ChineseCheckersLogicServer.Model.BoardModel.GamePlayers
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.BoardModel.GamePlayers
  System.Runtime.Serialization:
    name:
      CSharp:
      - name: System.Runtime.Serialization
        nameWithType: System.Runtime.Serialization
        qualifiedName: System.Runtime.Serialization
        isExternal: true
      VB:
      - name: System.Runtime.Serialization
        nameWithType: System.Runtime.Serialization
        qualifiedName: System.Runtime.Serialization
    isDefinition: true
    commentId: N:System.Runtime.Serialization
  System.Runtime.Serialization.DataMemberAttribute:
    name:
      CSharp:
      - id: System.Runtime.Serialization.DataMemberAttribute
        name: DataMemberAttribute
        nameWithType: DataMemberAttribute
        qualifiedName: System.Runtime.Serialization.DataMemberAttribute
        isExternal: true
      VB:
      - id: System.Runtime.Serialization.DataMemberAttribute
        name: DataMemberAttribute
        nameWithType: DataMemberAttribute
        qualifiedName: System.Runtime.Serialization.DataMemberAttribute
        isExternal: true
    isDefinition: true
    parent: System.Runtime.Serialization
    commentId: T:System.Runtime.Serialization.DataMemberAttribute
  System.Runtime.Serialization.DataMemberAttribute.#ctor:
    name:
      CSharp:
      - id: System.Runtime.Serialization.DataMemberAttribute.#ctor
        name: DataMemberAttribute
        nameWithType: DataMemberAttribute.DataMemberAttribute
        qualifiedName: System.Runtime.Serialization.DataMemberAttribute.DataMemberAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Runtime.Serialization.DataMemberAttribute.#ctor
        name: DataMemberAttribute
        nameWithType: DataMemberAttribute.DataMemberAttribute
        qualifiedName: System.Runtime.Serialization.DataMemberAttribute.DataMemberAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Runtime.Serialization.DataMemberAttribute
    commentId: M:System.Runtime.Serialization.DataMemberAttribute.#ctor
  ChineseCheckersLogicServer.Model.BoardModel.IdRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.BoardModel.IdRoom*
        name: IdRoom
        nameWithType: BoardModel.IdRoom
        qualifiedName: ChineseCheckersLogicServer.Model.BoardModel.IdRoom
      VB:
      - id: ChineseCheckersLogicServer.Model.BoardModel.IdRoom*
        name: IdRoom
        nameWithType: BoardModel.IdRoom
        qualifiedName: ChineseCheckersLogicServer.Model.BoardModel.IdRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.BoardModel.IdRoom
  ChineseCheckersLogicServer.Model.BoardModel:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.BoardModel
        name: BoardModel
        nameWithType: BoardModel
        qualifiedName: ChineseCheckersLogicServer.Model.BoardModel
      VB:
      - id: ChineseCheckersLogicServer.Model.BoardModel
        name: BoardModel
        nameWithType: BoardModel
        qualifiedName: ChineseCheckersLogicServer.Model.BoardModel
    isDefinition: true
    commentId: T:ChineseCheckersLogicServer.Model.BoardModel
  System.Runtime.Serialization.DataContractAttribute:
    name:
      CSharp:
      - id: System.Runtime.Serialization.DataContractAttribute
        name: DataContractAttribute
        nameWithType: DataContractAttribute
        qualifiedName: System.Runtime.Serialization.DataContractAttribute
        isExternal: true
      VB:
      - id: System.Runtime.Serialization.DataContractAttribute
        name: DataContractAttribute
        nameWithType: DataContractAttribute
        qualifiedName: System.Runtime.Serialization.DataContractAttribute
        isExternal: true
    isDefinition: true
    parent: System.Runtime.Serialization
    commentId: T:System.Runtime.Serialization.DataContractAttribute
  System.Runtime.Serialization.DataContractAttribute.#ctor:
    name:
      CSharp:
      - id: System.Runtime.Serialization.DataContractAttribute.#ctor
        name: DataContractAttribute
        nameWithType: DataContractAttribute.DataContractAttribute
        qualifiedName: System.Runtime.Serialization.DataContractAttribute.DataContractAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Runtime.Serialization.DataContractAttribute.#ctor
        name: DataContractAttribute
        nameWithType: DataContractAttribute.DataContractAttribute
        qualifiedName: System.Runtime.Serialization.DataContractAttribute.DataContractAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Runtime.Serialization.DataContractAttribute
    commentId: M:System.Runtime.Serialization.DataContractAttribute.#ctor
  ChineseCheckersLogicServer.Model.FriendshipModel.IdUser*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.FriendshipModel.IdUser*
        name: IdUser
        nameWithType: FriendshipModel.IdUser
        qualifiedName: ChineseCheckersLogicServer.Model.FriendshipModel.IdUser
      VB:
      - id: ChineseCheckersLogicServer.Model.FriendshipModel.IdUser*
        name: IdUser
        nameWithType: FriendshipModel.IdUser
        qualifiedName: ChineseCheckersLogicServer.Model.FriendshipModel.IdUser
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.FriendshipModel.IdUser
  ChineseCheckersLogicServer.Model.FriendshipModel.IdFriend*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.FriendshipModel.IdFriend*
        name: IdFriend
        nameWithType: FriendshipModel.IdFriend
        qualifiedName: ChineseCheckersLogicServer.Model.FriendshipModel.IdFriend
      VB:
      - id: ChineseCheckersLogicServer.Model.FriendshipModel.IdFriend*
        name: IdFriend
        nameWithType: FriendshipModel.IdFriend
        qualifiedName: ChineseCheckersLogicServer.Model.FriendshipModel.IdFriend
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.FriendshipModel.IdFriend
  ChineseCheckersLogicServer.Model.FriendshipModel.RequestStatus*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.FriendshipModel.RequestStatus*
        name: RequestStatus
        nameWithType: FriendshipModel.RequestStatus
        qualifiedName: ChineseCheckersLogicServer.Model.FriendshipModel.RequestStatus
      VB:
      - id: ChineseCheckersLogicServer.Model.FriendshipModel.RequestStatus*
        name: RequestStatus
        nameWithType: FriendshipModel.RequestStatus
        qualifiedName: ChineseCheckersLogicServer.Model.FriendshipModel.RequestStatus
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.FriendshipModel.RequestStatus
  ChineseCheckersLogicServer.Model.FriendshipModel.TypeNotification*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.FriendshipModel.TypeNotification*
        name: TypeNotification
        nameWithType: FriendshipModel.TypeNotification
        qualifiedName: ChineseCheckersLogicServer.Model.FriendshipModel.TypeNotification
      VB:
      - id: ChineseCheckersLogicServer.Model.FriendshipModel.TypeNotification*
        name: TypeNotification
        nameWithType: FriendshipModel.TypeNotification
        qualifiedName: ChineseCheckersLogicServer.Model.FriendshipModel.TypeNotification
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.FriendshipModel.TypeNotification
  ChineseCheckersLogicServer.Model.FriendshipModel.IdRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.FriendshipModel.IdRoom*
        name: IdRoom
        nameWithType: FriendshipModel.IdRoom
        qualifiedName: ChineseCheckersLogicServer.Model.FriendshipModel.IdRoom
      VB:
      - id: ChineseCheckersLogicServer.Model.FriendshipModel.IdRoom*
        name: IdRoom
        nameWithType: FriendshipModel.IdRoom
        qualifiedName: ChineseCheckersLogicServer.Model.FriendshipModel.IdRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.FriendshipModel.IdRoom
  ChineseCheckersLogicServer.Model.ReportModel.IdUser*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.ReportModel.IdUser*
        name: IdUser
        nameWithType: ReportModel.IdUser
        qualifiedName: ChineseCheckersLogicServer.Model.ReportModel.IdUser
      VB:
      - id: ChineseCheckersLogicServer.Model.ReportModel.IdUser*
        name: IdUser
        nameWithType: ReportModel.IdUser
        qualifiedName: ChineseCheckersLogicServer.Model.ReportModel.IdUser
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.ReportModel.IdUser
  ChineseCheckersLogicServer.Model.ReportModel.Reason*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.ReportModel.Reason*
        name: Reason
        nameWithType: ReportModel.Reason
        qualifiedName: ChineseCheckersLogicServer.Model.ReportModel.Reason
      VB:
      - id: ChineseCheckersLogicServer.Model.ReportModel.Reason*
        name: Reason
        nameWithType: ReportModel.Reason
        qualifiedName: ChineseCheckersLogicServer.Model.ReportModel.Reason
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.ReportModel.Reason
  ChineseCheckersLogicServer.Model.ReportModel.CurrentDate*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.ReportModel.CurrentDate*
        name: CurrentDate
        nameWithType: ReportModel.CurrentDate
        qualifiedName: ChineseCheckersLogicServer.Model.ReportModel.CurrentDate
      VB:
      - id: ChineseCheckersLogicServer.Model.ReportModel.CurrentDate*
        name: CurrentDate
        nameWithType: ReportModel.CurrentDate
        qualifiedName: ChineseCheckersLogicServer.Model.ReportModel.CurrentDate
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.ReportModel.CurrentDate
  ChineseCheckersLogicServer.Model.ReportModel.EndDate*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.ReportModel.EndDate*
        name: EndDate
        nameWithType: ReportModel.EndDate
        qualifiedName: ChineseCheckersLogicServer.Model.ReportModel.EndDate
      VB:
      - id: ChineseCheckersLogicServer.Model.ReportModel.EndDate*
        name: EndDate
        nameWithType: ReportModel.EndDate
        qualifiedName: ChineseCheckersLogicServer.Model.ReportModel.EndDate
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.ReportModel.EndDate
  ChineseCheckersLogicServer.Model.RoomModel.IdRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.RoomModel.IdRoom*
        name: IdRoom
        nameWithType: RoomModel.IdRoom
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel.IdRoom
      VB:
      - id: ChineseCheckersLogicServer.Model.RoomModel.IdRoom*
        name: IdRoom
        nameWithType: RoomModel.IdRoom
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel.IdRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.RoomModel.IdRoom
  System.Collections.Generic.Dictionary{System.String,ChineseCheckersLogicServer.Contracts.IMessageCallback}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ChineseCheckersLogicServer.Contracts.IMessageCallback
        name: IMessageCallback
        nameWithType: IMessageCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IMessageCallback
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ChineseCheckersLogicServer.Contracts.IMessageCallback
        name: IMessageCallback
        nameWithType: IMessageCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IMessageCallback
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,ChineseCheckersLogicServer.Contracts.IMessageCallback}
  ChineseCheckersLogicServer.Model.RoomModel.Players*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.RoomModel.Players*
        name: Players
        nameWithType: RoomModel.Players
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel.Players
      VB:
      - id: ChineseCheckersLogicServer.Model.RoomModel.Players*
        name: Players
        nameWithType: RoomModel.Players
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel.Players
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.RoomModel.Players
  System.Collections.Generic.Dictionary{System.String,ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
        name: IPlayersRoomCallback
        nameWithType: IPlayersRoomCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
        name: IPlayersRoomCallback
        nameWithType: IPlayersRoomCallback
        qualifiedName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback}
  ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom*
        name: PlayersRoom
        nameWithType: RoomModel.PlayersRoom
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom
      VB:
      - id: ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom*
        name: PlayersRoom
        nameWithType: RoomModel.PlayersRoom
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom
  System.Char[]:
    name:
      CSharp:
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers*
        name: ColorForTwoPlayers
        nameWithType: RoomModel.ColorForTwoPlayers
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers
      VB:
      - id: ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers*
        name: ColorForTwoPlayers
        nameWithType: RoomModel.ColorForTwoPlayers
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers
  ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers*
        name: ColorForThreePlayers
        nameWithType: RoomModel.ColorForThreePlayers
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers
      VB:
      - id: ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers*
        name: ColorForThreePlayers
        nameWithType: RoomModel.ColorForThreePlayers
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers
  ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers*
        name: ColorForFourPlayers
        nameWithType: RoomModel.ColorForFourPlayers
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers
      VB:
      - id: ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers*
        name: ColorForFourPlayers
        nameWithType: RoomModel.ColorForFourPlayers
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers
  ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers*
        name: ColorForFivePlayers
        nameWithType: RoomModel.ColorForFivePlayers
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers
      VB:
      - id: ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers*
        name: ColorForFivePlayers
        nameWithType: RoomModel.ColorForFivePlayers
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers
  ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers*
        name: ColorForSixPlayers
        nameWithType: RoomModel.ColorForSixPlayers
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers
      VB:
      - id: ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers*
        name: ColorForSixPlayers
        nameWithType: RoomModel.ColorForSixPlayers
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers
  ChineseCheckersLogicServer.Model.RoomModel:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.RoomModel
        name: RoomModel
        nameWithType: RoomModel
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel
      VB:
      - id: ChineseCheckersLogicServer.Model.RoomModel
        name: RoomModel
        nameWithType: RoomModel
        qualifiedName: ChineseCheckersLogicServer.Model.RoomModel
    isDefinition: true
    commentId: T:ChineseCheckersLogicServer.Model.RoomModel
  ChineseCheckersLogicServer.Model.UserModel.Id*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.UserModel.Id*
        name: Id
        nameWithType: UserModel.Id
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel.Id
      VB:
      - id: ChineseCheckersLogicServer.Model.UserModel.Id*
        name: Id
        nameWithType: UserModel.Id
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel.Id
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.UserModel.Id
  ChineseCheckersLogicServer.Model.UserModel.Gamertag*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.UserModel.Gamertag*
        name: Gamertag
        nameWithType: UserModel.Gamertag
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel.Gamertag
      VB:
      - id: ChineseCheckersLogicServer.Model.UserModel.Gamertag*
        name: Gamertag
        nameWithType: UserModel.Gamertag
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel.Gamertag
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.UserModel.Gamertag
  ChineseCheckersLogicServer.Model.UserModel.Email*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.UserModel.Email*
        name: Email
        nameWithType: UserModel.Email
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel.Email
      VB:
      - id: ChineseCheckersLogicServer.Model.UserModel.Email*
        name: Email
        nameWithType: UserModel.Email
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel.Email
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.UserModel.Email
  ChineseCheckersLogicServer.Model.UserModel.Password*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.UserModel.Password*
        name: Password
        nameWithType: UserModel.Password
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel.Password
      VB:
      - id: ChineseCheckersLogicServer.Model.UserModel.Password*
        name: Password
        nameWithType: UserModel.Password
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel.Password
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.UserModel.Password
  ChineseCheckersLogicServer.Model.UserModel.ImageProfile*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.UserModel.ImageProfile*
        name: ImageProfile
        nameWithType: UserModel.ImageProfile
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel.ImageProfile
      VB:
      - id: ChineseCheckersLogicServer.Model.UserModel.ImageProfile*
        name: ImageProfile
        nameWithType: UserModel.ImageProfile
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel.ImageProfile
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.UserModel.ImageProfile
  ChineseCheckersLogicServer.Model.UserModel.PlayerStatus*:
    name:
      CSharp:
      - id: ChineseCheckersLogicServer.Model.UserModel.PlayerStatus*
        name: PlayerStatus
        nameWithType: UserModel.PlayerStatus
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel.PlayerStatus
      VB:
      - id: ChineseCheckersLogicServer.Model.UserModel.PlayerStatus*
        name: PlayerStatus
        nameWithType: UserModel.PlayerStatus
        qualifiedName: ChineseCheckersLogicServer.Model.UserModel.PlayerStatus
    isDefinition: true
    commentId: Overload:ChineseCheckersLogicServer.Model.UserModel.PlayerStatus
