### YamlMime:ManagedReference
items:
- uid: ChineseCheckersLogicServer.Controller.ManagerController
  commentId: T:ChineseCheckersLogicServer.Controller.ManagerController
  id: ManagerController
  parent: ChineseCheckersLogicServer.Controller
  children:
  - ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  - ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer(System.String,System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame(System.String,System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom(System.String,System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
  - ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
  - ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
  - ChineseCheckersLogicServer.Controller.ManagerController.AssignColors(System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom(System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  - ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport(System.Int32)
  - ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag(System.String,System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.GenerateId
  - ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport(System.Int32)
  - ChineseCheckersLogicServer.Controller.ManagerController.GetEmail(System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest(System.Int32)
  - ChineseCheckersLogicServer.Controller.ManagerController.GetFriends(System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.GetGames
  - ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon(System.Int32)
  - ChineseCheckersLogicServer.Controller.ManagerController.GetId(System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports(System.Int32)
  - ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage(System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom(System.String,System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer(System.Int32)
  - ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames(System.Int32)
  - ChineseCheckersLogicServer.Controller.ManagerController.InfoUser(System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.IsBanned(System.Int32)
  - ChineseCheckersLogicServer.Controller.ManagerController.IsReported(System.Int32)
  - ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser(System.Int32)
  - ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer(System.String,System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame(System.String,System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom(System.String,System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.SendMessage(System.String,System.String,System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard(System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn(System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer(System.Int32,System.Int32,System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon(System.Int32)
  - ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
  - ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
  - ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer(System.Int32,System.Boolean)
  - ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames(System.Int32)
  - ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard(System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom(System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
  - ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest(System.Int32,System.Int32,System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame(System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
  - ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom(System.String)
  - ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
  - ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer(System.String,System.String)
  langs:
  - csharp
  - vb
  name: ManagerController
  nameWithType: ManagerController
  fullName: ChineseCheckersLogicServer.Controller.ManagerController
  type: Class
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: ManagerController
    path: Controller/UserController.cs
    startLine: 588
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nEsta Interface incluye los mÃ©todos que se ocupan para la funcionalidad del tablero. \n"
  example: []
  syntax:
    content: >-
      [ServiceBehavior(ConcurrencyMode = ConcurrencyMode.Reentrant)]

      public class ManagerController : IBoard, ITurn, IFriendship, IUserFriendRequest, IReport, IRoom, IMessage, IPlayersRoom, IUser, IUsersManager, IUserSession
    content.vb: >-
      <ServiceBehavior(ConcurrencyMode:=ConcurrencyMode.Reentrant)>

      Public Class ManagerController
          Implements IBoard, ITurn, IFriendship, IUserFriendRequest, IReport, IRoom, IMessage, IPlayersRoom, IUser, IUsersManager, IUserSession
  inheritance:
  - System.Object
  implements:
  - ChineseCheckersLogicServer.Contracts.IBoard
  - ChineseCheckersLogicServer.Contracts.ITurn
  - ChineseCheckersLogicServer.Contracts.IFriendship
  - ChineseCheckersLogicServer.Contracts.IUserFriendRequest
  - ChineseCheckersLogicServer.Contracts.IReport
  - ChineseCheckersLogicServer.Contracts.IRoom
  - ChineseCheckersLogicServer.Contracts.IMessage
  - ChineseCheckersLogicServer.Contracts.IPlayersRoom
  - ChineseCheckersLogicServer.Contracts.IUser
  - ChineseCheckersLogicServer.Contracts.IUsersManager
  - ChineseCheckersLogicServer.Contracts.IUserSession
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.ServiceModel.ServiceBehaviorAttribute
    ctor: System.ServiceModel.ServiceBehaviorAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ConcurrencyMode
      type: System.ServiceModel.ConcurrencyMode
      value: 1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame(System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame(System.String)
  id: ValidateGame(System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: ValidateGame(String)
  nameWithType: ManagerController.ValidateGame(String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame(System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/BoardController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: ValidateGame
    path: Controller/BoardController.cs
    startLine: 26
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nValida que la partida exista y ternoa true. Si no existe, retorna false\n"
  example: []
  syntax:
    content: public bool ValidateGame(string idRoom)
    parameters:
    - id: idRoom
      type: System.String
      description: Id de la sala
    return:
      type: System.Boolean
      description: Retorna true si la sala existe, false si no existe
    content.vb: Public Function ValidateGame(idRoom As String) As Boolean
  overload: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame*
  implements:
  - ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard(System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard(System.String)
  id: ValidateBoard(System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: ValidateBoard(String)
  nameWithType: ManagerController.ValidateBoard(String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard(System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/BoardController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: ValidateBoard
    path: Controller/BoardController.cs
    startLine: 45
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nValida la cantidad de jugadores del Room asÃ­ como que esta exista\n"
  example: []
  syntax:
    content: public bool ValidateBoard(string idRoom)
    parameters:
    - id: idRoom
      type: System.String
      description: Id de la sala
    return:
      type: System.Boolean
      description: Retorna true si la sala existe y la cantidad de jugadores es mayor a 1
    content.vb: Public Function ValidateBoard(idRoom As String) As Boolean
  overload: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard*
  implements:
  - ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn(System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn(System.String)
  id: SendToTurn(System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: SendToTurn(String)
  nameWithType: ManagerController.SendToTurn(String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn(System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/BoardController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: SendToTurn
    path: Controller/BoardController.cs
    startLine: 70
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  syntax:
    content: public void SendToTurn(string idRoom)
    parameters:
    - id: idRoom
      type: System.String
    content.vb: Public Sub SendToTurn(idRoom As String)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn*
  implements:
  - ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
  id: UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: UpdateBoard(Point, Point, String)
  nameWithType: ManagerController.UpdateBoard(Point, Point, String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard(System.Windows.Point, System.Windows.Point, System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/BoardController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: UpdateBoard
    path: Controller/BoardController.cs
    startLine: 103
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nActualiza el tablero para todos los jugadores de la partida, si uno realiza un movimiento, se actualiza el tablero para todos los jugadores.\n"
  example: []
  syntax:
    content: public void UpdateBoard(Point marble, Point position, string idRoom)
    parameters:
    - id: marble
      type: System.Windows.Point
    - id: position
      type: System.Windows.Point
      description: PosiciÃ³n a la que se moverÃ¡ la canica
    - id: idRoom
      type: System.String
      description: Id de la sala
    content.vb: Public Sub UpdateBoard(marble As Point, position As Point, idRoom As String)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard*
  implements:
  - ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame(System.String,System.String)
  id: AddPlayerInGame(System.String,System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: AddPlayerInGame(String, String)
  nameWithType: ManagerController.AddPlayerInGame(String, String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame(System.String, System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/BoardController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: AddPlayerInGame
    path: Controller/BoardController.cs
    startLine: 125
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nAÃ±ade un jugador a la partida. Valida que la partida exista (se encuentre en el diccionario de Rooms)\ny que el jugador no se encuentre en la partida (se encuentre en el diccionario de jugadores en la partida)\n"
  example: []
  syntax:
    content: public void AddPlayerInGame(string gamertag, string idRoom)
    parameters:
    - id: gamertag
      type: System.String
      description: Gamertag del jugador
    - id: idRoom
      type: System.String
      description: Id de la sala
    content.vb: Public Sub AddPlayerInGame(gamertag As String, idRoom As String)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame*
  implements:
  - ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame(System.String,System.String)
  id: RemovePlayerFromGame(System.String,System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: RemovePlayerFromGame(String, String)
  nameWithType: ManagerController.RemovePlayerFromGame(String, String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame(System.String, System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/BoardController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: RemovePlayerFromGame
    path: Controller/BoardController.cs
    startLine: 153
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nQuita un jugador de la partida. Valida que la partida exista (se encuentre en el diccionario de Rooms)\nSi la cantidad de jugadores en la partida es mayor a 1, se remueve el jugador de la partida, si no, se remueve la partida\n"
  example: []
  syntax:
    content: public void RemovePlayerFromGame(string gamertag, string idRoom)
    parameters:
    - id: gamertag
      type: System.String
      description: Gamertag del jugador
    - id: idRoom
      type: System.String
      description: Id de la sala
    content.vb: Public Sub RemovePlayerFromGame(gamertag As String, idRoom As String)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame*
  implements:
  - ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer(System.String,System.String)
  id: WinningPlayer(System.String,System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: WinningPlayer(String, String)
  nameWithType: ManagerController.WinningPlayer(String, String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer(System.String, System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/BoardController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: WinningPlayer
    path: Controller/BoardController.cs
    startLine: 178
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nValida que la partida exista (se encuentre en el diccionario de Rooms) y si la cantidad de jugadores en la partida es 1, \nse le notifica al jugador que ganÃ³ la partida. De igual manera, se le notifica a los demÃ¡s jugadores quien fue el ganador.\n"
  example: []
  syntax:
    content: public void WinningPlayer(string idRoom, string gamertag)
    parameters:
    - id: idRoom
      type: System.String
      description: Id de la sala
    - id: gamertag
      type: System.String
      description: Gamertag del jugador
    content.vb: Public Sub WinningPlayer(idRoom As String, gamertag As String)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer*
  implements:
  - ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  id: AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: AddFriendPlayer(FriendshipModel)
  nameWithType: ManagerController.AddFriendPlayer(FriendshipModel)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/FriendshipController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: AddFriendPlayer
    path: Controller/FriendshipController.cs
    startLine: 26
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nAÃ±ade una relaciÃ³n de amistad entre dos jugadores\n"
  example: []
  syntax:
    content: public int AddFriendPlayer(FriendshipModel friendshipModel)
    parameters:
    - id: friendshipModel
      type: ChineseCheckersLogicServer.Model.FriendshipModel
      description: El objeto de tipo FriendshipModel que contiene el id del jugador, el id del amigo y el tipo de notificaciÃ³n
    return:
      type: System.Int32
      description: Retorna 1 sÃ­ se aÃ±adio correctamente la relaciÃ³n de amistad entre los jugadores
    content.vb: Public Function AddFriendPlayer(friendshipModel As FriendshipModel) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer*
  implements:
  - ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer(System.Int32,System.Int32,System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer(System.Int32,System.Int32,System.String)
  id: UpdateFriendPlayer(System.Int32,System.Int32,System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: UpdateFriendPlayer(Int32, Int32, String)
  nameWithType: ManagerController.UpdateFriendPlayer(Int32, Int32, String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer(System.Int32, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/FriendshipController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: UpdateFriendPlayer
    path: Controller/FriendshipController.cs
    startLine: 61
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nActualiza una relaciÃ³n de amistad entre dos jugadores. Se ocupa para aceptar o rechazar una solicitud de amistad\n"
  example: []
  syntax:
    content: public int UpdateFriendPlayer(int idUser, int idFriend, string requestStatus)
    parameters:
    - id: idUser
      type: System.Int32
      description: El id del jugador
    - id: idFriend
      type: System.Int32
      description: El id del amigo
    - id: requestStatus
      type: System.String
      description: El estado de la solicitud de amistad
    return:
      type: System.Int32
      description: Retorna 1 sÃ­ se aÃ±adio correctamente la relaciÃ³n de amistad entre los jugadores
    content.vb: Public Function UpdateFriendPlayer(idUser As Integer, idFriend As Integer, requestStatus As String) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer*
  implements:
  - ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer(System.Int32,System.Int32,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  id: DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: DeleteFriendPlayer(FriendshipModel)
  nameWithType: ManagerController.DeleteFriendPlayer(FriendshipModel)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/FriendshipController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: DeleteFriendPlayer
    path: Controller/FriendshipController.cs
    startLine: 86
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nElimina una solicitud de amistad o una invitaciÃ³n a una partida\n"
  example: []
  syntax:
    content: public int DeleteFriendPlayer(FriendshipModel friendshipModel)
    parameters:
    - id: friendshipModel
      type: ChineseCheckersLogicServer.Model.FriendshipModel
      description: El objeto de tipo FriendshipModel que contiene el id del jugador, el id del amigo y el tipo de notificaciÃ³n
    return:
      type: System.Int32
      description: Retorna 1 sÃ­ se elimino correctamente la solicitud de amistad o la invitaciÃ³n a una partida
    content.vb: Public Function DeleteFriendPlayer(friendshipModel As FriendshipModel) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer*
  implements:
  - ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest(System.Int32,System.Int32,System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest(System.Int32,System.Int32,System.String)
  id: ValidateFriendRequest(System.Int32,System.Int32,System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: ValidateFriendRequest(Int32, Int32, String)
  nameWithType: ManagerController.ValidateFriendRequest(Int32, Int32, String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest(System.Int32, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/FriendshipController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: ValidateFriendRequest
    path: Controller/FriendshipController.cs
    startLine: 116
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  syntax:
    content: public int ValidateFriendRequest(int idUser, int idFriend, string requestStatus)
    parameters:
    - id: idUser
      type: System.Int32
    - id: idFriend
      type: System.Int32
    - id: requestStatus
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Function ValidateFriendRequest(idUser As Integer, idFriend As Integer, requestStatus As String) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest*
  implements:
  - ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest(System.Int32,System.Int32,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest(System.Int32)
  id: GetFriendRequest(System.Int32)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: GetFriendRequest(Int32)
  nameWithType: ManagerController.GetFriendRequest(Int32)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest(System.Int32)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/FriendshipController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: GetFriendRequest
    path: Controller/FriendshipController.cs
    startLine: 144
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nRegresa la lista de amigos de un jugador\n"
  example: []
  syntax:
    content: public void GetFriendRequest(int idUser)
    parameters:
    - id: idUser
      type: System.Int32
      description: El id del jugador
    content.vb: Public Sub GetFriendRequest(idUser As Integer)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
  id: AddReport(ChineseCheckersLogicServer.Model.ReportModel)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: AddReport(ReportModel)
  nameWithType: ManagerController.AddReport(ReportModel)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/ReportController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: AddReport
    path: Controller/ReportController.cs
    startLine: 27
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nAÃ±ade un reporte a un jugador\n"
  example: []
  syntax:
    content: public int AddReport(ReportModel reportModel)
    parameters:
    - id: reportModel
      type: ChineseCheckersLogicServer.Model.ReportModel
      description: "El objeto de tipo ReportModel que contiene el id del jugador, el motivo del reporte, \nla fecha actual y la fecha de finalizaciÃ³n"
    return:
      type: System.Int32
      description: Retorna 1 sÃ­ se aÃ±adio correctamente el reporte al jugador
    content.vb: Public Function AddReport(reportModel As ReportModel) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.AddReport*
  implements:
  - ChineseCheckersLogicServer.Contracts.IReport.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
  id: UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: UpdateReport(ReportModel)
  nameWithType: ManagerController.UpdateReport(ReportModel)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/ReportController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: UpdateReport
    path: Controller/ReportController.cs
    startLine: 67
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nActualiza un reporte de un jugador\n"
  example: []
  syntax:
    content: public int UpdateReport(ReportModel reportModel)
    parameters:
    - id: reportModel
      type: ChineseCheckersLogicServer.Model.ReportModel
      description: "El objeto de tipo ReportModel que contiene el id del jugador, el motivo del reporte, \nla fecha actual y la fecha de finalizaciÃ³n"
    return:
      type: System.Int32
      description: Retorna 1 sÃ­ se actualizo correctamente el reporte del jugador
    content.vb: Public Function UpdateReport(reportModel As ReportModel) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport*
  implements:
  - ChineseCheckersLogicServer.Contracts.IReport.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport(System.Int32)
  id: DeleteReport(System.Int32)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: DeleteReport(Int32)
  nameWithType: ManagerController.DeleteReport(Int32)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport(System.Int32)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/ReportController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: DeleteReport
    path: Controller/ReportController.cs
    startLine: 94
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nElimina un reporte de un jugador\n"
  example: []
  syntax:
    content: public int DeleteReport(int idUser)
    parameters:
    - id: idUser
      type: System.Int32
      description: El id del jugador
    return:
      type: System.Int32
      description: Retorna 1 sÃ­ se elimino correctamente el reporte del jugador
    content.vb: Public Function DeleteReport(idUser As Integer) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport*
  implements:
  - ChineseCheckersLogicServer.Contracts.IReport.DeleteReport(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports(System.Int32)
  id: GetNumReports(System.Int32)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: GetNumReports(Int32)
  nameWithType: ManagerController.GetNumReports(Int32)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports(System.Int32)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/ReportController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: GetNumReports
    path: Controller/ReportController.cs
    startLine: 116
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nObtiene la cantidad de reportes de un jugador\n"
  example: []
  syntax:
    content: public int GetNumReports(int idUser)
    parameters:
    - id: idUser
      type: System.Int32
      description: El id del jugador
    return:
      type: System.Int32
      description: Retorna la cantidad de reportes del jugador
    content.vb: Public Function GetNumReports(idUser As Integer) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports*
  implements:
  - ChineseCheckersLogicServer.Contracts.IReport.GetNumReports(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport(System.Int32)
  id: GetDateReport(System.Int32)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: GetDateReport(Int32)
  nameWithType: ManagerController.GetDateReport(Int32)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport(System.Int32)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/ReportController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: GetDateReport
    path: Controller/ReportController.cs
    startLine: 140
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nObtiene la fecha de finalizaciÃ³n de un reporte de un jugador\n"
  example: []
  syntax:
    content: public DateTime GetDateReport(int idUser)
    parameters:
    - id: idUser
      type: System.Int32
      description: El id del jugador
    return:
      type: System.DateTime
      description: Retorna la fecha de finalizaciÃ³n del reporte del jugador
    content.vb: Public Function GetDateReport(idUser As Integer) As Date
  overload: ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport*
  implements:
  - ChineseCheckersLogicServer.Contracts.IReport.GetDateReport(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.IsReported(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.IsReported(System.Int32)
  id: IsReported(System.Int32)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: IsReported(Int32)
  nameWithType: ManagerController.IsReported(Int32)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.IsReported(System.Int32)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/ReportController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: IsReported
    path: Controller/ReportController.cs
<<<<<<< HEAD
    startLine: 165
=======
    startLine: 164
>>>>>>> b733c43e37b95c6332a872f74e83a7f40a471adb
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nValida si un jugador esta reportado\n"
  example: []
  syntax:
    content: public bool IsReported(int idUser)
    parameters:
    - id: idUser
      type: System.Int32
      description: El id del jugador
    return:
      type: System.Boolean
      description: Retorna true sÃ­ el jugador esta reportado
    content.vb: Public Function IsReported(idUser As Integer) As Boolean
  overload: ChineseCheckersLogicServer.Controller.ManagerController.IsReported*
  implements:
  - ChineseCheckersLogicServer.Contracts.IReport.IsReported(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.IsBanned(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.IsBanned(System.Int32)
  id: IsBanned(System.Int32)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: IsBanned(Int32)
  nameWithType: ManagerController.IsBanned(Int32)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.IsBanned(System.Int32)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/ReportController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: IsBanned
    path: Controller/ReportController.cs
<<<<<<< HEAD
    startLine: 191
=======
    startLine: 190
>>>>>>> b733c43e37b95c6332a872f74e83a7f40a471adb
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nValida si un jugador esta baneado\n"
  example: []
  syntax:
    content: public bool IsBanned(int idUser)
    parameters:
    - id: idUser
      type: System.Int32
      description: El id del jugador
    return:
      type: System.Boolean
      description: Retorna true sÃ­ el jugador esta baneado
    content.vb: Public Function IsBanned(idUser As Integer) As Boolean
  overload: ChineseCheckersLogicServer.Controller.ManagerController.IsBanned*
  implements:
  - ChineseCheckersLogicServer.Contracts.IReport.IsBanned(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom(System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom(System.String)
  id: CreateRoom(System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: CreateRoom(String)
  nameWithType: ManagerController.CreateRoom(String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom(System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/RoomController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: CreateRoom
    path: Controller/RoomController.cs
    startLine: 27
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  syntax:
    content: public string CreateRoom(string gamertag)
    parameters:
    - id: gamertag
      type: System.String
    return:
      type: System.String
    content.vb: Public Function CreateRoom(gamertag As String) As String
  overload: ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom*
  implements:
  - ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GenerateId
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GenerateId
  id: GenerateId
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: GenerateId()
  nameWithType: ManagerController.GenerateId()
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GenerateId()
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/RoomController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: GenerateId
    path: Controller/RoomController.cs
    startLine: 47
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nGenera un identificador a las salas que se crean.\n"
  example: []
  syntax:
    content: public string GenerateId()
    return:
      type: System.String
      description: Retorna una cadena que es el identificador de la sala
    content.vb: Public Function GenerateId As String
  overload: ChineseCheckersLogicServer.Controller.ManagerController.GenerateId*
  implements:
  - ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer(System.String,System.String)
  id: RemovePlayer(System.String,System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: RemovePlayer(String, String)
  nameWithType: ManagerController.RemovePlayer(String, String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer(System.String, System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/RoomController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: RemovePlayer
    path: Controller/RoomController.cs
    startLine: 77
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nQuita a un jugador de la sala\n"
  example: []
  syntax:
    content: public void RemovePlayer(string gamertag, string idRoom)
    parameters:
    - id: gamertag
      type: System.String
      description: El identificador que el jugador elige
    - id: idRoom
      type: System.String
      description: El identificador de la sala
    content.vb: Public Sub RemovePlayer(gamertag As String, idRoom As String)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer*
  implements:
  - ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom(System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom(System.String)
  id: ValidateRoom(System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: ValidateRoom(String)
  nameWithType: ManagerController.ValidateRoom(String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom(System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/RoomController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: ValidateRoom
    path: Controller/RoomController.cs
    startLine: 103
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nValida si la sala existe\n"
  example: []
  syntax:
    content: public bool ValidateRoom(string idRoom)
    parameters:
    - id: idRoom
      type: System.String
      description: El identificador de la sala
    return:
      type: System.Boolean
      description: Retorna true si la sala existe, sino regresa false
    content.vb: Public Function ValidateRoom(idRoom As String) As Boolean
  overload: ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom*
  implements:
  - ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom(System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom(System.String)
  id: ValidateBoardRoom(System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: ValidateBoardRoom(String)
  nameWithType: ManagerController.ValidateBoardRoom(String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom(System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/RoomController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: ValidateBoardRoom
    path: Controller/RoomController.cs
    startLine: 119
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nValida si la sala tiene mas de un jugador\n"
  example: []
  syntax:
    content: public bool ValidateBoardRoom(string idRoom)
    parameters:
    - id: idRoom
      type: System.String
      description: El identificador de la sala
    return:
      type: System.Boolean
      description: Retorna true si la sala tiene mas de un jugador o si es menor o igual a 6 jugadores, sino regresa false
    content.vb: Public Function ValidateBoardRoom(idRoom As String) As Boolean
  overload: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom*
  implements:
  - ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.SendMessage(System.String,System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.SendMessage(System.String,System.String,System.String)
  id: SendMessage(System.String,System.String,System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: SendMessage(String, String, String)
  nameWithType: ManagerController.SendMessage(String, String, String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.SendMessage(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/RoomController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: SendMessage
    path: Controller/RoomController.cs
    startLine: 144
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  syntax:
    content: public void SendMessage(string message, string gamertag, string idRoom)
    parameters:
    - id: message
      type: System.String
    - id: gamertag
      type: System.String
    - id: idRoom
      type: System.String
    content.vb: Public Sub SendMessage(message As String, gamertag As String, idRoom As String)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.SendMessage*
  implements:
  - ChineseCheckersLogicServer.Contracts.IMessage.SendMessage(System.String,System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer(System.String,System.String)
  id: AddPlayer(System.String,System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: AddPlayer(String, String)
  nameWithType: ManagerController.AddPlayer(String, String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer(System.String, System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/RoomController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: AddPlayer
    path: Controller/RoomController.cs
    startLine: 165
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nAgrega un jugador al chat de la sala\n"
  example: []
  syntax:
    content: public void AddPlayer(string gamertag, string idRoom)
    parameters:
    - id: gamertag
      type: System.String
      description: El identificador que el jugador elige
    - id: idRoom
      type: System.String
      description: El identificador de la sala
    content.vb: Public Sub AddPlayer(gamertag As String, idRoom As String)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer*
  implements:
  - ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom(System.String,System.String)
  id: AddPlayerRoom(System.String,System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: AddPlayerRoom(String, String)
  nameWithType: ManagerController.AddPlayerRoom(String, String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom(System.String, System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/RoomController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: AddPlayerRoom
    path: Controller/RoomController.cs
    startLine: 196
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  syntax:
    content: public void AddPlayerRoom(string gamertag, string idRoom)
    parameters:
    - id: gamertag
      type: System.String
    - id: idRoom
      type: System.String
    content.vb: Public Sub AddPlayerRoom(gamertag As String, idRoom As String)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom*
  implements:
  - ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom(System.String,System.String)
  id: GetPlayersRoom(System.String,System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: GetPlayersRoom(String, String)
  nameWithType: ManagerController.GetPlayersRoom(String, String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom(System.String, System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/RoomController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: GetPlayersRoom
    path: Controller/RoomController.cs
    startLine: 229
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nCallback encargado de obtener la lista de jugadores de la sala. Retorna una lista de jugadores de la sala.\n"
  example: []
  syntax:
    content: public void GetPlayersRoom(string gamertag, string idRoom)
    parameters:
    - id: gamertag
      type: System.String
      description: El identificador que el jugador elige
    - id: idRoom
      type: System.String
      description: El identificador de la sala
    content.vb: Public Sub GetPlayersRoom(gamertag As String, idRoom As String)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom*
  implements:
  - ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard(System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard(System.String)
  id: SendToBoard(System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: SendToBoard(String)
  nameWithType: ManagerController.SendToBoard(String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard(System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/RoomController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: SendToBoard
    path: Controller/RoomController.cs
    startLine: 250
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nCallback encargado de enviar a los jugadores de la sala a la sala de juego.\n"
  example: []
  syntax:
    content: public void SendToBoard(string idRoom)
    parameters:
    - id: idRoom
      type: System.String
      description: El identificador de la sala
    content.vb: Public Sub SendToBoard(idRoom As String)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard*
  implements:
  - ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom(System.String,System.String)
  id: RemovePlayerRoom(System.String,System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: RemovePlayerRoom(String, String)
  nameWithType: ManagerController.RemovePlayerRoom(String, String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom(System.String, System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/RoomController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: RemovePlayerRoom
    path: Controller/RoomController.cs
    startLine: 271
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nQuita a un jugador de la sala\n"
  example: []
  syntax:
    content: public void RemovePlayerRoom(string gamertag, string idRoom)
    parameters:
    - id: gamertag
      type: System.String
      description: El identificador que el jugador elige
    - id: idRoom
      type: System.String
      description: El identificador de la sala
    content.vb: Public Sub RemovePlayerRoom(gamertag As String, idRoom As String)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom*
  implements:
  - ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.AssignColors(System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.AssignColors(System.String)
  id: AssignColors(System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: AssignColors(String)
  nameWithType: ManagerController.AssignColors(String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.AssignColors(System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/RoomController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: AssignColors
    path: Controller/RoomController.cs
    startLine: 300
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nAsigna los colores de las canicas a los jugadores de la sala\n"
  example: []
  syntax:
    content: public void AssignColors(string idRoom)
    parameters:
    - id: idRoom
      type: System.String
      description: El identificador de la sala
    content.vb: Public Sub AssignColors(idRoom As String)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.AssignColors*
  implements:
  - ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
  id: AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: AddUserGame(UserModel)
  nameWithType: ManagerController.AddUserGame(UserModel)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: AddUserGame
    path: Controller/UserController.cs
    startLine: 34
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo que agrega un usuario a la base de datos \n"
  example: []
  syntax:
    content: public int AddUserGame(UserModel userModel)
    parameters:
    - id: userModel
      type: ChineseCheckersLogicServer.Model.UserModel
      description: 'Objeto de tipo UserModel que regresa el gamertag y el estado del jugador '
    return:
      type: System.Int32
      description: '1 si se agrega correctamente, -1 si ocurre un error '
    content.vb: Public Function AddUserGame(userModel As UserModel) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
  id: AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: AddUserAccount(UserModel)
  nameWithType: ManagerController.AddUserAccount(UserModel)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: AddUserAccount
    path: Controller/UserController.cs
    startLine: 64
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo que agrega una cuenta de un usuario a la base de datos\n"
  example: []
  syntax:
    content: public int AddUserAccount(UserModel userModel)
    parameters:
    - id: userModel
      type: ChineseCheckersLogicServer.Model.UserModel
      description: 'Objeto de tipo UserModel que regresa el gamertag, el email, la contraseÃ±a y la imagen de perfil seleccionada por el usuario '
    return:
      type: System.Int32
      description: '1 si se agrega correctamente, -1 si ocurre un error '
    content.vb: Public Function AddUserAccount(userModel As UserModel) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.InfoUser(System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.InfoUser(System.String)
  id: InfoUser(System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: InfoUser(String)
  nameWithType: ManagerController.InfoUser(String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.InfoUser(System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: InfoUser
    path: Controller/UserController.cs
    startLine: 96
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo que obtiene la informaciÃ³n de un usuario \n"
  example: []
  syntax:
    content: public UserModel InfoUser(string gamertag)
    parameters:
    - id: gamertag
      type: System.String
      description: 'Gamertag del usuario que se trata de obtener la informaciÃ³n '
    return:
      type: ChineseCheckersLogicServer.Model.UserModel
      description: 'Retorna un objeto UserModel '
    content.vb: Public Function InfoUser(gamertag As String) As UserModel
  overload: ChineseCheckersLogicServer.Controller.ManagerController.InfoUser*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.InfoUser(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
  id: UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: UpdateInfoUser(UserModel, String)
  nameWithType: ManagerController.UpdateInfoUser(UserModel, String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel, System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: UpdateInfoUser
    path: Controller/UserController.cs
    startLine: 128
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo que actualiza la informaciÃ³n de un usuario \n"
  example: []
  syntax:
    content: public int UpdateInfoUser(UserModel usermodel, string gamertag)
    parameters:
    - id: usermodel
      type: ChineseCheckersLogicServer.Model.UserModel
      description: 'Objeto de tipo UserModel que se usa para actualizar el gamertag, el email o la imagen de perfil seleccionada por el usuario '
    - id: gamertag
      type: System.String
      description: 'Gamertag del usuario que se trata de actualizar la informaciÃ³n '
    return:
      type: System.Int32
      description: 'Retorna un 1 sÃ­ se hizo la actualizaciÃ³n de manera correcta, -1 si no se logro realizar '
    content.vb: Public Function UpdateInfoUser(usermodel As UserModel, gamertag As String) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
  id: UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: UpdatePassword(UserModel)
  nameWithType: ManagerController.UpdatePassword(UserModel)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: UpdatePassword
    path: Controller/UserController.cs
    startLine: 163
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo que actualiza la contraseÃ±a de un usuario \n"
  example: []
  syntax:
    content: public int UpdatePassword(UserModel userModel)
    parameters:
    - id: userModel
      type: ChineseCheckersLogicServer.Model.UserModel
      description: 'Objeto de tipo UserModel que se usa para actualizar la contraseÃ±a del usuario '
    return:
      type: System.Int32
      description: 'Retorna un 1 sÃ­ se hizo la actualizaciÃ³n de manera correcta, -1 si no se logro realizar '
    content.vb: Public Function UpdatePassword(userModel As UserModel) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
  id: ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: ValidateUser(UserModel)
  nameWithType: ManagerController.ValidateUser(UserModel)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: ValidateUser
    path: Controller/UserController.cs
    startLine: 187
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo que valida la existencia de un usuario \n"
  example: []
  syntax:
    content: public int ValidateUser(UserModel userModel)
    parameters:
    - id: userModel
      type: ChineseCheckersLogicServer.Model.UserModel
      description: 'Objeto de tipo userModel que recibe el gamertag y contraseÃ±a para poder llevar a cabo la validaciÃ³n  '
    return:
      type: System.Int32
      description: 'Retorna un 1 sÃ­ se hizo la validaciÃ³n, -1 si no se logro realizar '
    content.vb: Public Function ValidateUser(userModel As UserModel) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
  id: ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: ValidateEmail(UserModel)
  nameWithType: ManagerController.ValidateEmail(UserModel)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: ValidateEmail
    path: Controller/UserController.cs
    startLine: 210
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo que valida la existencia de un email \n"
  example: []
  syntax:
    content: public int ValidateEmail(UserModel userModel)
    parameters:
    - id: userModel
      type: ChineseCheckersLogicServer.Model.UserModel
      description: 'Objeto de tipo userModel que recibe el email para poder llevar a cabo la validaciÃ³n  '
    return:
      type: System.Int32
      description: 'Retorna un 1 sÃ­ se hizo la validaciÃ³n, -1 si no se logro realizar '
    content.vb: Public Function ValidateEmail(userModel As UserModel) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
  id: ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: ValidateGamertag(UserModel)
  nameWithType: ManagerController.ValidateGamertag(UserModel)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: ValidateGamertag
    path: Controller/UserController.cs
    startLine: 233
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo que valida la existencia de un gamertag \n"
  example: []
  syntax:
    content: public int ValidateGamertag(UserModel userModel)
    parameters:
    - id: userModel
      type: ChineseCheckersLogicServer.Model.UserModel
      description: 'Objeto de tipo userModel que recibe el gamertag para poder llevar a cabo la validaciÃ³n  '
    return:
      type: System.Int32
      description: 'Retorna un 1 sÃ­ se hizo la validaciÃ³n, -1 si no se logro realizar '
    content.vb: Public Function ValidateGamertag(userModel As UserModel) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage(System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage(System.String)
  id: GetPlayerImage(System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: GetPlayerImage(String)
  nameWithType: ManagerController.GetPlayerImage(String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage(System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: GetPlayerImage
    path: Controller/UserController.cs
    startLine: 256
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo que obtiene la imagen de perfil de un usuario \n"
  example: []
  syntax:
    content: public string GetPlayerImage(string gamertag)
    parameters:
    - id: gamertag
      type: System.String
      description: 'Gamertag del usuario que se trata de obtener la imagen de perfil '
    return:
      type: System.String
      description: 'Retorna un string con la ruta de la imagen de perfil '
    content.vb: Public Function GetPlayerImage(gamertag As String) As String
  overload: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser(System.Int32)
  id: LogoutUser(System.Int32)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: LogoutUser(Int32)
  nameWithType: ManagerController.LogoutUser(Int32)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser(System.Int32)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: LogoutUser
    path: Controller/UserController.cs
    startLine: 278
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo para poder llevar acabo la desconexiÃ³n de un usuario\n"
  example: []
  syntax:
    content: public void LogoutUser(int idUser)
    parameters:
    - id: idUser
      type: System.Int32
      description: 'Id del usuario '
    content.vb: Public Sub LogoutUser(idUser As Integer)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.LogoutUser(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag(System.String,System.String)
  id: FindGamertag(System.String,System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: FindGamertag(String, String)
  nameWithType: ManagerController.FindGamertag(String, String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag(System.String, System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: FindGamertag
    path: Controller/UserController.cs
    startLine: 293
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo que obtiene el gamertag de un usuario al que se trata buscar \n"
  example: []
  syntax:
    content: public string FindGamertag(string currentGamertag, string friendGamertag)
    parameters:
    - id: currentGamertag
      type: System.String
      description: 'Gamertag del usuario que trata de buscar '
    - id: friendGamertag
      type: System.String
      description: 'Gamertag del usuario que se trata de encontrar '
    return:
      type: System.String
      description: 'Retorna un string con el gamertag del usuario '
    content.vb: Public Function FindGamertag(currentGamertag As String, friendGamertag As String) As String
  overload: ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.FindGamertag(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetEmail(System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetEmail(System.String)
  id: GetEmail(System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: GetEmail(String)
  nameWithType: ManagerController.GetEmail(String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetEmail(System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: GetEmail
    path: Controller/UserController.cs
    startLine: 323
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo para obtener el email de un jugador \n"
  example: []
  syntax:
    content: public string GetEmail(string gamertag)
    parameters:
    - id: gamertag
      type: System.String
      description: 'Gamertag del usuario que se trata buscar su email '
    return:
      type: System.String
      description: 'Retorna una cadena con el correo del usuario '
    content.vb: Public Function GetEmail(gamertag As String) As String
  overload: ChineseCheckersLogicServer.Controller.ManagerController.GetEmail*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.GetEmail(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetId(System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetId(System.String)
  id: GetId(System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: GetId(String)
  nameWithType: ManagerController.GetId(String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetId(System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: GetId
    path: Controller/UserController.cs
    startLine: 346
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo para obtener el id de un jugador \n"
  example: []
  syntax:
    content: public int GetId(string gamertag)
    parameters:
    - id: gamertag
      type: System.String
      description: 'Gamertag del usuario que se trata buscar su id '
    return:
      type: System.Int32
      description: 'Retorna un entero con el id del usuario '
    content.vb: Public Function GetId(gamertag As String) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.GetId*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.GetId(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon(System.Int32)
  id: UpdateGamesWon(System.Int32)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: UpdateGamesWon(Int32)
  nameWithType: ManagerController.UpdateGamesWon(Int32)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon(System.Int32)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: UpdateGamesWon
    path: Controller/UserController.cs
    startLine: 369
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo para actualizar los juegos ganados de un jugador\n"
  example: []
  syntax:
    content: public int UpdateGamesWon(int idUser)
    parameters:
    - id: idUser
      type: System.Int32
      description: 'Id del usuario que se trata actualizar los juegos ganados '
    return:
      type: System.Int32
      description: 'Retorna un 1 si se logro actualizar correctamente, -1 sÃ­ no fue posible realizar la actualizaciÃ³n '
    content.vb: Public Function UpdateGamesWon(idUser As Integer) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames(System.Int32)
  id: UpdateTotalGames(System.Int32)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: UpdateTotalGames(Int32)
  nameWithType: ManagerController.UpdateTotalGames(Int32)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames(System.Int32)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: UpdateTotalGames
    path: Controller/UserController.cs
    startLine: 397
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo para actualizar los juegos totales de un jugador\n"
  example: []
  syntax:
    content: public int UpdateTotalGames(int idUser)
    parameters:
    - id: idUser
      type: System.Int32
      description: 'Id del usuario que se trata actualizar los juegos totales '
    return:
      type: System.Int32
      description: 'Retorna un 1 si se logro actualizar correctamente, -1 sÃ­ no fue posible realizar la actualizaciÃ³n '
    content.vb: Public Function UpdateTotalGames(idUser As Integer) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames(System.Int32)
  id: GetTotalGames(System.Int32)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: GetTotalGames(Int32)
  nameWithType: ManagerController.GetTotalGames(Int32)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames(System.Int32)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: GetTotalGames
    path: Controller/UserController.cs
    startLine: 425
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo para obtener los juegos totales de un jugador\n"
  example: []
  syntax:
    content: public int GetTotalGames(int idUser)
    parameters:
    - id: idUser
      type: System.Int32
      description: 'Id del usuario que se trata obtener los juegos totales '
    return:
      type: System.Int32
      description: 'Retorna un entero con los juegos totales del usuario '
    content.vb: Public Function GetTotalGames(idUser As Integer) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon(System.Int32)
  id: GetGamesWon(System.Int32)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: GetGamesWon(Int32)
  nameWithType: ManagerController.GetGamesWon(Int32)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon(System.Int32)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: GetGamesWon
    path: Controller/UserController.cs
    startLine: 452
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo para obtener los juegos ganados de un jugador\n"
  example: []
  syntax:
    content: public int GetGamesWon(int idUser)
    parameters:
    - id: idUser
      type: System.Int32
      description: 'Id del usuario que se trata obtener los juegos ganados '
    return:
      type: System.Int32
      description: 'Retorna un entero con los juegos ganados del usuario '
    content.vb: Public Function GetGamesWon(idUser As Integer) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer(System.Int32,System.Boolean)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer(System.Int32,System.Boolean)
  id: UpdateStatusPlayer(System.Int32,System.Boolean)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: UpdateStatusPlayer(Int32, Boolean)
  nameWithType: ManagerController.UpdateStatusPlayer(Int32, Boolean)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer(System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: UpdateStatusPlayer
    path: Controller/UserController.cs
    startLine: 480
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo para actualizar el estado de un jugador\n"
  example: []
  syntax:
    content: public int UpdateStatusPlayer(int idUser, bool status)
    parameters:
    - id: idUser
      type: System.Int32
      description: 'Id del usuario que se trata actualizar el estado '
    - id: status
      type: System.Boolean
      description: 'Estado del jugador '
    return:
      type: System.Int32
      description: 'Retorna un 1 si se realizo la actualizaciÃ³n del estado del jugador correctamente, -1 si no lo fue. '
    content.vb: Public Function UpdateStatusPlayer(idUser As Integer, status As Boolean) As Integer
  overload: ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer(System.Int32,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetGames
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetGames
  id: GetGames
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: GetGames()
  nameWithType: ManagerController.GetGames()
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetGames()
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: GetGames
    path: Controller/UserController.cs
    startLine: 508
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo para obtener los juegos ganados de los jugadores y poder desplegarlos en la clasificaciÃ³n (los primeros 3)\n"
  example: []
  syntax:
    content: public Dictionary<string, int> GetGames()
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
      description: 'Retorna un diccionario que contiene el gamertag de los mejores jugadores y un entero que contiene la cantidad de victorias '
    content.vb: Public Function GetGames As Dictionary(Of String, Integer)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.GetGames*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUser.GetGames
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetFriends(System.String)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetFriends(System.String)
  id: GetFriends(System.String)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: GetFriends(String)
  nameWithType: ManagerController.GetFriends(String)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetFriends(System.String)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: GetFriends
    path: Controller/UserController.cs
    startLine: 537
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  syntax:
    content: public void GetFriends(string gamertag)
    parameters:
    - id: gamertag
      type: System.String
    content.vb: Public Sub GetFriends(gamertag As String)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.GetFriends*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer(System.Int32)
  id: GetSessionPlayer(System.Int32)
  parent: ChineseCheckersLogicServer.Controller.ManagerController
  langs:
  - csharp
  - vb
  name: GetSessionPlayer(Int32)
  nameWithType: ManagerController.GetSessionPlayer(Int32)
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer(System.Int32)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Controller/UserController.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: GetSessionPlayer
    path: Controller/UserController.cs
    startLine: 595
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Controller
  summary: "\nMÃ©todo para obtener la sesiÃ³n de un jugador\n"
  example: []
  syntax:
    content: public void GetSessionPlayer(int idUser)
    parameters:
    - id: idUser
      type: System.Int32
      description: 'Id del usuario que se trata obtener la sesiÃ³n '
    content.vb: Public Sub GetSessionPlayer(idUser As Integer)
  overload: ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer*
  implements:
  - ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: ChineseCheckersLogicServer.Controller
  commentId: N:ChineseCheckersLogicServer.Controller
  name: ChineseCheckersLogicServer.Controller
  nameWithType: ChineseCheckersLogicServer.Controller
  fullName: ChineseCheckersLogicServer.Controller
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ChineseCheckersLogicServer.Contracts.IBoard
  commentId: T:ChineseCheckersLogicServer.Contracts.IBoard
  parent: ChineseCheckersLogicServer.Contracts
  name: IBoard
  nameWithType: IBoard
  fullName: ChineseCheckersLogicServer.Contracts.IBoard
- uid: ChineseCheckersLogicServer.Contracts.ITurn
  commentId: T:ChineseCheckersLogicServer.Contracts.ITurn
  parent: ChineseCheckersLogicServer.Contracts
  name: ITurn
  nameWithType: ITurn
  fullName: ChineseCheckersLogicServer.Contracts.ITurn
- uid: ChineseCheckersLogicServer.Contracts.IFriendship
  commentId: T:ChineseCheckersLogicServer.Contracts.IFriendship
  parent: ChineseCheckersLogicServer.Contracts
  name: IFriendship
  nameWithType: IFriendship
  fullName: ChineseCheckersLogicServer.Contracts.IFriendship
- uid: ChineseCheckersLogicServer.Contracts.IUserFriendRequest
  commentId: T:ChineseCheckersLogicServer.Contracts.IUserFriendRequest
  parent: ChineseCheckersLogicServer.Contracts
  name: IUserFriendRequest
  nameWithType: IUserFriendRequest
  fullName: ChineseCheckersLogicServer.Contracts.IUserFriendRequest
- uid: ChineseCheckersLogicServer.Contracts.IReport
  commentId: T:ChineseCheckersLogicServer.Contracts.IReport
  parent: ChineseCheckersLogicServer.Contracts
  name: IReport
  nameWithType: IReport
  fullName: ChineseCheckersLogicServer.Contracts.IReport
- uid: ChineseCheckersLogicServer.Contracts.IRoom
  commentId: T:ChineseCheckersLogicServer.Contracts.IRoom
  parent: ChineseCheckersLogicServer.Contracts
  name: IRoom
  nameWithType: IRoom
  fullName: ChineseCheckersLogicServer.Contracts.IRoom
- uid: ChineseCheckersLogicServer.Contracts.IMessage
  commentId: T:ChineseCheckersLogicServer.Contracts.IMessage
  parent: ChineseCheckersLogicServer.Contracts
  name: IMessage
  nameWithType: IMessage
  fullName: ChineseCheckersLogicServer.Contracts.IMessage
- uid: ChineseCheckersLogicServer.Contracts.IPlayersRoom
  commentId: T:ChineseCheckersLogicServer.Contracts.IPlayersRoom
  parent: ChineseCheckersLogicServer.Contracts
  name: IPlayersRoom
  nameWithType: IPlayersRoom
  fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoom
- uid: ChineseCheckersLogicServer.Contracts.IUser
  commentId: T:ChineseCheckersLogicServer.Contracts.IUser
  parent: ChineseCheckersLogicServer.Contracts
  name: IUser
  nameWithType: IUser
  fullName: ChineseCheckersLogicServer.Contracts.IUser
- uid: ChineseCheckersLogicServer.Contracts.IUsersManager
  commentId: T:ChineseCheckersLogicServer.Contracts.IUsersManager
  parent: ChineseCheckersLogicServer.Contracts
  name: IUsersManager
  nameWithType: IUsersManager
  fullName: ChineseCheckersLogicServer.Contracts.IUsersManager
- uid: ChineseCheckersLogicServer.Contracts.IUserSession
  commentId: T:ChineseCheckersLogicServer.Contracts.IUserSession
  parent: ChineseCheckersLogicServer.Contracts
  name: IUserSession
  nameWithType: IUserSession
  fullName: ChineseCheckersLogicServer.Contracts.IUserSession
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ChineseCheckersLogicServer.Contracts
  commentId: N:ChineseCheckersLogicServer.Contracts
  name: ChineseCheckersLogicServer.Contracts
  nameWithType: ChineseCheckersLogicServer.Contracts
  fullName: ChineseCheckersLogicServer.Contracts
- uid: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame
  name: ValidateGame
  nameWithType: ManagerController.ValidateGame
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGame
- uid: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame(System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame(System.String)
  parent: ChineseCheckersLogicServer.Contracts.IBoard
  isExternal: true
  name: ValidateGame(String)
  nameWithType: IBoard.ValidateGame(String)
  fullName: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame(System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame(System.String)
    name: ValidateGame
    nameWithType: IBoard.ValidateGame
    fullName: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame(System.String)
    name: ValidateGame
    nameWithType: IBoard.ValidateGame
    fullName: ChineseCheckersLogicServer.Contracts.IBoard.ValidateGame
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard
  name: ValidateBoard
  nameWithType: ManagerController.ValidateBoard
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoard
- uid: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard(System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard(System.String)
  parent: ChineseCheckersLogicServer.Contracts.IBoard
  isExternal: true
  name: ValidateBoard(String)
  nameWithType: IBoard.ValidateBoard(String)
  fullName: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard(System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard(System.String)
    name: ValidateBoard
    nameWithType: IBoard.ValidateBoard
    fullName: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard(System.String)
    name: ValidateBoard
    nameWithType: IBoard.ValidateBoard
    fullName: ChineseCheckersLogicServer.Contracts.IBoard.ValidateBoard
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn
  name: SendToTurn
  nameWithType: ManagerController.SendToTurn
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.SendToTurn
- uid: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn(System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn(System.String)
  parent: ChineseCheckersLogicServer.Contracts.ITurn
  isExternal: true
  name: SendToTurn(String)
  nameWithType: ITurn.SendToTurn(String)
  fullName: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn(System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn(System.String)
    name: SendToTurn
    nameWithType: ITurn.SendToTurn
    fullName: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn(System.String)
    name: SendToTurn
    nameWithType: ITurn.SendToTurn
    fullName: ChineseCheckersLogicServer.Contracts.ITurn.SendToTurn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard
  name: UpdateBoard
  nameWithType: ManagerController.UpdateBoard
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateBoard
- uid: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
  parent: ChineseCheckersLogicServer.Contracts.ITurn
  isExternal: true
  name: UpdateBoard(Point, Point, String)
  nameWithType: ITurn.UpdateBoard(Point, Point, String)
  fullName: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard(System.Windows.Point, System.Windows.Point, System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
    name: UpdateBoard
    nameWithType: ITurn.UpdateBoard
    fullName: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Point
    name: Point
    nameWithType: Point
    fullName: System.Windows.Point
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Point
    name: Point
    nameWithType: Point
    fullName: System.Windows.Point
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard(System.Windows.Point,System.Windows.Point,System.String)
    name: UpdateBoard
    nameWithType: ITurn.UpdateBoard
    fullName: ChineseCheckersLogicServer.Contracts.ITurn.UpdateBoard
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Point
    name: Point
    nameWithType: Point
    fullName: System.Windows.Point
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Point
    name: Point
    nameWithType: Point
    fullName: System.Windows.Point
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Point
  commentId: T:System.Windows.Point
  parent: System.Windows
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows
  commentId: N:System.Windows
  isExternal: true
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame
  name: AddPlayerInGame
  nameWithType: ManagerController.AddPlayerInGame
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerInGame
- uid: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame(System.String,System.String)
  parent: ChineseCheckersLogicServer.Contracts.ITurn
  isExternal: true
  name: AddPlayerInGame(String, String)
  nameWithType: ITurn.AddPlayerInGame(String, String)
  fullName: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame(System.String, System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame(System.String,System.String)
    name: AddPlayerInGame
    nameWithType: ITurn.AddPlayerInGame
    fullName: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame(System.String,System.String)
    name: AddPlayerInGame
    nameWithType: ITurn.AddPlayerInGame
    fullName: ChineseCheckersLogicServer.Contracts.ITurn.AddPlayerInGame
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame
  name: RemovePlayerFromGame
  nameWithType: ManagerController.RemovePlayerFromGame
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerFromGame
- uid: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame(System.String,System.String)
  parent: ChineseCheckersLogicServer.Contracts.ITurn
  isExternal: true
  name: RemovePlayerFromGame(String, String)
  nameWithType: ITurn.RemovePlayerFromGame(String, String)
  fullName: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame(System.String, System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame(System.String,System.String)
    name: RemovePlayerFromGame
    nameWithType: ITurn.RemovePlayerFromGame
    fullName: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame(System.String,System.String)
    name: RemovePlayerFromGame
    nameWithType: ITurn.RemovePlayerFromGame
    fullName: ChineseCheckersLogicServer.Contracts.ITurn.RemovePlayerFromGame
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer
  name: WinningPlayer
  nameWithType: ManagerController.WinningPlayer
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.WinningPlayer
- uid: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer(System.String,System.String)
  parent: ChineseCheckersLogicServer.Contracts.ITurn
  isExternal: true
  name: WinningPlayer(String, String)
  nameWithType: ITurn.WinningPlayer(String, String)
  fullName: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer(System.String, System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer(System.String,System.String)
    name: WinningPlayer
    nameWithType: ITurn.WinningPlayer
    fullName: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer(System.String,System.String)
    name: WinningPlayer
    nameWithType: ITurn.WinningPlayer
    fullName: ChineseCheckersLogicServer.Contracts.ITurn.WinningPlayer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer
  name: AddFriendPlayer
  nameWithType: ManagerController.AddFriendPlayer
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.AddFriendPlayer
- uid: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  commentId: M:ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  parent: ChineseCheckersLogicServer.Contracts.IFriendship
  name: AddFriendPlayer(FriendshipModel)
  nameWithType: IFriendship.AddFriendPlayer(FriendshipModel)
  fullName: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
    name: AddFriendPlayer
    nameWithType: IFriendship.AddFriendPlayer
    fullName: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.FriendshipModel
    name: FriendshipModel
    nameWithType: FriendshipModel
    fullName: ChineseCheckersLogicServer.Model.FriendshipModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
    name: AddFriendPlayer
    nameWithType: IFriendship.AddFriendPlayer
    fullName: ChineseCheckersLogicServer.Contracts.IFriendship.AddFriendPlayer
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.FriendshipModel
    name: FriendshipModel
    nameWithType: FriendshipModel
    fullName: ChineseCheckersLogicServer.Model.FriendshipModel
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Model.FriendshipModel
  commentId: T:ChineseCheckersLogicServer.Model.FriendshipModel
  parent: ChineseCheckersLogicServer.Model
  name: FriendshipModel
  nameWithType: FriendshipModel
  fullName: ChineseCheckersLogicServer.Model.FriendshipModel
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: ChineseCheckersLogicServer.Model
  commentId: N:ChineseCheckersLogicServer.Model
  name: ChineseCheckersLogicServer.Model
  nameWithType: ChineseCheckersLogicServer.Model
  fullName: ChineseCheckersLogicServer.Model
- uid: ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer
  name: UpdateFriendPlayer
  nameWithType: ManagerController.UpdateFriendPlayer
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateFriendPlayer
- uid: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer(System.Int32,System.Int32,System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer(System.Int32,System.Int32,System.String)
  parent: ChineseCheckersLogicServer.Contracts.IFriendship
  isExternal: true
  name: UpdateFriendPlayer(Int32, Int32, String)
  nameWithType: IFriendship.UpdateFriendPlayer(Int32, Int32, String)
  fullName: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer(System.Int32, System.Int32, System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer(System.Int32,System.Int32,System.String)
    name: UpdateFriendPlayer
    nameWithType: IFriendship.UpdateFriendPlayer
    fullName: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer(System.Int32,System.Int32,System.String)
    name: UpdateFriendPlayer
    nameWithType: IFriendship.UpdateFriendPlayer
    fullName: ChineseCheckersLogicServer.Contracts.IFriendship.UpdateFriendPlayer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer
  name: DeleteFriendPlayer
  nameWithType: ManagerController.DeleteFriendPlayer
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.DeleteFriendPlayer
- uid: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  commentId: M:ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  parent: ChineseCheckersLogicServer.Contracts.IFriendship
  name: DeleteFriendPlayer(FriendshipModel)
  nameWithType: IFriendship.DeleteFriendPlayer(FriendshipModel)
  fullName: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
    name: DeleteFriendPlayer
    nameWithType: IFriendship.DeleteFriendPlayer
    fullName: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.FriendshipModel
    name: FriendshipModel
    nameWithType: FriendshipModel
    fullName: ChineseCheckersLogicServer.Model.FriendshipModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer(ChineseCheckersLogicServer.Model.FriendshipModel)
    name: DeleteFriendPlayer
    nameWithType: IFriendship.DeleteFriendPlayer
    fullName: ChineseCheckersLogicServer.Contracts.IFriendship.DeleteFriendPlayer
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.FriendshipModel
    name: FriendshipModel
    nameWithType: FriendshipModel
    fullName: ChineseCheckersLogicServer.Model.FriendshipModel
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest
  name: ValidateFriendRequest
  nameWithType: ManagerController.ValidateFriendRequest
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateFriendRequest
- uid: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest(System.Int32,System.Int32,System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest(System.Int32,System.Int32,System.String)
  parent: ChineseCheckersLogicServer.Contracts.IFriendship
  isExternal: true
  name: ValidateFriendRequest(Int32, Int32, String)
  nameWithType: IFriendship.ValidateFriendRequest(Int32, Int32, String)
  fullName: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest(System.Int32, System.Int32, System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest(System.Int32,System.Int32,System.String)
    name: ValidateFriendRequest
    nameWithType: IFriendship.ValidateFriendRequest
    fullName: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest(System.Int32,System.Int32,System.String)
    name: ValidateFriendRequest
    nameWithType: IFriendship.ValidateFriendRequest
    fullName: ChineseCheckersLogicServer.Contracts.IFriendship.ValidateFriendRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest
  name: GetFriendRequest
  nameWithType: ManagerController.GetFriendRequest
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetFriendRequest
- uid: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest(System.Int32)
  parent: ChineseCheckersLogicServer.Contracts.IUserFriendRequest
  isExternal: true
  name: GetFriendRequest(Int32)
  nameWithType: IUserFriendRequest.GetFriendRequest(Int32)
  fullName: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest(System.Int32)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest(System.Int32)
    name: GetFriendRequest
    nameWithType: IUserFriendRequest.GetFriendRequest
    fullName: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest(System.Int32)
    name: GetFriendRequest
    nameWithType: IUserFriendRequest.GetFriendRequest
    fullName: ChineseCheckersLogicServer.Contracts.IUserFriendRequest.GetFriendRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.AddReport*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.AddReport
  name: AddReport
  nameWithType: ManagerController.AddReport
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.AddReport
- uid: ChineseCheckersLogicServer.Contracts.IReport.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
  commentId: M:ChineseCheckersLogicServer.Contracts.IReport.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
  parent: ChineseCheckersLogicServer.Contracts.IReport
  name: AddReport(ReportModel)
  nameWithType: IReport.AddReport(ReportModel)
  fullName: ChineseCheckersLogicServer.Contracts.IReport.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IReport.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
    name: AddReport
    nameWithType: IReport.AddReport
    fullName: ChineseCheckersLogicServer.Contracts.IReport.AddReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.ReportModel
    name: ReportModel
    nameWithType: ReportModel
    fullName: ChineseCheckersLogicServer.Model.ReportModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IReport.AddReport(ChineseCheckersLogicServer.Model.ReportModel)
    name: AddReport
    nameWithType: IReport.AddReport
    fullName: ChineseCheckersLogicServer.Contracts.IReport.AddReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.ReportModel
    name: ReportModel
    nameWithType: ReportModel
    fullName: ChineseCheckersLogicServer.Model.ReportModel
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Model.ReportModel
  commentId: T:ChineseCheckersLogicServer.Model.ReportModel
  parent: ChineseCheckersLogicServer.Model
  name: ReportModel
  nameWithType: ReportModel
  fullName: ChineseCheckersLogicServer.Model.ReportModel
- uid: ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport
  name: UpdateReport
  nameWithType: ManagerController.UpdateReport
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateReport
- uid: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
  commentId: M:ChineseCheckersLogicServer.Contracts.IReport.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
  parent: ChineseCheckersLogicServer.Contracts.IReport
  name: UpdateReport(ReportModel)
  nameWithType: IReport.UpdateReport(ReportModel)
  fullName: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
    name: UpdateReport
    nameWithType: IReport.UpdateReport
    fullName: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.ReportModel
    name: ReportModel
    nameWithType: ReportModel
    fullName: ChineseCheckersLogicServer.Model.ReportModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport(ChineseCheckersLogicServer.Model.ReportModel)
    name: UpdateReport
    nameWithType: IReport.UpdateReport
    fullName: ChineseCheckersLogicServer.Contracts.IReport.UpdateReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.ReportModel
    name: ReportModel
    nameWithType: ReportModel
    fullName: ChineseCheckersLogicServer.Model.ReportModel
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport
  name: DeleteReport
  nameWithType: ManagerController.DeleteReport
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.DeleteReport
- uid: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Contracts.IReport.DeleteReport(System.Int32)
  parent: ChineseCheckersLogicServer.Contracts.IReport
  isExternal: true
  name: DeleteReport(Int32)
  nameWithType: IReport.DeleteReport(Int32)
  fullName: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport(System.Int32)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport(System.Int32)
    name: DeleteReport
    nameWithType: IReport.DeleteReport
    fullName: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport(System.Int32)
    name: DeleteReport
    nameWithType: IReport.DeleteReport
    fullName: ChineseCheckersLogicServer.Contracts.IReport.DeleteReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports
  name: GetNumReports
  nameWithType: ManagerController.GetNumReports
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetNumReports
- uid: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Contracts.IReport.GetNumReports(System.Int32)
  parent: ChineseCheckersLogicServer.Contracts.IReport
  isExternal: true
  name: GetNumReports(Int32)
  nameWithType: IReport.GetNumReports(Int32)
  fullName: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports(System.Int32)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports(System.Int32)
    name: GetNumReports
    nameWithType: IReport.GetNumReports
    fullName: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports(System.Int32)
    name: GetNumReports
    nameWithType: IReport.GetNumReports
    fullName: ChineseCheckersLogicServer.Contracts.IReport.GetNumReports
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport
  name: GetDateReport
  nameWithType: ManagerController.GetDateReport
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetDateReport
- uid: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Contracts.IReport.GetDateReport(System.Int32)
  parent: ChineseCheckersLogicServer.Contracts.IReport
  isExternal: true
  name: GetDateReport(Int32)
  nameWithType: IReport.GetDateReport(Int32)
  fullName: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport(System.Int32)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport(System.Int32)
    name: GetDateReport
    nameWithType: IReport.GetDateReport
    fullName: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport(System.Int32)
    name: GetDateReport
    nameWithType: IReport.GetDateReport
    fullName: ChineseCheckersLogicServer.Contracts.IReport.GetDateReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: ChineseCheckersLogicServer.Controller.ManagerController.IsReported*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.IsReported
  name: IsReported
  nameWithType: ManagerController.IsReported
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.IsReported
- uid: ChineseCheckersLogicServer.Contracts.IReport.IsReported(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Contracts.IReport.IsReported(System.Int32)
  parent: ChineseCheckersLogicServer.Contracts.IReport
  isExternal: true
  name: IsReported(Int32)
  nameWithType: IReport.IsReported(Int32)
  fullName: ChineseCheckersLogicServer.Contracts.IReport.IsReported(System.Int32)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IReport.IsReported(System.Int32)
    name: IsReported
    nameWithType: IReport.IsReported
    fullName: ChineseCheckersLogicServer.Contracts.IReport.IsReported
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IReport.IsReported(System.Int32)
    name: IsReported
    nameWithType: IReport.IsReported
    fullName: ChineseCheckersLogicServer.Contracts.IReport.IsReported
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.IsBanned*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.IsBanned
  name: IsBanned
  nameWithType: ManagerController.IsBanned
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.IsBanned
- uid: ChineseCheckersLogicServer.Contracts.IReport.IsBanned(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Contracts.IReport.IsBanned(System.Int32)
  parent: ChineseCheckersLogicServer.Contracts.IReport
  isExternal: true
  name: IsBanned(Int32)
  nameWithType: IReport.IsBanned(Int32)
  fullName: ChineseCheckersLogicServer.Contracts.IReport.IsBanned(System.Int32)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IReport.IsBanned(System.Int32)
    name: IsBanned
    nameWithType: IReport.IsBanned
    fullName: ChineseCheckersLogicServer.Contracts.IReport.IsBanned
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IReport.IsBanned(System.Int32)
    name: IsBanned
    nameWithType: IReport.IsBanned
    fullName: ChineseCheckersLogicServer.Contracts.IReport.IsBanned
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom
  name: CreateRoom
  nameWithType: ManagerController.CreateRoom
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.CreateRoom
- uid: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom(System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom(System.String)
  parent: ChineseCheckersLogicServer.Contracts.IRoom
  isExternal: true
  name: CreateRoom(String)
  nameWithType: IRoom.CreateRoom(String)
  fullName: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom(System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom(System.String)
    name: CreateRoom
    nameWithType: IRoom.CreateRoom
    fullName: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom(System.String)
    name: CreateRoom
    nameWithType: IRoom.CreateRoom
    fullName: ChineseCheckersLogicServer.Contracts.IRoom.CreateRoom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GenerateId*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GenerateId
  name: GenerateId
  nameWithType: ManagerController.GenerateId
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GenerateId
- uid: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
  commentId: M:ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
  parent: ChineseCheckersLogicServer.Contracts.IRoom
  name: GenerateId()
  nameWithType: IRoom.GenerateId()
  fullName: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId()
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
    name: GenerateId
    nameWithType: IRoom.GenerateId
    fullName: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
    name: GenerateId
    nameWithType: IRoom.GenerateId
    fullName: ChineseCheckersLogicServer.Contracts.IRoom.GenerateId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer
  name: RemovePlayer
  nameWithType: ManagerController.RemovePlayer
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayer
- uid: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer(System.String,System.String)
  parent: ChineseCheckersLogicServer.Contracts.IRoom
  isExternal: true
  name: RemovePlayer(String, String)
  nameWithType: IRoom.RemovePlayer(String, String)
  fullName: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer(System.String, System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer(System.String,System.String)
    name: RemovePlayer
    nameWithType: IRoom.RemovePlayer
    fullName: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer(System.String,System.String)
    name: RemovePlayer
    nameWithType: IRoom.RemovePlayer
    fullName: ChineseCheckersLogicServer.Contracts.IRoom.RemovePlayer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom
  name: ValidateRoom
  nameWithType: ManagerController.ValidateRoom
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateRoom
- uid: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom(System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom(System.String)
  parent: ChineseCheckersLogicServer.Contracts.IRoom
  isExternal: true
  name: ValidateRoom(String)
  nameWithType: IRoom.ValidateRoom(String)
  fullName: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom(System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom(System.String)
    name: ValidateRoom
    nameWithType: IRoom.ValidateRoom
    fullName: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom(System.String)
    name: ValidateRoom
    nameWithType: IRoom.ValidateRoom
    fullName: ChineseCheckersLogicServer.Contracts.IRoom.ValidateRoom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom
  name: ValidateBoardRoom
  nameWithType: ManagerController.ValidateBoardRoom
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateBoardRoom
- uid: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom(System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom(System.String)
  parent: ChineseCheckersLogicServer.Contracts.IRoom
  isExternal: true
  name: ValidateBoardRoom(String)
  nameWithType: IRoom.ValidateBoardRoom(String)
  fullName: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom(System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom(System.String)
    name: ValidateBoardRoom
    nameWithType: IRoom.ValidateBoardRoom
    fullName: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom(System.String)
    name: ValidateBoardRoom
    nameWithType: IRoom.ValidateBoardRoom
    fullName: ChineseCheckersLogicServer.Contracts.IRoom.ValidateBoardRoom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.SendMessage*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.SendMessage
  name: SendMessage
  nameWithType: ManagerController.SendMessage
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.SendMessage
- uid: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage(System.String,System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IMessage.SendMessage(System.String,System.String,System.String)
  parent: ChineseCheckersLogicServer.Contracts.IMessage
  isExternal: true
  name: SendMessage(String, String, String)
  nameWithType: IMessage.SendMessage(String, String, String)
  fullName: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage(System.String, System.String, System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage(System.String,System.String,System.String)
    name: SendMessage
    nameWithType: IMessage.SendMessage
    fullName: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage(System.String,System.String,System.String)
    name: SendMessage
    nameWithType: IMessage.SendMessage
    fullName: ChineseCheckersLogicServer.Contracts.IMessage.SendMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer
  name: AddPlayer
  nameWithType: ManagerController.AddPlayer
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayer
- uid: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer(System.String,System.String)
  parent: ChineseCheckersLogicServer.Contracts.IMessage
  isExternal: true
  name: AddPlayer(String, String)
  nameWithType: IMessage.AddPlayer(String, String)
  fullName: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer(System.String, System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer(System.String,System.String)
    name: AddPlayer
    nameWithType: IMessage.AddPlayer
    fullName: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer(System.String,System.String)
    name: AddPlayer
    nameWithType: IMessage.AddPlayer
    fullName: ChineseCheckersLogicServer.Contracts.IMessage.AddPlayer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom
  name: AddPlayerRoom
  nameWithType: ManagerController.AddPlayerRoom
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.AddPlayerRoom
- uid: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom(System.String,System.String)
  parent: ChineseCheckersLogicServer.Contracts.IPlayersRoom
  isExternal: true
  name: AddPlayerRoom(String, String)
  nameWithType: IPlayersRoom.AddPlayerRoom(String, String)
  fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom(System.String, System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom(System.String,System.String)
    name: AddPlayerRoom
    nameWithType: IPlayersRoom.AddPlayerRoom
    fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom(System.String,System.String)
    name: AddPlayerRoom
    nameWithType: IPlayersRoom.AddPlayerRoom
    fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AddPlayerRoom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom
  name: GetPlayersRoom
  nameWithType: ManagerController.GetPlayersRoom
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayersRoom
- uid: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom(System.String,System.String)
  parent: ChineseCheckersLogicServer.Contracts.IPlayersRoom
  isExternal: true
  name: GetPlayersRoom(String, String)
  nameWithType: IPlayersRoom.GetPlayersRoom(String, String)
  fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom(System.String, System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom(System.String,System.String)
    name: GetPlayersRoom
    nameWithType: IPlayersRoom.GetPlayersRoom
    fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom(System.String,System.String)
    name: GetPlayersRoom
    nameWithType: IPlayersRoom.GetPlayersRoom
    fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.GetPlayersRoom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard
  name: SendToBoard
  nameWithType: ManagerController.SendToBoard
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.SendToBoard
- uid: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard(System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard(System.String)
  parent: ChineseCheckersLogicServer.Contracts.IPlayersRoom
  isExternal: true
  name: SendToBoard(String)
  nameWithType: IPlayersRoom.SendToBoard(String)
  fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard(System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard(System.String)
    name: SendToBoard
    nameWithType: IPlayersRoom.SendToBoard
    fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard(System.String)
    name: SendToBoard
    nameWithType: IPlayersRoom.SendToBoard
    fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.SendToBoard
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom
  name: RemovePlayerRoom
  nameWithType: ManagerController.RemovePlayerRoom
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.RemovePlayerRoom
- uid: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom(System.String,System.String)
  parent: ChineseCheckersLogicServer.Contracts.IPlayersRoom
  isExternal: true
  name: RemovePlayerRoom(String, String)
  nameWithType: IPlayersRoom.RemovePlayerRoom(String, String)
  fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom(System.String, System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom(System.String,System.String)
    name: RemovePlayerRoom
    nameWithType: IPlayersRoom.RemovePlayerRoom
    fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom(System.String,System.String)
    name: RemovePlayerRoom
    nameWithType: IPlayersRoom.RemovePlayerRoom
    fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.RemovePlayerRoom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.AssignColors*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.AssignColors
  name: AssignColors
  nameWithType: ManagerController.AssignColors
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.AssignColors
- uid: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors(System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors(System.String)
  parent: ChineseCheckersLogicServer.Contracts.IPlayersRoom
  isExternal: true
  name: AssignColors(String)
  nameWithType: IPlayersRoom.AssignColors(String)
  fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors(System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors(System.String)
    name: AssignColors
    nameWithType: IPlayersRoom.AssignColors
    fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors(System.String)
    name: AssignColors
    nameWithType: IPlayersRoom.AssignColors
    fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoom.AssignColors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame
  name: AddUserGame
  nameWithType: ManagerController.AddUserGame
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.AddUserGame
- uid: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  name: AddUserGame(UserModel)
  nameWithType: IUser.AddUserGame(UserModel)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
    name: AddUserGame
    nameWithType: IUser.AddUserGame
    fullName: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.UserModel
    name: UserModel
    nameWithType: UserModel
    fullName: ChineseCheckersLogicServer.Model.UserModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame(ChineseCheckersLogicServer.Model.UserModel)
    name: AddUserGame
    nameWithType: IUser.AddUserGame
    fullName: ChineseCheckersLogicServer.Contracts.IUser.AddUserGame
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.UserModel
    name: UserModel
    nameWithType: UserModel
    fullName: ChineseCheckersLogicServer.Model.UserModel
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Model.UserModel
  commentId: T:ChineseCheckersLogicServer.Model.UserModel
  parent: ChineseCheckersLogicServer.Model
  name: UserModel
  nameWithType: UserModel
  fullName: ChineseCheckersLogicServer.Model.UserModel
- uid: ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount
  name: AddUserAccount
  nameWithType: ManagerController.AddUserAccount
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.AddUserAccount
- uid: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  name: AddUserAccount(UserModel)
  nameWithType: IUser.AddUserAccount(UserModel)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
    name: AddUserAccount
    nameWithType: IUser.AddUserAccount
    fullName: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.UserModel
    name: UserModel
    nameWithType: UserModel
    fullName: ChineseCheckersLogicServer.Model.UserModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount(ChineseCheckersLogicServer.Model.UserModel)
    name: AddUserAccount
    nameWithType: IUser.AddUserAccount
    fullName: ChineseCheckersLogicServer.Contracts.IUser.AddUserAccount
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.UserModel
    name: UserModel
    nameWithType: UserModel
    fullName: ChineseCheckersLogicServer.Model.UserModel
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.InfoUser*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.InfoUser
  name: InfoUser
  nameWithType: ManagerController.InfoUser
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.InfoUser
- uid: ChineseCheckersLogicServer.Contracts.IUser.InfoUser(System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.InfoUser(System.String)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  isExternal: true
  name: InfoUser(String)
  nameWithType: IUser.InfoUser(String)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.InfoUser(System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.InfoUser(System.String)
    name: InfoUser
    nameWithType: IUser.InfoUser
    fullName: ChineseCheckersLogicServer.Contracts.IUser.InfoUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.InfoUser(System.String)
    name: InfoUser
    nameWithType: IUser.InfoUser
    fullName: ChineseCheckersLogicServer.Contracts.IUser.InfoUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser
  name: UpdateInfoUser
  nameWithType: ManagerController.UpdateInfoUser
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateInfoUser
- uid: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  isExternal: true
  name: UpdateInfoUser(UserModel, String)
  nameWithType: IUser.UpdateInfoUser(UserModel, String)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel, System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
    name: UpdateInfoUser
    nameWithType: IUser.UpdateInfoUser
    fullName: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.UserModel
    name: UserModel
    nameWithType: UserModel
    fullName: ChineseCheckersLogicServer.Model.UserModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser(ChineseCheckersLogicServer.Model.UserModel,System.String)
    name: UpdateInfoUser
    nameWithType: IUser.UpdateInfoUser
    fullName: ChineseCheckersLogicServer.Contracts.IUser.UpdateInfoUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.UserModel
    name: UserModel
    nameWithType: UserModel
    fullName: ChineseCheckersLogicServer.Model.UserModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword
  name: UpdatePassword
  nameWithType: ManagerController.UpdatePassword
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.UpdatePassword
- uid: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  name: UpdatePassword(UserModel)
  nameWithType: IUser.UpdatePassword(UserModel)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
    name: UpdatePassword
    nameWithType: IUser.UpdatePassword
    fullName: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.UserModel
    name: UserModel
    nameWithType: UserModel
    fullName: ChineseCheckersLogicServer.Model.UserModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword(ChineseCheckersLogicServer.Model.UserModel)
    name: UpdatePassword
    nameWithType: IUser.UpdatePassword
    fullName: ChineseCheckersLogicServer.Contracts.IUser.UpdatePassword
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.UserModel
    name: UserModel
    nameWithType: UserModel
    fullName: ChineseCheckersLogicServer.Model.UserModel
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser
  name: ValidateUser
  nameWithType: ManagerController.ValidateUser
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateUser
- uid: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  name: ValidateUser(UserModel)
  nameWithType: IUser.ValidateUser(UserModel)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
    name: ValidateUser
    nameWithType: IUser.ValidateUser
    fullName: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.UserModel
    name: UserModel
    nameWithType: UserModel
    fullName: ChineseCheckersLogicServer.Model.UserModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser(ChineseCheckersLogicServer.Model.UserModel)
    name: ValidateUser
    nameWithType: IUser.ValidateUser
    fullName: ChineseCheckersLogicServer.Contracts.IUser.ValidateUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.UserModel
    name: UserModel
    nameWithType: UserModel
    fullName: ChineseCheckersLogicServer.Model.UserModel
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail
  name: ValidateEmail
  nameWithType: ManagerController.ValidateEmail
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateEmail
- uid: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  name: ValidateEmail(UserModel)
  nameWithType: IUser.ValidateEmail(UserModel)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
    name: ValidateEmail
    nameWithType: IUser.ValidateEmail
    fullName: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.UserModel
    name: UserModel
    nameWithType: UserModel
    fullName: ChineseCheckersLogicServer.Model.UserModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail(ChineseCheckersLogicServer.Model.UserModel)
    name: ValidateEmail
    nameWithType: IUser.ValidateEmail
    fullName: ChineseCheckersLogicServer.Contracts.IUser.ValidateEmail
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.UserModel
    name: UserModel
    nameWithType: UserModel
    fullName: ChineseCheckersLogicServer.Model.UserModel
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag
  name: ValidateGamertag
  nameWithType: ManagerController.ValidateGamertag
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.ValidateGamertag
- uid: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  name: ValidateGamertag(UserModel)
  nameWithType: IUser.ValidateGamertag(UserModel)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
    name: ValidateGamertag
    nameWithType: IUser.ValidateGamertag
    fullName: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.UserModel
    name: UserModel
    nameWithType: UserModel
    fullName: ChineseCheckersLogicServer.Model.UserModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag(ChineseCheckersLogicServer.Model.UserModel)
    name: ValidateGamertag
    nameWithType: IUser.ValidateGamertag
    fullName: ChineseCheckersLogicServer.Contracts.IUser.ValidateGamertag
  - name: (
    nameWithType: (
    fullName: (
  - uid: ChineseCheckersLogicServer.Model.UserModel
    name: UserModel
    nameWithType: UserModel
    fullName: ChineseCheckersLogicServer.Model.UserModel
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage
  name: GetPlayerImage
  nameWithType: ManagerController.GetPlayerImage
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetPlayerImage
- uid: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage(System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage(System.String)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  isExternal: true
  name: GetPlayerImage(String)
  nameWithType: IUser.GetPlayerImage(String)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage(System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage(System.String)
    name: GetPlayerImage
    nameWithType: IUser.GetPlayerImage
    fullName: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage(System.String)
    name: GetPlayerImage
    nameWithType: IUser.GetPlayerImage
    fullName: ChineseCheckersLogicServer.Contracts.IUser.GetPlayerImage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser
  name: LogoutUser
  nameWithType: ManagerController.LogoutUser
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.LogoutUser
- uid: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.LogoutUser(System.Int32)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  isExternal: true
  name: LogoutUser(Int32)
  nameWithType: IUser.LogoutUser(Int32)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser(System.Int32)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser(System.Int32)
    name: LogoutUser
    nameWithType: IUser.LogoutUser
    fullName: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser(System.Int32)
    name: LogoutUser
    nameWithType: IUser.LogoutUser
    fullName: ChineseCheckersLogicServer.Contracts.IUser.LogoutUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag
  name: FindGamertag
  nameWithType: ManagerController.FindGamertag
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.FindGamertag
- uid: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag(System.String,System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.FindGamertag(System.String,System.String)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  isExternal: true
  name: FindGamertag(String, String)
  nameWithType: IUser.FindGamertag(String, String)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag(System.String, System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag(System.String,System.String)
    name: FindGamertag
    nameWithType: IUser.FindGamertag
    fullName: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag(System.String,System.String)
    name: FindGamertag
    nameWithType: IUser.FindGamertag
    fullName: ChineseCheckersLogicServer.Contracts.IUser.FindGamertag
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetEmail*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetEmail
  name: GetEmail
  nameWithType: ManagerController.GetEmail
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetEmail
- uid: ChineseCheckersLogicServer.Contracts.IUser.GetEmail(System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetEmail(System.String)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  isExternal: true
  name: GetEmail(String)
  nameWithType: IUser.GetEmail(String)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.GetEmail(System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.GetEmail(System.String)
    name: GetEmail
    nameWithType: IUser.GetEmail
    fullName: ChineseCheckersLogicServer.Contracts.IUser.GetEmail
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.GetEmail(System.String)
    name: GetEmail
    nameWithType: IUser.GetEmail
    fullName: ChineseCheckersLogicServer.Contracts.IUser.GetEmail
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetId*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetId
  name: GetId
  nameWithType: ManagerController.GetId
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetId
- uid: ChineseCheckersLogicServer.Contracts.IUser.GetId(System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetId(System.String)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  isExternal: true
  name: GetId(String)
  nameWithType: IUser.GetId(String)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.GetId(System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.GetId(System.String)
    name: GetId
    nameWithType: IUser.GetId
    fullName: ChineseCheckersLogicServer.Contracts.IUser.GetId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.GetId(System.String)
    name: GetId
    nameWithType: IUser.GetId
    fullName: ChineseCheckersLogicServer.Contracts.IUser.GetId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon
  name: UpdateGamesWon
  nameWithType: ManagerController.UpdateGamesWon
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateGamesWon
- uid: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon(System.Int32)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  isExternal: true
  name: UpdateGamesWon(Int32)
  nameWithType: IUser.UpdateGamesWon(Int32)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon(System.Int32)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon(System.Int32)
    name: UpdateGamesWon
    nameWithType: IUser.UpdateGamesWon
    fullName: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon(System.Int32)
    name: UpdateGamesWon
    nameWithType: IUser.UpdateGamesWon
    fullName: ChineseCheckersLogicServer.Contracts.IUser.UpdateGamesWon
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames
  name: UpdateTotalGames
  nameWithType: ManagerController.UpdateTotalGames
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateTotalGames
- uid: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames(System.Int32)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  isExternal: true
  name: UpdateTotalGames(Int32)
  nameWithType: IUser.UpdateTotalGames(Int32)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames(System.Int32)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames(System.Int32)
    name: UpdateTotalGames
    nameWithType: IUser.UpdateTotalGames
    fullName: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames(System.Int32)
    name: UpdateTotalGames
    nameWithType: IUser.UpdateTotalGames
    fullName: ChineseCheckersLogicServer.Contracts.IUser.UpdateTotalGames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames
  name: GetTotalGames
  nameWithType: ManagerController.GetTotalGames
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetTotalGames
- uid: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames(System.Int32)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  isExternal: true
  name: GetTotalGames(Int32)
  nameWithType: IUser.GetTotalGames(Int32)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames(System.Int32)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames(System.Int32)
    name: GetTotalGames
    nameWithType: IUser.GetTotalGames
    fullName: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames(System.Int32)
    name: GetTotalGames
    nameWithType: IUser.GetTotalGames
    fullName: ChineseCheckersLogicServer.Contracts.IUser.GetTotalGames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon
  name: GetGamesWon
  nameWithType: ManagerController.GetGamesWon
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetGamesWon
- uid: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon(System.Int32)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  isExternal: true
  name: GetGamesWon(Int32)
  nameWithType: IUser.GetGamesWon(Int32)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon(System.Int32)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon(System.Int32)
    name: GetGamesWon
    nameWithType: IUser.GetGamesWon
    fullName: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon(System.Int32)
    name: GetGamesWon
    nameWithType: IUser.GetGamesWon
    fullName: ChineseCheckersLogicServer.Contracts.IUser.GetGamesWon
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer
  name: UpdateStatusPlayer
  nameWithType: ManagerController.UpdateStatusPlayer
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.UpdateStatusPlayer
- uid: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer(System.Int32,System.Boolean)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer(System.Int32,System.Boolean)
  parent: ChineseCheckersLogicServer.Contracts.IUser
  isExternal: true
  name: UpdateStatusPlayer(Int32, Boolean)
  nameWithType: IUser.UpdateStatusPlayer(Int32, Boolean)
  fullName: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer(System.Int32, System.Boolean)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer(System.Int32,System.Boolean)
    name: UpdateStatusPlayer
    nameWithType: IUser.UpdateStatusPlayer
    fullName: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer(System.Int32,System.Boolean)
    name: UpdateStatusPlayer
    nameWithType: IUser.UpdateStatusPlayer
    fullName: ChineseCheckersLogicServer.Contracts.IUser.UpdateStatusPlayer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetGames*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetGames
  name: GetGames
  nameWithType: ManagerController.GetGames
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetGames
- uid: ChineseCheckersLogicServer.Contracts.IUser.GetGames
  commentId: M:ChineseCheckersLogicServer.Contracts.IUser.GetGames
  parent: ChineseCheckersLogicServer.Contracts.IUser
  name: GetGames()
  nameWithType: IUser.GetGames()
  fullName: ChineseCheckersLogicServer.Contracts.IUser.GetGames()
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.GetGames
    name: GetGames
    nameWithType: IUser.GetGames
    fullName: ChineseCheckersLogicServer.Contracts.IUser.GetGames
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUser.GetGames
    name: GetGames
    nameWithType: IUser.GetGames
    fullName: ChineseCheckersLogicServer.Contracts.IUser.GetGames
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Int32>
  nameWithType: Dictionary<String, Int32>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Int32>
  nameWithType.vb: Dictionary(Of String, Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Int32)
  name.vb: Dictionary(Of String, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetFriends*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetFriends
  name: GetFriends
  nameWithType: ManagerController.GetFriends
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetFriends
- uid: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends(System.String)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends(System.String)
  parent: ChineseCheckersLogicServer.Contracts.IUsersManager
  isExternal: true
  name: GetFriends(String)
  nameWithType: IUsersManager.GetFriends(String)
  fullName: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends(System.String)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends(System.String)
    name: GetFriends
    nameWithType: IUsersManager.GetFriends
    fullName: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends(System.String)
    name: GetFriends
    nameWithType: IUsersManager.GetFriends
    fullName: ChineseCheckersLogicServer.Contracts.IUsersManager.GetFriends
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer*
  commentId: Overload:ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer
  name: GetSessionPlayer
  nameWithType: ManagerController.GetSessionPlayer
  fullName: ChineseCheckersLogicServer.Controller.ManagerController.GetSessionPlayer
- uid: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer(System.Int32)
  commentId: M:ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer(System.Int32)
  parent: ChineseCheckersLogicServer.Contracts.IUserSession
  isExternal: true
  name: GetSessionPlayer(Int32)
  nameWithType: IUserSession.GetSessionPlayer(Int32)
  fullName: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer(System.Int32)
  spec.csharp:
  - uid: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer(System.Int32)
    name: GetSessionPlayer
    nameWithType: IUserSession.GetSessionPlayer
    fullName: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer(System.Int32)
    name: GetSessionPlayer
    nameWithType: IUserSession.GetSessionPlayer
    fullName: ChineseCheckersLogicServer.Contracts.IUserSession.GetSessionPlayer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
