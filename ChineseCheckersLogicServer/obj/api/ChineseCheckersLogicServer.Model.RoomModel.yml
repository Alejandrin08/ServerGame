### YamlMime:ManagedReference
items:
- uid: ChineseCheckersLogicServer.Model.RoomModel
  commentId: T:ChineseCheckersLogicServer.Model.RoomModel
  id: RoomModel
  parent: ChineseCheckersLogicServer.Model
  children:
  - ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers
  - ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers
  - ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers
  - ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers
  - ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers
  - ChineseCheckersLogicServer.Model.RoomModel.IdRoom
  - ChineseCheckersLogicServer.Model.RoomModel.Players
  - ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom
  langs:
  - csharp
  - vb
  name: RoomModel
  nameWithType: RoomModel
  fullName: ChineseCheckersLogicServer.Model.RoomModel
  type: Class
  source:
    remote:
      path: ChineseCheckersLogicServer/Model/RoomModel.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: RoomModel
    path: Model/RoomModel.cs
    startLine: 9
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Model
  syntax:
    content: >-
      [DataContract]

      public class RoomModel
    content.vb: >-
      <DataContract>

      Public Class RoomModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ChineseCheckersLogicServer.Model.RoomModel.IdRoom
  commentId: P:ChineseCheckersLogicServer.Model.RoomModel.IdRoom
  id: IdRoom
  parent: ChineseCheckersLogicServer.Model.RoomModel
  langs:
  - csharp
  - vb
  name: IdRoom
  nameWithType: RoomModel.IdRoom
  fullName: ChineseCheckersLogicServer.Model.RoomModel.IdRoom
  type: Property
  source:
    remote:
      path: ChineseCheckersLogicServer/Model/RoomModel.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: IdRoom
    path: Model/RoomModel.cs
    startLine: 12
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Model
  syntax:
    content: >-
      [DataMember]

      public string IdRoom { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public Property IdRoom As String
  overload: ChineseCheckersLogicServer.Model.RoomModel.IdRoom*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Model.RoomModel.Players
  commentId: P:ChineseCheckersLogicServer.Model.RoomModel.Players
  id: Players
  parent: ChineseCheckersLogicServer.Model.RoomModel
  langs:
  - csharp
  - vb
  name: Players
  nameWithType: RoomModel.Players
  fullName: ChineseCheckersLogicServer.Model.RoomModel.Players
  type: Property
  source:
    remote:
      path: ChineseCheckersLogicServer/Model/RoomModel.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: Players
    path: Model/RoomModel.cs
    startLine: 14
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Model
  syntax:
    content: >-
      [DataMember]

      public Dictionary<string, IMessageCallback> Players { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,ChineseCheckersLogicServer.Contracts.IMessageCallback}
    content.vb: >-
      <DataMember>

      Public Property Players As Dictionary(Of String, IMessageCallback)
  overload: ChineseCheckersLogicServer.Model.RoomModel.Players*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom
  commentId: P:ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom
  id: PlayersRoom
  parent: ChineseCheckersLogicServer.Model.RoomModel
  langs:
  - csharp
  - vb
  name: PlayersRoom
  nameWithType: RoomModel.PlayersRoom
  fullName: ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom
  type: Property
  source:
    remote:
      path: ChineseCheckersLogicServer/Model/RoomModel.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: PlayersRoom
    path: Model/RoomModel.cs
    startLine: 16
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Model
  syntax:
    content: >-
      [DataMember]

      public Dictionary<string, IPlayersRoomCallback> PlayersRoom { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback}
    content.vb: >-
      <DataMember>

      Public Property PlayersRoom As Dictionary(Of String, IPlayersRoomCallback)
  overload: ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers
  commentId: P:ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers
  id: ColorForTwoPlayers
  parent: ChineseCheckersLogicServer.Model.RoomModel
  langs:
  - csharp
  - vb
  name: ColorForTwoPlayers
  nameWithType: RoomModel.ColorForTwoPlayers
  fullName: ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers
  type: Property
  source:
    remote:
      path: ChineseCheckersLogicServer/Model/RoomModel.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: ColorForTwoPlayers
    path: Model/RoomModel.cs
    startLine: 19
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Model
  syntax:
    content: public char[] ColorForTwoPlayers { get; set; }
    parameters: []
    return:
      type: System.Char[]
    content.vb: Public Property ColorForTwoPlayers As Char()
  overload: ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers
  commentId: P:ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers
  id: ColorForThreePlayers
  parent: ChineseCheckersLogicServer.Model.RoomModel
  langs:
  - csharp
  - vb
  name: ColorForThreePlayers
  nameWithType: RoomModel.ColorForThreePlayers
  fullName: ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers
  type: Property
  source:
    remote:
      path: ChineseCheckersLogicServer/Model/RoomModel.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: ColorForThreePlayers
    path: Model/RoomModel.cs
    startLine: 20
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Model
  syntax:
    content: public char[] ColorForThreePlayers { get; set; }
    parameters: []
    return:
      type: System.Char[]
    content.vb: Public Property ColorForThreePlayers As Char()
  overload: ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers
  commentId: P:ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers
  id: ColorForFourPlayers
  parent: ChineseCheckersLogicServer.Model.RoomModel
  langs:
  - csharp
  - vb
  name: ColorForFourPlayers
  nameWithType: RoomModel.ColorForFourPlayers
  fullName: ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers
  type: Property
  source:
    remote:
      path: ChineseCheckersLogicServer/Model/RoomModel.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: ColorForFourPlayers
    path: Model/RoomModel.cs
    startLine: 21
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Model
  syntax:
    content: public char[] ColorForFourPlayers { get; set; }
    parameters: []
    return:
      type: System.Char[]
    content.vb: Public Property ColorForFourPlayers As Char()
  overload: ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers
  commentId: P:ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers
  id: ColorForFivePlayers
  parent: ChineseCheckersLogicServer.Model.RoomModel
  langs:
  - csharp
  - vb
  name: ColorForFivePlayers
  nameWithType: RoomModel.ColorForFivePlayers
  fullName: ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers
  type: Property
  source:
    remote:
      path: ChineseCheckersLogicServer/Model/RoomModel.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: ColorForFivePlayers
    path: Model/RoomModel.cs
    startLine: 22
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Model
  syntax:
    content: public char[] ColorForFivePlayers { get; set; }
    parameters: []
    return:
      type: System.Char[]
    content.vb: Public Property ColorForFivePlayers As Char()
  overload: ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers
  commentId: P:ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers
  id: ColorForSixPlayers
  parent: ChineseCheckersLogicServer.Model.RoomModel
  langs:
  - csharp
  - vb
  name: ColorForSixPlayers
  nameWithType: RoomModel.ColorForSixPlayers
  fullName: ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers
  type: Property
  source:
    remote:
      path: ChineseCheckersLogicServer/Model/RoomModel.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: ColorForSixPlayers
    path: Model/RoomModel.cs
    startLine: 23
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Model
  syntax:
    content: public char[] ColorForSixPlayers { get; set; }
    parameters: []
    return:
      type: System.Char[]
    content.vb: Public Property ColorForSixPlayers As Char()
  overload: ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: ChineseCheckersLogicServer.Model
  commentId: N:ChineseCheckersLogicServer.Model
  name: ChineseCheckersLogicServer.Model
  nameWithType: ChineseCheckersLogicServer.Model
  fullName: ChineseCheckersLogicServer.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ChineseCheckersLogicServer.Model.RoomModel.IdRoom*
  commentId: Overload:ChineseCheckersLogicServer.Model.RoomModel.IdRoom
  name: IdRoom
  nameWithType: RoomModel.IdRoom
  fullName: ChineseCheckersLogicServer.Model.RoomModel.IdRoom
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ChineseCheckersLogicServer.Model.RoomModel.Players*
  commentId: Overload:ChineseCheckersLogicServer.Model.RoomModel.Players
  name: Players
  nameWithType: RoomModel.Players
  fullName: ChineseCheckersLogicServer.Model.RoomModel.Players
- uid: System.Collections.Generic.Dictionary{System.String,ChineseCheckersLogicServer.Contracts.IMessageCallback}
  commentId: T:System.Collections.Generic.Dictionary{System.String,ChineseCheckersLogicServer.Contracts.IMessageCallback}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, IMessageCallback>
  nameWithType: Dictionary<String, IMessageCallback>
  fullName: System.Collections.Generic.Dictionary<System.String, ChineseCheckersLogicServer.Contracts.IMessageCallback>
  nameWithType.vb: Dictionary(Of String, IMessageCallback)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, ChineseCheckersLogicServer.Contracts.IMessageCallback)
  name.vb: Dictionary(Of String, IMessageCallback)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ChineseCheckersLogicServer.Contracts.IMessageCallback
    name: IMessageCallback
    nameWithType: IMessageCallback
    fullName: ChineseCheckersLogicServer.Contracts.IMessageCallback
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ChineseCheckersLogicServer.Contracts.IMessageCallback
    name: IMessageCallback
    nameWithType: IMessageCallback
    fullName: ChineseCheckersLogicServer.Contracts.IMessageCallback
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom*
  commentId: Overload:ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom
  name: PlayersRoom
  nameWithType: RoomModel.PlayersRoom
  fullName: ChineseCheckersLogicServer.Model.RoomModel.PlayersRoom
- uid: System.Collections.Generic.Dictionary{System.String,ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback}
  commentId: T:System.Collections.Generic.Dictionary{System.String,ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, IPlayersRoomCallback>
  nameWithType: Dictionary<String, IPlayersRoomCallback>
  fullName: System.Collections.Generic.Dictionary<System.String, ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback>
  nameWithType.vb: Dictionary(Of String, IPlayersRoomCallback)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback)
  name.vb: Dictionary(Of String, IPlayersRoomCallback)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
    name: IPlayersRoomCallback
    nameWithType: IPlayersRoomCallback
    fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
    name: IPlayersRoomCallback
    nameWithType: IPlayersRoomCallback
    fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
  - name: )
    nameWithType: )
    fullName: )
- uid: ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers*
  commentId: Overload:ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers
  name: ColorForTwoPlayers
  nameWithType: RoomModel.ColorForTwoPlayers
  fullName: ChineseCheckersLogicServer.Model.RoomModel.ColorForTwoPlayers
- uid: System.Char[]
  isExternal: true
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers*
  commentId: Overload:ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers
  name: ColorForThreePlayers
  nameWithType: RoomModel.ColorForThreePlayers
  fullName: ChineseCheckersLogicServer.Model.RoomModel.ColorForThreePlayers
- uid: ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers*
  commentId: Overload:ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers
  name: ColorForFourPlayers
  nameWithType: RoomModel.ColorForFourPlayers
  fullName: ChineseCheckersLogicServer.Model.RoomModel.ColorForFourPlayers
- uid: ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers*
  commentId: Overload:ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers
  name: ColorForFivePlayers
  nameWithType: RoomModel.ColorForFivePlayers
  fullName: ChineseCheckersLogicServer.Model.RoomModel.ColorForFivePlayers
- uid: ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers*
  commentId: Overload:ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers
  name: ColorForSixPlayers
  nameWithType: RoomModel.ColorForSixPlayers
  fullName: ChineseCheckersLogicServer.Model.RoomModel.ColorForSixPlayers
