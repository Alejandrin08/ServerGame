### YamlMime:ManagedReference
items:
- uid: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
  commentId: T:ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
  id: IPlayersRoomCallback
  parent: ChineseCheckersLogicServer.Contracts
  children:
  - ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback(System.Collections.Generic.Dictionary{System.String,System.Char})
  - ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback(System.Collections.Generic.List{System.String})
  - ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback
  langs:
  - csharp
  - vb
  name: IPlayersRoomCallback
  nameWithType: IPlayersRoomCallback
  fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
  type: Interface
  source:
    remote:
      path: ChineseCheckersLogicServer/Contracts/IRoom.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: IPlayersRoomCallback
    path: Contracts/IRoom.cs
    startLine: 52
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Contracts
  syntax:
    content: >-
      [ServiceContract]

      public interface IPlayersRoomCallback
    content.vb: >-
      <ServiceContract>

      Public Interface IPlayersRoomCallback
  attributes:
  - type: System.ServiceModel.ServiceContractAttribute
    ctor: System.ServiceModel.ServiceContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback(System.Collections.Generic.List{System.String})
  commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback(System.Collections.Generic.List{System.String})
  id: GetPlayersRoomCallback(System.Collections.Generic.List{System.String})
  parent: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
  langs:
  - csharp
  - vb
  name: GetPlayersRoomCallback(List<String>)
  nameWithType: IPlayersRoomCallback.GetPlayersRoomCallback(List<String>)
  fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Contracts/IRoom.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: GetPlayersRoomCallback
    path: Contracts/IRoom.cs
    startLine: 54
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Contracts
  syntax:
    content: >-
      [OperationContract]

      void GetPlayersRoomCallback(List<string> playersInRoom)
    parameters:
    - id: playersInRoom
      type: System.Collections.Generic.List{System.String}
    content.vb: >-
      <OperationContract>

      Sub GetPlayersRoomCallback(playersInRoom As List(Of String))
  overload: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback*
  attributes:
  - type: System.ServiceModel.OperationContractAttribute
    ctor: System.ServiceModel.OperationContractAttribute.#ctor
    arguments: []
  nameWithType.vb: IPlayersRoomCallback.GetPlayersRoomCallback(List(Of String))
  fullName.vb: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback(System.Collections.Generic.List(Of System.String))
  name.vb: GetPlayersRoomCallback(List(Of String))
- uid: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback
  commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback
  id: SendToBoardCallback
  parent: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
  langs:
  - csharp
  - vb
  name: SendToBoardCallback()
  nameWithType: IPlayersRoomCallback.SendToBoardCallback()
  fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback()
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Contracts/IRoom.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: SendToBoardCallback
    path: Contracts/IRoom.cs
    startLine: 56
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Contracts
  syntax:
    content: >-
      [OperationContract]

      void SendToBoardCallback()
    content.vb: >-
      <OperationContract>

      Sub SendToBoardCallback
  overload: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback*
  attributes:
  - type: System.ServiceModel.OperationContractAttribute
    ctor: System.ServiceModel.OperationContractAttribute.#ctor
    arguments: []
- uid: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback(System.Collections.Generic.Dictionary{System.String,System.Char})
  commentId: M:ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback(System.Collections.Generic.Dictionary{System.String,System.Char})
  id: AssignColorsCallback(System.Collections.Generic.Dictionary{System.String,System.Char})
  parent: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback
  langs:
  - csharp
  - vb
  name: AssignColorsCallback(Dictionary<String, Char>)
  nameWithType: IPlayersRoomCallback.AssignColorsCallback(Dictionary<String, Char>)
  fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback(System.Collections.Generic.Dictionary<System.String, System.Char>)
  type: Method
  source:
    remote:
      path: ChineseCheckersLogicServer/Contracts/IRoom.cs
      branch: master
      repo: https://github.com/Alejandrin08/ServerGame.git
    id: AssignColorsCallback
    path: Contracts/IRoom.cs
    startLine: 58
  assemblies:
  - ChineseCheckersLogicServer
  namespace: ChineseCheckersLogicServer.Contracts
  syntax:
    content: >-
      [OperationContract]

      void AssignColorsCallback(Dictionary<string, char> dictionaryPlayersColor)
    parameters:
    - id: dictionaryPlayersColor
      type: System.Collections.Generic.Dictionary{System.String,System.Char}
    content.vb: >-
      <OperationContract>

      Sub AssignColorsCallback(dictionaryPlayersColor As Dictionary(Of String, Char))
  overload: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback*
  attributes:
  - type: System.ServiceModel.OperationContractAttribute
    ctor: System.ServiceModel.OperationContractAttribute.#ctor
    arguments: []
  nameWithType.vb: IPlayersRoomCallback.AssignColorsCallback(Dictionary(Of String, Char))
  fullName.vb: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback(System.Collections.Generic.Dictionary(Of System.String, System.Char))
  name.vb: AssignColorsCallback(Dictionary(Of String, Char))
references:
- uid: ChineseCheckersLogicServer.Contracts
  commentId: N:ChineseCheckersLogicServer.Contracts
  name: ChineseCheckersLogicServer.Contracts
  nameWithType: ChineseCheckersLogicServer.Contracts
  fullName: ChineseCheckersLogicServer.Contracts
- uid: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback*
  commentId: Overload:ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback
  name: GetPlayersRoomCallback
  nameWithType: IPlayersRoomCallback.GetPlayersRoomCallback
  fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.GetPlayersRoomCallback
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback*
  commentId: Overload:ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback
  name: SendToBoardCallback
  nameWithType: IPlayersRoomCallback.SendToBoardCallback
  fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.SendToBoardCallback
- uid: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback*
  commentId: Overload:ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback
  name: AssignColorsCallback
  nameWithType: IPlayersRoomCallback.AssignColorsCallback
  fullName: ChineseCheckersLogicServer.Contracts.IPlayersRoomCallback.AssignColorsCallback
- uid: System.Collections.Generic.Dictionary{System.String,System.Char}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Char}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Char>
  nameWithType: Dictionary<String, Char>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Char>
  nameWithType.vb: Dictionary(Of String, Char)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Char)
  name.vb: Dictionary(Of String, Char)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
